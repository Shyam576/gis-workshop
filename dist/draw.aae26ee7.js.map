{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-fd42d9cc86ad7b9f.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/Geometry.js","node_modules/ol/Object.js","node_modules/ol/events/Event.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Observable.js","node_modules/ol/events/Target.js","node_modules/ol/Disposable.js","node_modules/ol/functions.js","node_modules/ol/array.js","node_modules/ol/obj.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/util.js","node_modules/ol/transform.js","node_modules/ol/has.js","node_modules/ol/asserts.js","node_modules/ol/extent.js","node_modules/ol/extent/Relationship.js","node_modules/ol/proj.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/math.js","node_modules/ol/coordinate.js","node_modules/ol/string.js","node_modules/ol/sphere.js","node_modules/ol/console.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/Feature.js","node_modules/ol/geom/GeometryCollection.js","node_modules/ol/geom/LineString.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/length.js","node_modules/ol/geom/MultiLineString.js","node_modules/ol/geom/MultiPoint.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/MultiPolygon.js","node_modules/ol/geom/Polygon.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/center.js","node_modules/ol/render/Feature.js","node_modules/ol/geom.js","node_modules/ol/format/Feature.js","node_modules/ol/index.js","src/js/popup-message.js","node_modules/ol/format/GeoJSON.js","node_modules/ol/format/JSONFeature.js","node_modules/jsts/org/locationtech/jts/io/OL3Parser.js","node_modules/jsts/org/locationtech/jts/geom/Coordinate.js","node_modules/jsts/org/locationtech/jts/util/NumberUtil.js","node_modules/jsts/java/lang/IllegalArgumentException.js","node_modules/jsts/java/lang/Exception.js","node_modules/jsts/java/lang/Double.js","node_modules/jsts/java/lang/Long.js","node_modules/jsts/java/lang/Comparable.js","node_modules/jsts/java/io/Serializable.js","node_modules/jsts/org/locationtech/jts/util/Assert.js","node_modules/jsts/org/locationtech/jts/util/AssertionFailedException.js","node_modules/jsts/java/lang/RuntimeException.js","node_modules/jsts/java/lang/Cloneable.js","node_modules/jsts/java/util/Comparator.js","node_modules/jsts/org/locationtech/jts/geom/GeometryFactory.js","node_modules/jsts/hasInterface.js","node_modules/jsts/org/locationtech/jts/geom/LinearRing.js","node_modules/jsts/org/locationtech/jts/geom/LineString.js","node_modules/jsts/org/locationtech/jts/algorithm/Length.js","node_modules/jsts/org/locationtech/jts/geom/GeometryComponentFilter.js","node_modules/jsts/java/lang/UnsupportedOperationException.js","node_modules/jsts/org/locationtech/jts/geom/CoordinateArrays.js","node_modules/jsts/org/locationtech/jts/geom/CoordinateList.js","node_modules/jsts/java/util/Collection.js","node_modules/jsts/java/util/ArrayList.js","node_modules/jsts/java/lang/IndexOutOfBoundsException.js","node_modules/jsts/java/util/List.js","node_modules/jsts/java/util/NoSuchElementException.js","node_modules/jsts/org/locationtech/jts/geom/Coordinates.js","node_modules/jsts/org/locationtech/jts/geom/CoordinateXY.js","node_modules/jsts/org/locationtech/jts/geom/CoordinateXYM.js","node_modules/jsts/org/locationtech/jts/geom/CoordinateXYZM.js","node_modules/jsts/org/locationtech/jts/math/MathUtil.js","node_modules/jsts/java/lang/System.js","node_modules/jsts/org/locationtech/jts/geom/Envelope.js","node_modules/jsts/org/locationtech/jts/geom/Dimension.js","node_modules/jsts/java/lang/Character.js","node_modules/jsts/org/locationtech/jts/geom/Geometry.js","node_modules/jsts/org/locationtech/jts/geom/CoordinateFilter.js","node_modules/jsts/org/locationtech/jts/geom/Lineal.js","node_modules/jsts/org/locationtech/jts/geom/CoordinateSequences.js","node_modules/jsts/org/locationtech/jts/geom/CoordinateSequence.js","node_modules/jsts/org/locationtech/jts/geom/GeometryFilter.js","node_modules/jsts/org/locationtech/jts/geom/CoordinateSequenceFilter.js","node_modules/jsts/org/locationtech/jts/geom/impl/CoordinateArraySequenceFactory.js","node_modules/jsts/org/locationtech/jts/geom/CoordinateSequenceFactory.js","node_modules/jsts/org/locationtech/jts/geom/impl/CoordinateArraySequence.js","node_modules/jsts/java/lang/StringBuilder.js","node_modules/jsts/org/locationtech/jts/geom/MultiPolygon.js","node_modules/jsts/org/locationtech/jts/geom/GeometryCollection.js","node_modules/jsts/java/util/TreeSet.js","node_modules/jsts/java/util/SortedSet.js","node_modules/jsts/java/util/Set.js","node_modules/jsts/java/util/Arrays.js","node_modules/jsts/org/locationtech/jts/geom/Polygonal.js","node_modules/jsts/org/locationtech/jts/geom/PrecisionModel.js","node_modules/jsts/java/util/HashMap.js","node_modules/jsts/java/util/Map.js","node_modules/jsts/java/util/HashSet.js","node_modules/jsts/java/lang/Integer.js","node_modules/jsts/org/locationtech/jts/geom/MultiLineString.js","node_modules/jsts/org/locationtech/jts/geom/Point.js","node_modules/jsts/org/locationtech/jts/geom/Puntal.js","node_modules/jsts/java/lang/IllegalStateException.js","node_modules/jsts/org/locationtech/jts/geom/Polygon.js","node_modules/jsts/org/locationtech/jts/algorithm/Area.js","node_modules/jsts/org/locationtech/jts/algorithm/Orientation.js","node_modules/jsts/org/locationtech/jts/algorithm/CGAlgorithmsDD.js","node_modules/jsts/org/locationtech/jts/math/DD.js","node_modules/jsts/java/lang/StringBuffer.js","node_modules/jsts/org/locationtech/jts/geom/MultiPoint.js","node_modules/jsts/org/locationtech/jts/geom/IntersectionMatrix.js","node_modules/jsts/org/locationtech/jts/geom/Location.js","node_modules/jsts/org/locationtech/jts/geomgraph/EdgeEnd.js","node_modules/jsts/org/locationtech/jts/geomgraph/Quadrant.js","node_modules/jsts/org/locationtech/jts/geomgraph/Label.js","node_modules/jsts/org/locationtech/jts/geomgraph/Position.js","node_modules/jsts/org/locationtech/jts/geomgraph/TopologyLocation.js","node_modules/jsts/org/locationtech/jts/geomgraph/NodeMap.js","node_modules/jsts/org/locationtech/jts/geomgraph/Node.js","node_modules/jsts/org/locationtech/jts/geomgraph/GraphComponent.js","node_modules/jsts/java/util/TreeMap.js","node_modules/jsts/java/util/SortedMap.js","node_modules/jsts/org/locationtech/jts/geomgraph/EdgeEndStar.js","node_modules/jsts/org/locationtech/jts/geom/TopologyException.js","node_modules/jsts/org/locationtech/jts/algorithm/locate/SimplePointInAreaLocator.js","node_modules/jsts/org/locationtech/jts/algorithm/PointLocation.js","node_modules/jsts/org/locationtech/jts/algorithm/RobustLineIntersector.js","node_modules/jsts/org/locationtech/jts/algorithm/Intersection.js","node_modules/jsts/org/locationtech/jts/algorithm/Distance.js","node_modules/jsts/org/locationtech/jts/algorithm/LineIntersector.js","node_modules/jsts/org/locationtech/jts/io/WKTWriter.js","node_modules/jsts/org/locationtech/jts/io/WKTParser.js","node_modules/jsts/org/locationtech/jts/algorithm/RayCrossingCounter.js","node_modules/jsts/org/locationtech/jts/algorithm/locate/PointOnGeometryLocator.js","node_modules/jsts/org/locationtech/jts/geom/GeometryCollectionIterator.js","node_modules/jsts/java/util/Iterator.js","node_modules/jsts/org/locationtech/jts/geomgraph/GeometryGraph.js","node_modules/jsts/org/locationtech/jts/geomgraph/index/SimpleMCSweepLineIntersector.js","node_modules/jsts/org/locationtech/jts/geomgraph/index/EdgeSetIntersector.js","node_modules/jsts/java/util/Collections.js","node_modules/jsts/org/locationtech/jts/geomgraph/index/SegmentIntersector.js","node_modules/jsts/org/locationtech/jts/geomgraph/index/MonotoneChain.js","node_modules/jsts/org/locationtech/jts/geomgraph/index/SweepLineEvent.js","node_modules/jsts/org/locationtech/jts/geomgraph/PlanarGraph.js","node_modules/jsts/org/locationtech/jts/geomgraph/NodeFactory.js","node_modules/jsts/org/locationtech/jts/geomgraph/DirectedEdge.js","node_modules/jsts/org/locationtech/jts/algorithm/PointLocator.js","node_modules/jsts/org/locationtech/jts/algorithm/BoundaryNodeRule.js","node_modules/jsts/org/locationtech/jts/algorithm/locate/IndexedPointInAreaLocator.js","node_modules/jsts/org/locationtech/jts/index/ItemVisitor.js","node_modules/jsts/org/locationtech/jts/index/intervalrtree/SortedPackedIntervalRTree.js","node_modules/jsts/org/locationtech/jts/index/intervalrtree/IntervalRTreeLeafNode.js","node_modules/jsts/org/locationtech/jts/index/intervalrtree/IntervalRTreeNode.js","node_modules/jsts/org/locationtech/jts/index/intervalrtree/IntervalRTreeBranchNode.js","node_modules/jsts/org/locationtech/jts/geom/LineSegment.js","node_modules/jsts/org/locationtech/jts/geom/util/LinearComponentExtracter.js","node_modules/jsts/org/locationtech/jts/index/ArrayListVisitor.js","node_modules/jsts/org/locationtech/jts/geomgraph/Edge.js","node_modules/jsts/org/locationtech/jts/geomgraph/EdgeIntersectionList.js","node_modules/jsts/org/locationtech/jts/geomgraph/EdgeIntersection.js","node_modules/jsts/org/locationtech/jts/geomgraph/Depth.js","node_modules/jsts/org/locationtech/jts/geomgraph/index/MonotoneChainEdge.js","node_modules/jsts/org/locationtech/jts/geomgraph/index/MonotoneChainIndexer.js","node_modules/jsts/org/locationtech/jts/util/IntArrayList.js","node_modules/jsts/org/locationtech/jts/operation/GeometryGraphOperation.js","node_modules/jsts/org/locationtech/jts/operation/union.js","node_modules/jsts/org/locationtech/jts/operation/union/UnaryUnionOp.js","node_modules/jsts/org/locationtech/jts/operation/overlay/snap/SnapIfNeededOverlayOp.js","node_modules/jsts/org/locationtech/jts/operation/overlay/snap/SnapOverlayOp.js","node_modules/jsts/org/locationtech/jts/operation/overlay/snap/GeometrySnapper.js","node_modules/jsts/org/locationtech/jts/operation/buffer/BufferOp.js","node_modules/jsts/org/locationtech/jts/operation/buffer/BufferParameters.js","node_modules/jsts/org/locationtech/jts/noding/ScaledNoder.js","node_modules/jsts/org/locationtech/jts/noding/NodedSegmentString.js","node_modules/jsts/org/locationtech/jts/noding/SegmentNodeList.js","node_modules/jsts/org/locationtech/jts/noding/SegmentNode.js","node_modules/jsts/org/locationtech/jts/noding/SegmentPointComparator.js","node_modules/jsts/org/locationtech/jts/noding/Octant.js","node_modules/jsts/org/locationtech/jts/noding/NodableSegmentString.js","node_modules/jsts/org/locationtech/jts/noding/SegmentString.js","node_modules/jsts/org/locationtech/jts/noding/Noder.js","node_modules/jsts/org/locationtech/jts/noding/snapround/MCIndexSnapRounder.js","node_modules/jsts/org/locationtech/jts/noding/NodingValidator.js","node_modules/jsts/org/locationtech/jts/noding/MCIndexNoder.js","node_modules/jsts/org/locationtech/jts/index/strtree/STRtree.js","node_modules/jsts/org/locationtech/jts/index/strtree/ItemBoundable.js","node_modules/jsts/org/locationtech/jts/index/strtree/Boundable.js","node_modules/jsts/java/util/PriorityQueue.js","node_modules/fastpriorityqueue/FastPriorityQueue.js","node_modules/jsts/org/locationtech/jts/index/SpatialIndex.js","node_modules/jsts/org/locationtech/jts/index/strtree/AbstractNode.js","node_modules/jsts/org/locationtech/jts/index/strtree/BoundablePair.js","node_modules/jsts/org/locationtech/jts/index/strtree/EnvelopeDistance.js","node_modules/jsts/org/locationtech/jts/index/strtree/AbstractSTRtree.js","node_modules/jsts/org/locationtech/jts/index/strtree/ItemDistance.js","node_modules/jsts/org/locationtech/jts/index/chain/MonotoneChainOverlapAction.js","node_modules/jsts/org/locationtech/jts/index/chain/MonotoneChainBuilder.js","node_modules/jsts/org/locationtech/jts/index/chain/MonotoneChain.js","node_modules/jsts/org/locationtech/jts/noding/SinglePassNoder.js","node_modules/jsts/org/locationtech/jts/noding/snapround/HotPixel.js","node_modules/jsts/org/locationtech/jts/noding/snapround/MCIndexPointSnapper.js","node_modules/jsts/org/locationtech/jts/index/chain/MonotoneChainSelectAction.js","node_modules/jsts/org/locationtech/jts/noding/InteriorIntersectionFinderAdder.js","node_modules/jsts/org/locationtech/jts/noding/SegmentIntersector.js","node_modules/jsts/org/locationtech/jts/operation/buffer/BufferBuilder.js","node_modules/jsts/org/locationtech/jts/operation/buffer/BufferSubgraph.js","node_modules/jsts/java/util/Stack.js","node_modules/jsts/java/util/EmptyStackException.js","node_modules/jsts/org/locationtech/jts/operation/buffer/RightmostEdgeFinder.js","node_modules/jsts/java/util/LinkedList.js","node_modules/jsts/org/locationtech/jts/operation/buffer/OffsetCurveBuilder.js","node_modules/jsts/org/locationtech/jts/operation/buffer/BufferInputLineSimplifier.js","node_modules/jsts/org/locationtech/jts/operation/buffer/OffsetSegmentGenerator.js","node_modules/jsts/org/locationtech/jts/operation/buffer/OffsetSegmentString.js","node_modules/jsts/org/locationtech/jts/algorithm/Angle.js","node_modules/jsts/org/locationtech/jts/operation/overlay/PolygonBuilder.js","node_modules/jsts/org/locationtech/jts/operation/overlay/MaximalEdgeRing.js","node_modules/jsts/org/locationtech/jts/operation/overlay/MinimalEdgeRing.js","node_modules/jsts/org/locationtech/jts/geomgraph/EdgeRing.js","node_modules/jsts/org/locationtech/jts/operation/buffer/SubgraphDepthLocater.js","node_modules/jsts/org/locationtech/jts/operation/buffer/OffsetCurveSetBuilder.js","node_modules/jsts/org/locationtech/jts/geom/Triangle.js","node_modules/jsts/org/locationtech/jts/algorithm/HCoordinate.js","node_modules/jsts/org/locationtech/jts/algorithm/NotRepresentableException.js","node_modules/jsts/org/locationtech/jts/operation/overlay/OverlayNodeFactory.js","node_modules/jsts/org/locationtech/jts/geomgraph/DirectedEdgeStar.js","node_modules/jsts/org/locationtech/jts/geomgraph/EdgeList.js","node_modules/jsts/org/locationtech/jts/noding/OrientedCoordinateArray.js","node_modules/jsts/org/locationtech/jts/noding/IntersectionAdder.js","node_modules/jsts/org/locationtech/jts/operation/overlay/snap/LineStringSnapper.js","node_modules/jsts/org/locationtech/jts/geom/util/GeometryTransformer.js","node_modules/jsts/org/locationtech/jts/precision/CommonBitsRemover.js","node_modules/jsts/org/locationtech/jts/precision/CommonBits.js","node_modules/jsts/org/locationtech/jts/operation/overlay/OverlayOp.js","node_modules/jsts/org/locationtech/jts/operation/overlay/LineBuilder.js","node_modules/jsts/org/locationtech/jts/operation/overlay/PointBuilder.js","node_modules/jsts/org/locationtech/jts/geomgraph/EdgeNodingValidator.js","node_modules/jsts/org/locationtech/jts/noding/BasicSegmentString.js","node_modules/jsts/org/locationtech/jts/noding/FastNodingValidator.js","node_modules/jsts/org/locationtech/jts/noding/NodingIntersectionFinder.js","node_modules/jsts/org/locationtech/jts/geom/util/GeometryCollectionMapper.js","node_modules/jsts/org/locationtech/jts/operation/union/InputExtracter.js","node_modules/jsts/org/locationtech/jts/operation/union/PointGeometryUnion.js","node_modules/jsts/org/locationtech/jts/geom/util/GeometryCombiner.js","node_modules/jsts/org/locationtech/jts/operation/union/CascadedPolygonUnion.js","node_modules/jsts/org/locationtech/jts/geom/util/PolygonExtracter.js","node_modules/jsts/org/locationtech/jts/operation/union/OverlapUnion.js","node_modules/jsts/org/locationtech/jts/operation/union/UnionOp.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 1234;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"d8429c73aae26ee7\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          // Ignore cloudflare workers error.\n          if (err.message && !err.message.includes('Disallowed operation called within global scope')) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      }\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.2.0';\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/geom\n */\n\nexport {default as Circle} from './geom/Circle.js';\nexport {default as Geometry} from './geom/Geometry.js';\nexport {default as GeometryCollection} from './geom/GeometryCollection.js';\nexport {default as LinearRing} from './geom/LinearRing.js';\nexport {default as LineString} from './geom/LineString.js';\nexport {default as MultiLineString} from './geom/MultiLineString.js';\nexport {default as MultiPoint} from './geom/MultiPoint.js';\nexport {default as MultiPolygon} from './geom/MultiPolygon.js';\nexport {default as Point} from './geom/Point.js';\nexport {default as Polygon} from './geom/Polygon.js';\nexport {default as SimpleGeometry} from './geom/SimpleGeometry.js';\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass = Feature;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id\n    ).enableSimplifyTransformed(),\n    false,\n    options\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options)\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options\n  );\n}\n","/**\n * @module ol\n */\n\nexport {default as Collection} from './Collection.js';\nexport {default as Disposable} from './Disposable.js';\nexport {default as Feature} from './Feature.js';\nexport {default as Geolocation} from './Geolocation.js';\nexport {default as Graticule} from './layer/Graticule.js';\nexport {default as Image} from './Image.js';\nexport {default as ImageWrapper} from './Image.js';\nexport {default as ImageCanvas} from './ImageCanvas.js';\nexport {default as ImageTile} from './ImageTile.js';\nexport {default as Kinetic} from './Kinetic.js';\nexport {default as Map} from './Map.js';\nexport {default as MapBrowserEvent} from './MapBrowserEvent.js';\nexport {default as MapBrowserEventHandler} from './MapBrowserEventHandler.js';\nexport {default as MapEvent} from './MapEvent.js';\nexport {default as Object} from './Object.js';\nexport {default as Observable} from './Observable.js';\nexport {default as Overlay} from './Overlay.js';\nexport {default as Tile} from './Tile.js';\nexport {default as TileCache} from './TileCache.js';\nexport {default as TileQueue} from './TileQueue.js';\nexport {default as TileRange} from './TileRange.js';\nexport {default as VectorRenderTile} from './VectorRenderTile.js';\nexport {default as VectorTile} from './VectorTile.js';\nexport {default as View} from './View.js';\n\nexport {getUid, VERSION} from './util.js';\n","/**\n * Show a popup message that automatically disappears\n * @param {string} message - The message to display\n * @param {string} type - Message type: 'success', 'error', 'warning', or 'info'\n * @param {number} duration - Duration in milliseconds before the message disappears\n */\nexport function showPopupMessage(message, type = 'info', duration = 5000) {\n  // Create popup element\n  const popup = document.createElement('div');\n  popup.className = `popup-message ${type}`;\n  popup.textContent = message;\n  \n  // Add to document\n  document.body.appendChild(popup);\n  \n  // Remove after duration\n  setTimeout(() => {\n    popup.style.opacity = '0';\n    setTimeout(() => {\n      document.body.removeChild(popup);\n    }, 500); // Wait for fade out animation\n  }, duration);\n}","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Feature|RenderFeature|Array<RenderFeature>}.default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return createRenderFeature(\n        {\n          geometry,\n          id: geoJSONFeature['id'],\n          properties: geoJSONFeature['properties'],\n        },\n        options\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature|RenderFeature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<Feature|RenderFeature|Array<RenderFeature>>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features.flat();\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    }\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0].length),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0][0].length;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0].length),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0][0][0].length;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0][0].length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default|import(\"../render/Feature.js\").default|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default|import(\"../render/Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n"," \n\n/**\n * @module org/locationtech/jts/io/OL3Parser\n */\n\nimport Coordinate from '../geom/Coordinate.js'\nimport GeometryFactory from '../geom/GeometryFactory.js'\n\nfunction p2c(p) {\n  return [p.x, p.y]\n}\n\nexport default class OL3Parser {\n  /**\n   * OpenLayers Geometry parser and writer\n   * @param {GeometryFactory} geometryFactory\n   * @param {ol} olReference\n   */\n  constructor(geometryFactory, olReference) {\n    this.geometryFactory = geometryFactory || new GeometryFactory()\n    this.ol = olReference || (typeof ol !== 'undefined' && ol)\n  }\n\n  /**\n   * Inject OpenLayers geom classes\n   */\n  inject(Point, LineString, LinearRing, Polygon, MultiPoint, MultiLineString, MultiPolygon, GeometryCollection) {\n    this.ol = {\n      geom: {\n        Point, LineString, LinearRing, Polygon, MultiPoint, MultiLineString, MultiPolygon, GeometryCollection\n      }\n    }\n  }\n\n  /**\n   * @param geometry {ol.geom.Geometry}\n   * @return {Geometry}\n   * @memberof module:org/locationtech/jts/io/OL3Parser#\n   */\n  read(geometry) {\n    const ol = this.ol\n    if (geometry instanceof ol.geom.Point)\n      return this.convertFromPoint(geometry)\n    else if (geometry instanceof ol.geom.LineString)\n      return this.convertFromLineString(geometry)\n    else if (geometry instanceof ol.geom.LinearRing)\n      return this.convertFromLinearRing(geometry)\n    else if (geometry instanceof ol.geom.Polygon)\n      return this.convertFromPolygon(geometry)\n    else if (geometry instanceof ol.geom.MultiPoint)\n      return this.convertFromMultiPoint(geometry)\n    else if (geometry instanceof ol.geom.MultiLineString)\n      return this.convertFromMultiLineString(geometry)\n    else if (geometry instanceof ol.geom.MultiPolygon)\n      return this.convertFromMultiPolygon(geometry)\n    else if (geometry instanceof ol.geom.GeometryCollection) return this.convertFromCollection(geometry)\n  }\n\n  convertFromPoint(point) {\n    const coordinates = point.getCoordinates()\n    return this.geometryFactory.createPoint(new Coordinate(coordinates[0], coordinates[1]))\n  }\n\n  convertFromLineString(lineString) {\n    return this.geometryFactory.createLineString(lineString.getCoordinates().map(function(coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  }\n\n  convertFromLinearRing(linearRing) {\n    return this.geometryFactory.createLinearRing(linearRing.getCoordinates().map(function(coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  }\n\n  convertFromPolygon(polygon) {\n    const linearRings = polygon.getLinearRings()\n    let shell = null\n    const holes = []\n    for (let i = 0; i < linearRings.length; i++) {\n      const linearRing = this.convertFromLinearRing(linearRings[i])\n      if (i === 0)\n        shell = linearRing\n      else holes.push(linearRing)\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  }\n\n  convertFromMultiPoint(multiPoint) {\n    const points = multiPoint.getPoints().map(function(point) {\n      return this.convertFromPoint(point)\n    }, this)\n    return this.geometryFactory.createMultiPoint(points)\n  }\n\n  convertFromMultiLineString(multiLineString) {\n    const lineStrings = multiLineString.getLineStrings().map(function(lineString) {\n      return this.convertFromLineString(lineString)\n    }, this)\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  }\n\n  convertFromMultiPolygon(multiPolygon) {\n    const polygons = multiPolygon.getPolygons().map(function(polygon) {\n      return this.convertFromPolygon(polygon)\n    }, this)\n    return this.geometryFactory.createMultiPolygon(polygons)\n  }\n\n  convertFromCollection(collection) {\n    const geometries = collection.getGeometries().map(function(geometry) {\n      return this.read(geometry)\n    }, this)\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n\n  /**\n   * @param geometry\n   *          {Geometry}\n   * @return {ol.geom.Geometry}\n   * @memberof module:org/locationtech/jts/io/OL3Parser#\n   */\n  write(geometry) {\n    if (geometry.getGeometryType() === 'Point')\n      return this.convertToPoint(geometry.getCoordinate())\n    else if (geometry.getGeometryType() === 'LineString')\n      return this.convertToLineString(geometry)\n    else if (geometry.getGeometryType() === 'LinearRing')\n      return this.convertToLinearRing(geometry)\n    else if (geometry.getGeometryType() === 'Polygon')\n      return this.convertToPolygon(geometry)\n    else if (geometry.getGeometryType() === 'MultiPoint')\n      return this.convertToMultiPoint(geometry)\n    else if (geometry.getGeometryType() === 'MultiLineString')\n      return this.convertToMultiLineString(geometry)\n    else if (geometry.getGeometryType() === 'MultiPolygon')\n      return this.convertToMultiPolygon(geometry)\n    else if (geometry.getGeometryType() === 'GeometryCollection') return this.convertToCollection(geometry)\n  }\n\n  convertToPoint(coordinate) {\n    return new this.ol.geom.Point([coordinate.x, coordinate.y])\n  }\n\n  convertToLineString(lineString) {\n    const points = lineString._points._coordinates.map(p2c)\n    return new this.ol.geom.LineString(points)\n  }\n\n  convertToLinearRing(linearRing) {\n    const points = linearRing._points._coordinates.map(p2c)\n    return new this.ol.geom.LinearRing(points)\n  }\n\n  convertToPolygon(polygon) {\n    const rings = [polygon._shell._points._coordinates.map(p2c)]\n    for (let i = 0; i < polygon._holes.length; i++) rings.push(polygon._holes[i]._points._coordinates.map(p2c))\n\n    return new this.ol.geom.Polygon(rings)\n  }\n\n  convertToMultiPoint(multiPoint) {\n    return new this.ol.geom.MultiPoint(multiPoint.getCoordinates().map(p2c))\n  }\n\n  convertToMultiLineString(multiLineString) {\n    const lineStrings = []\n    for (let i = 0; i < multiLineString._geometries.length; i++) lineStrings.push(this.convertToLineString(multiLineString._geometries[i]).getCoordinates())\n\n    return new this.ol.geom.MultiLineString(lineStrings)\n  }\n\n  convertToMultiPolygon(multiPolygon) {\n    const polygons = []\n    for (let i = 0; i < multiPolygon._geometries.length; i++) polygons.push(this.convertToPolygon(multiPolygon._geometries[i]).getCoordinates())\n\n    return new this.ol.geom.MultiPolygon(polygons)\n  }\n\n  convertToCollection(geometryCollection) {\n    const geometries = []\n    for (let i = 0; i < geometryCollection._geometries.length; i++) {\n      const geometry = geometryCollection._geometries[i]\n      geometries.push(this.write(geometry))\n    }\n    return new this.ol.geom.GeometryCollection(geometries)\n  }\n}\n","import NumberUtil from '../util/NumberUtil.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport Assert from '../util/Assert.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nimport Comparator from '../../../../java/util/Comparator.js'\n\nconst kBuf = new ArrayBuffer(8)\nconst kBufAsF64 = new Float64Array(kBuf)\nconst kBufAsI32 = new Int32Array(kBuf)\n\nexport default class Coordinate {\n  constructor() {\n    Coordinate.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.x = null\n    this.y = null\n    this.z = null\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this, 0.0, 0.0)\n    } else if (arguments.length === 1) {\n      const c = arguments[0]\n      Coordinate.constructor_.call(this, c.x, c.y, c.getZ())\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      Coordinate.constructor_.call(this, x, y, Coordinate.NULL_ORDINATE)\n    } else if (arguments.length === 3) {\n      const x = arguments[0], y = arguments[1], z = arguments[2]\n      this.x = x\n      this.y = y\n      this.z = z\n    }\n  }\n  static hashCode(n) {\n    kBufAsF64[0] = n\n    return kBufAsI32[0] ^ kBufAsI32[1]\n  }\n  equals2D() {\n    if (arguments.length === 1) {\n      const other = arguments[0]\n      if (this.x !== other.x) \n        return false\n      \n      if (this.y !== other.y) \n        return false\n      \n      return true\n    } else if (arguments.length === 2) {\n      const c = arguments[0], tolerance = arguments[1]\n      if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) \n        return false\n      \n      if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) \n        return false\n      \n      return true\n    }\n  }\n  setM(m) {\n    throw new IllegalArgumentException('Invalid ordinate index: ' + Coordinate.M)\n  }\n  equals3D(other) {\n    return this.x === other.x && this.y === other.y && (this.getZ() === other.getZ() || Double.isNaN(this.getZ()) && Double.isNaN(other.getZ()))\n  }\n  setX(x) {\n    this.x = x\n  }\n  compareTo(o) {\n    const other = o\n    if (this.x < other.x) return -1\n    if (this.x > other.x) return 1\n    if (this.y < other.y) return -1\n    if (this.y > other.y) return 1\n    return 0\n  }\n  getX() {\n    return this.x\n  }\n  copy() {\n    return new Coordinate(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ', ' + this.getZ() + ')'\n  }\n  distance3D(c) {\n    const dx = this.x - c.x\n    const dy = this.y - c.y\n    const dz = this.getZ() - c.getZ()\n    return Math.sqrt(dx * dx + dy * dy + dz * dz)\n  }\n  getY() {\n    return this.y\n  }\n  getM() {\n    return Double.NaN\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value\n      break\n    case Coordinate.Y:\n      this.y = value\n      break\n    case Coordinate.Z:\n      this.setZ(value)\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n  getZ() {\n    return this.z\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.getZ()\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n  equals(other) {\n    if (!(other instanceof Coordinate)) \n      return false\n    \n    return this.equals2D(other)\n  }\n  equalInZ(c, tolerance) {\n    return NumberUtil.equalsWithTolerance(this.getZ(), c.getZ(), tolerance)\n  }\n  setZ(z) {\n    this.z = z\n  }\n  clone() {\n    try {\n      const coord = null\n      return coord\n    } catch (e) {\n      if (e instanceof CloneNotSupportedException) {\n        Assert.shouldNeverReachHere('this shouldn\\'t happen because this class is Cloneable')\n        return null\n      } else {\n        throw e\n      }\n    } finally {}\n  }\n  setY(y) {\n    this.y = y\n  }\n  distance(c) {\n    const dx = this.x - c.x\n    const dy = this.y - c.y\n    return Math.sqrt(dx * dx + dy * dy)\n  }\n  hashCode() {\n    let result = 17\n    result = 37 * result + Coordinate.hashCode(this.x)\n    result = 37 * result + Coordinate.hashCode(this.y)\n    return result\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n  }\n  get interfaces_() {\n    return [Comparable, Cloneable, Serializable]\n  }\n}\nclass DimensionalComparator {\n  constructor() {\n    DimensionalComparator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._dimensionsToTest = 2\n    if (arguments.length === 0) {\n      DimensionalComparator.constructor_.call(this, 2)\n    } else if (arguments.length === 1) {\n      const dimensionsToTest = arguments[0]\n      if (dimensionsToTest !== 2 && dimensionsToTest !== 3) throw new IllegalArgumentException('only 2 or 3 dimensions may be specified')\n      this._dimensionsToTest = dimensionsToTest\n    }\n  }\n  static compare(a, b) {\n    if (a < b) return -1\n    if (a > b) return 1\n    if (Double.isNaN(a)) {\n      if (Double.isNaN(b)) return 0\n      return -1\n    }\n    if (Double.isNaN(b)) return 1\n    return 0\n  }\n  compare(c1, c2) {\n    const compX = DimensionalComparator.compare(c1.x, c2.x)\n    if (compX !== 0) return compX\n    const compY = DimensionalComparator.compare(c1.y, c2.y)\n    if (compY !== 0) return compY\n    if (this._dimensionsToTest <= 2) return 0\n    const compZ = DimensionalComparator.compare(c1.getZ(), c2.getZ())\n    return compZ\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nCoordinate.DimensionalComparator = DimensionalComparator\nCoordinate.NULL_ORDINATE = Double.NaN\nCoordinate.X = 0\nCoordinate.Y = 1\nCoordinate.Z = 2\nCoordinate.M = 3\n","export default class NumberUtil {\n  static equalsWithTolerance(x1, x2, tolerance) {\n    return Math.abs(x1 - x2) <= tolerance\n  }\n}\n","import Exception from './Exception.js'\n\nexport default class IllegalArgumentException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ IllegalArgumentException })[0]\n  }\n}\n","export default class Exception extends Error {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ Exception })[0]\n  }\n  toString() {\n    return this.message\n  }\n}\n","import Long from './Long.js'\n\nexport default function Double() { }\n\nDouble.NaN = NaN\nDouble.isNaN = n => Number.isNaN(n)\nDouble.isInfinite = n => !Number.isFinite(n)\nDouble.MAX_VALUE = Number.MAX_VALUE\nDouble.POSITIVE_INFINITY = Number.POSITIVE_INFINITY\nDouble.NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY\n\nif (typeof Float64Array === 'function' &&\n  typeof Int32Array === 'function')\n// Simple and fast conversion between double and long bits\n// using TypedArrays and ArrayViewBuffers.\n\n  (function() {\n    const EXP_BIT_MASK = 0x7ff00000\n    const SIGNIF_BIT_MASK = 0xFFFFF\n    const f64buf = new Float64Array(1)\n    const i32buf = new Int32Array(f64buf.buffer)\n    Double.doubleToLongBits = function(value) {\n      f64buf[0] = value\n      let low = i32buf[0] | 0\n      let high = i32buf[1] | 0\n      // Check for NaN based on values of bit fields, maximum\n      // exponent and nonzero significand.\n      if (((high & EXP_BIT_MASK) === EXP_BIT_MASK) &&\n        ((high & SIGNIF_BIT_MASK) !== 0) &&\n        (low !== 0)) {\n        low = 0 | 0\n        high = 0x7ff80000 | 0\n      }\n      return new Long(high, low)\n    }\n    Double.longBitsToDouble = function(bits) {\n      i32buf[0] = bits.low\n      i32buf[1] = bits.high\n      return f64buf[0]\n    }\n  })()\nelse\n// More complex and slower fallback implementation using\n// math and the divide-by-two and multiply-by-two algorithms.\n\n  (function() {\n    const BIAS = 1023\n    const log2 = Math.log2\n    const floor = Math.floor\n    const pow = Math.pow\n    const MAX_REL_BITS_INTEGER = (function() {\n      for (let i = 53; i > 0; i--) {\n        const bits = pow(2, i) - 1\n        if (floor(log2(bits)) + 1 === i) return bits\n      }\n      return 0\n    })()\n    Double.doubleToLongBits = function(value) {\n      let x, y, f, bits, skip\n      let sign, exp, high, low\n\n      // Get the sign bit and absolute value.\n      if (value < 0 || 1 / value === Number.NEGATIVE_INFINITY) {\n        sign = (1 << 31)\n        value = (-value)\n      } else {\n        sign = 0\n      }\n\n      // Handle some special values.\n      if (value === 0) {\n        // Handle zeros (+/-0).\n        low = 0 | 0\n        high = sign // exponent: 00..00, significand: 00..00\n        return new Long(high, low)\n      }\n\n      if (value === Infinity) {\n        // Handle infinity (only positive values for value possible).\n        low = 0 | 0\n        high = sign | 0x7ff00000 // exponent: 11..11, significand: 00..00\n        return new Long(high, low)\n      }\n\n      if (value !== value) {  \n        // Handle NaNs (boiled down to only one distinct NaN).\n        low = 0 | 0\n        high = 0x7ff80000 // exponent: 11..11, significand: 10..00\n        return new Long(high, low)\n      }\n\n      // Preinitialize variables, that are not neccessarily set by\n      // the algorithm.\n      bits = 0\n      low = 0 | 0\n\n      // Get the (always positive) integer part of value.\n      x = floor(value)\n\n      // Process the integer part if it's greater than 1. Zero requires\n      // no bits at all, 1 represents the implicit (hidden) leading bit,\n      // which must not be written as well.\n      if (x > 1)\n      // If we can reliably determine the number of bits required for\n      // the integer part,\n\n        if (x <= MAX_REL_BITS_INTEGER) {\n          // get the number of bits required to represent it minus 1\n          bits = floor(log2(x)) /* + 1 - 1 */\n          // and simply copy/shift the integer bits into low and high.\n          // That's much faster than the divide-by-two algorithm (saves\n          // up to ~60%).\n          // We always need to mask out the most significant bit, which\n          // is the implicit (aka hidden) bit.\n          if (bits <= 20) {\n            // The simple case in which the integer fits into the\n            // lower 20 bits of the high word is worth to be handled\n            // separately (saves ~25%).\n            low = 0 | 0\n            high = (x << (20 - bits)) & 0xfffff\n          } else {\n            // Here, the integer part is split into low and high.\n            // Since its value may require more than 32 bits, we\n            // cannot use bitwise operators (which implicitly cast\n            // to Int32), but use arithmetic operators % and / to\n            // get low and high parts. The uppper 20 bits go to high,\n            // the remaining bits (in f) to low.\n            f = bits - 20\n            // Like (1 << f) but safe with even more than 32 bits.\n            y = pow(2, f)\n            low = (x % y) << (32 - f)\n            high = (x / y) & 0xfffff\n          }\n        } else {\n          // For greater values, we must use the much slower divide-by-two\n          // algorithm. Bits are generated from right to left, that is from\n          // least to most significant bit. For each bit, we left-shift both\n          // low and high by one and carry bit #0 from high to #31 in low.\n          // The next bit is then copied into bit #19 in high, the leftmost\n          // bit of the double's significand.\n\n          // Preserve x for later user, so work with f.\n          f = x\n          low = 0 | 0\n          for (;;) {\n            y = f / 2\n            f = floor(y)\n            if (f === 0)\n            // We just found the most signigicant (1-)bit, which\n            // is the implicit bit and so, not stored in the double\n            // value. So, it's time to leave the loop.\n              break\n\n            // Count this bit, shift low and carry bit #0 from high.\n            bits++\n            low >>>= 1\n            low |= (high & 0x1) << 31\n            // Shift high.\n            high >>>= 1\n            if (y !== f)\n            // Copy the new bit into bit #19 in high (only required if 1).\n              high |= 0x80000\n          }\n        }\n\n      // Bias the exponent.\n      exp = bits + BIAS\n\n      // If the integer part is zero, we've not yet seen the implicit\n      // leading bit. Variable skip is later used while processing the\n      // fractional part (if any).\n      skip = (x === 0)\n\n      // Get fraction only into x.\n      x = value - x\n\n      // If some significand bits are still left to be filled and\n      // the fractional part is not zero, convert the fraction using\n      // the multiply-by-2 algorithm.\n      if (bits < 52 && x !== 0) {\n        // Initialize 'buffer' f, into which newly created bits get\n        // shifted from right to left.\n        f = 0\n\n        for (;;) {\n          y = x * 2\n          if (y >= 1) {\n            // This is a new 1-bit. Add and count this bit, if not\n            // prohibited by skip.\n            x = y - 1\n            if (!skip) {\n              f <<= 1\n              f |= 1\n              bits++\n            } else {\n              // Otherwise, decrement the exponent and unset\n              // skip, so that all following bits get written.\n              exp--\n              skip = false\n            }\n          } else {\n            // This is a new 0-bit. Add and count this bit, if not\n            // prohibited by skip.\n            x = y\n            if (!skip) {\n              f <<= 1\n              bits++\n            } else if (--exp === 0) {\n              // Otherwise we've just decremented the exponent. If the\n              // biased exponent is zero now (-1023), we process a\n              // subnormal number, which has no impled leading 1-bit.\n              // So, count this 0-bit and unset skip to write out\n              // all the following bits.\n              bits++\n              skip = false\n            }\n          }\n          if (bits === 20) {\n            // When 20 bits have been created in total, we're done with\n            // the high word. Copy the bits from 'buffer' f into high\n            // and reset 'buffer' f. Following bits will end up in the\n            // low word.\n            high |= f\n            f = 0\n          } else if (bits === 52) {\n            // When 52 bits have been created in total, we're done with\n            // low word as well. Copy the bits from 'buffer' f into low\n            // and exit the loop.\n            low |= f\n            break\n          }\n          if (y === 1) {\n            // When y is exactly 1, there is no remainder and the process\n            // is complete (the number is finite). Copy the bits from\n            // 'buffer' f into either low or high and exit the loop.\n            if (bits < 20)\n              high |= (f << (20 - bits))\n            else if (bits < 52) low |= (f << (52 - bits))\n\n            break\n          }\n        }\n      }\n\n      // Copy/shift the exponent and sign bits into the high word.\n      high |= (exp << 20)\n      high |= sign\n\n      return new Long(high, low)\n    }\n    Double.longBitsToDouble = function(bits) {\n      let i\n      let x, exp, fract\n      const high = bits.high\n      const low = bits.low\n\n      // Extract the sign.\n      const sign = (high & (1 << 31)) ? -1 : 1\n\n      // Extract the unbiased exponent.\n      exp = ((high & 0x7ff00000) >> 20) - BIAS\n\n      // Calculate the fraction from left to right. Start\n      // off with the 20 lower bits from the high word.\n      fract = 0\n      x = (1 << 19)\n      for (i = 1; i <= 20; i++) {\n        if (high & x) fract += pow(2, -i)\n\n        x >>>= 1\n      }\n      // Continue with all 32 bits from the low word.\n      x = (1 << 31)\n      for (i = 21; i <= 52; i++) {\n        if (low & x) fract += pow(2, -i)\n\n        x >>>= 1\n      }\n\n      // Handle special values.\n      // Check for zero and subnormal values.\n      if (exp === -BIAS) {\n        if (fract === 0)\n        // +/-1.0 * 0.0 => +/-0.0\n          return sign * 0\n\n        exp = -1022\n      } else if (exp === BIAS + 1) { // Check for +/-Infinity or NaN.\n        if (fract === 0)\n        // +/-1.0 / 0.0 => +/-Infinity\n          return sign / 0\n\n        return NaN\n      } else { // Nothing special? Seems to be a normal number.\n        // Add the implicit leading bit (1*2^0).\n        fract += 1\n      }\n\n      return sign * fract * pow(2, exp)\n    }\n  })()\n","export default class Long {\n  constructor(high, low) {\n    this.low = low || 0\n    this.high = high || 0\n  }\n\n  static toBinaryString(i) {\n    let mask\n    let result = ''\n    for (mask = 0x80000000; mask > 0; mask >>>= 1)\n      result += (i.high & mask) === mask ? '1' : '0'\n    for (mask = 0x80000000; mask > 0; mask >>>= 1)\n      result += (i.low & mask) === mask ? '1' : '0'\n    return result\n  }\n}\n","export default function Comparable() {}\n","export default function Serializable() {}\n","import AssertionFailedException from './AssertionFailedException.js'\nexport default class Assert {\n  static isTrue() {\n    if (arguments.length === 1) {\n      const assertion = arguments[0]\n      Assert.isTrue(assertion, null)\n    } else if (arguments.length === 2) {\n      const assertion = arguments[0], message = arguments[1]\n      if (!assertion) \n        if (message === null) \n          throw new AssertionFailedException()\n        else \n          throw new AssertionFailedException(message)\n        \n      \n    }\n  }\n  static shouldNeverReachHere() {\n    if (arguments.length === 0) {\n      Assert.shouldNeverReachHere(null)\n    } else if (arguments.length === 1) {\n      const message = arguments[0]\n      throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n    }\n  }\n  static equals() {\n    if (arguments.length === 2) {\n      const expectedValue = arguments[0], actualValue = arguments[1]\n      Assert.equals(expectedValue, actualValue, null)\n    } else if (arguments.length === 3) {\n      const expectedValue = arguments[0], actualValue = arguments[1], message = arguments[2]\n      if (!actualValue.equals(expectedValue)) \n        throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n      \n    }\n  }\n}\n","import RuntimeException from '../../../../java/lang/RuntimeException.js'\nexport default class AssertionFailedException extends RuntimeException {\n  constructor() {\n    super()\n    AssertionFailedException.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {\n      RuntimeException.constructor_.call(this)\n    } else if (arguments.length === 1) {\n      const message = arguments[0]\n      RuntimeException.constructor_.call(this, message)\n    }\n  }\n}\n","import Exception from './Exception.js'\n\nexport default class RuntimeException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ RuntimeException })[0]\n  }\n}\n","export default function Clonable() {}\n","export default function Comparator() {}\n","import hasInterface from '../../../../hasInterface.js'\nimport LinearRing from './LinearRing.js'\nimport CoordinateArraySequenceFactory from './impl/CoordinateArraySequenceFactory.js'\nimport MultiPolygon from './MultiPolygon.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport PrecisionModel from './PrecisionModel.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport Assert from '../util/Assert.js'\nimport MultiLineString from './MultiLineString.js'\nimport CoordinateSequenceFactory from './CoordinateSequenceFactory.js'\nimport LineString from './LineString.js'\nimport Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Point from './Point.js'\nimport Polygon from './Polygon.js'\nimport MultiPoint from './MultiPoint.js'\nimport CoordinateSequence from './CoordinateSequence.js'\nimport GeometryCollection from './GeometryCollection.js'\nexport default class GeometryFactory {\n  constructor() {\n    GeometryFactory.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._precisionModel = null\n    this._coordinateSequenceFactory = null\n    this._SRID = null\n    if (arguments.length === 0) {\n      GeometryFactory.constructor_.call(this, new PrecisionModel(), 0)\n    } else if (arguments.length === 1) {\n      if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n        const coordinateSequenceFactory = arguments[0]\n        GeometryFactory.constructor_.call(this, new PrecisionModel(), 0, coordinateSequenceFactory)\n      } else if (arguments[0] instanceof PrecisionModel) {\n        const precisionModel = arguments[0]\n        GeometryFactory.constructor_.call(this, precisionModel, 0, GeometryFactory.getDefaultCoordinateSequenceFactory())\n      }\n    } else if (arguments.length === 2) {\n      const precisionModel = arguments[0], SRID = arguments[1]\n      GeometryFactory.constructor_.call(this, precisionModel, SRID, GeometryFactory.getDefaultCoordinateSequenceFactory())\n    } else if (arguments.length === 3) {\n      const precisionModel = arguments[0], SRID = arguments[1], coordinateSequenceFactory = arguments[2]\n      this._precisionModel = precisionModel\n      this._coordinateSequenceFactory = coordinateSequenceFactory\n      this._SRID = SRID\n    }\n  }\n  static toMultiPolygonArray(multiPolygons) {\n    const multiPolygonArray = new Array(multiPolygons.size()).fill(null)\n    return multiPolygons.toArray(multiPolygonArray)\n  }\n  static toGeometryArray(geometries) {\n    if (geometries === null) return null\n    const geometryArray = new Array(geometries.size()).fill(null)\n    return geometries.toArray(geometryArray)\n  }\n  static getDefaultCoordinateSequenceFactory() {\n    return CoordinateArraySequenceFactory.instance()\n  }\n  static toMultiLineStringArray(multiLineStrings) {\n    const multiLineStringArray = new Array(multiLineStrings.size()).fill(null)\n    return multiLineStrings.toArray(multiLineStringArray)\n  }\n  static toLineStringArray(lineStrings) {\n    const lineStringArray = new Array(lineStrings.size()).fill(null)\n    return lineStrings.toArray(lineStringArray)\n  }\n  static toMultiPointArray(multiPoints) {\n    const multiPointArray = new Array(multiPoints.size()).fill(null)\n    return multiPoints.toArray(multiPointArray)\n  }\n  static toLinearRingArray(linearRings) {\n    const linearRingArray = new Array(linearRings.size()).fill(null)\n    return linearRings.toArray(linearRingArray)\n  }\n  static toPointArray(points) {\n    const pointArray = new Array(points.size()).fill(null)\n    return points.toArray(pointArray)\n  }\n  static toPolygonArray(polygons) {\n    const polygonArray = new Array(polygons.size()).fill(null)\n    return polygons.toArray(polygonArray)\n  }\n  static createPointFromInternalCoord(coord, exemplar) {\n    exemplar.getPrecisionModel().makePrecise(coord)\n    return exemplar.getFactory().createPoint(coord)\n  }\n  createEmpty(dimension) {\n    switch (dimension) {\n    case -1:\n      return this.createGeometryCollection()\n    case 0:\n      return this.createPoint()\n    case 1:\n      return this.createLineString()\n    case 2:\n      return this.createPolygon()\n    default:\n      throw new IllegalArgumentException('Invalid dimension: ' + dimension)\n    }\n  }\n  toGeometry(envelope) {\n    if (envelope.isNull()) \n      return this.createPoint()\n    \n    if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) \n      return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n    \n    if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) \n      return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n    \n    return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n  }\n  createLineString() {\n    if (arguments.length === 0) \n      return this.createLineString(this.getCoordinateSequenceFactory().create([]))\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        return this.createLineString(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        return new LineString(coordinates, this)\n      }\n    \n  }\n  createMultiLineString() {\n    if (arguments.length === 0) {\n      return new MultiLineString(null, this)\n    } else if (arguments.length === 1) {\n      const lineStrings = arguments[0]\n      return new MultiLineString(lineStrings, this)\n    }\n  }\n  createPolygon() {\n    if (arguments.length === 0) {\n      return this.createPolygon(null, null)\n    } else if (arguments.length === 1) {\n      if (hasInterface(arguments[0], CoordinateSequence)) {\n        const shell = arguments[0]\n        return this.createPolygon(this.createLinearRing(shell))\n      } else if (arguments[0] instanceof Array) {\n        const shell = arguments[0]\n        return this.createPolygon(this.createLinearRing(shell))\n      } else if (arguments[0] instanceof LinearRing) {\n        const shell = arguments[0]\n        return this.createPolygon(shell, null)\n      }\n    } else if (arguments.length === 2) {\n      const shell = arguments[0], holes = arguments[1]\n      return new Polygon(shell, holes, this)\n    }\n  }\n  getSRID() {\n    return this._SRID\n  }\n  createGeometryCollection() {\n    if (arguments.length === 0) {\n      return new GeometryCollection(null, this)\n    } else if (arguments.length === 1) {\n      const geometries = arguments[0]\n      return new GeometryCollection(geometries, this)\n    }\n  }\n  getPrecisionModel() {\n    return this._precisionModel\n  }\n  createLinearRing() {\n    if (arguments.length === 0) \n      return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        return new LinearRing(coordinates, this)\n      }\n    \n  }\n  createMultiPolygon() {\n    if (arguments.length === 0) {\n      return new MultiPolygon(null, this)\n    } else if (arguments.length === 1) {\n      const polygons = arguments[0]\n      return new MultiPolygon(polygons, this)\n    }\n  }\n  createMultiPoint() {\n    if (arguments.length === 0) \n      return new MultiPoint(null, this)\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Array) {\n        const point = arguments[0]\n        return new MultiPoint(point, this)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        if (coordinates === null) \n          return this.createMultiPoint(new Array(0).fill(null))\n        \n        const points = new Array(coordinates.size()).fill(null)\n        for (let i = 0; i < coordinates.size(); i++) {\n          const ptSeq = this.getCoordinateSequenceFactory().create(1, coordinates.getDimension(), coordinates.getMeasures())\n          CoordinateSequences.copy(coordinates, i, ptSeq, 0, 1)\n          points[i] = this.createPoint(ptSeq)\n        }\n        return this.createMultiPoint(points)\n      }\n    \n  }\n  buildGeometry(geomList) {\n    let geomType = null\n    let isHeterogeneous = false\n    let hasGeometryCollection = false\n    for (let i = geomList.iterator(); i.hasNext(); ) {\n      const geom = i.next()\n      const partType = geom.getTypeCode()\n      if (geomType === null) \n        geomType = partType\n      \n      if (partType !== geomType) \n        isHeterogeneous = true\n      \n      if (geom instanceof GeometryCollection) hasGeometryCollection = true\n    }\n    if (geomType === null) \n      return this.createGeometryCollection()\n    \n    if (isHeterogeneous || hasGeometryCollection) \n      return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n    \n    const geom0 = geomList.iterator().next()\n    const isCollection = geomList.size() > 1\n    if (isCollection) {\n      if (geom0 instanceof Polygon) \n        return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n      else if (geom0 instanceof LineString) \n        return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n      else if (geom0 instanceof Point) \n        return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n      \n      Assert.shouldNeverReachHere('Unhandled geometry type: ' + geom0.getGeometryType())\n    }\n    return geom0\n  }\n  createMultiPointFromCoords(coordinates) {\n    return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n  }\n  createPoint() {\n    if (arguments.length === 0) \n      return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Coordinate) {\n        const coordinate = arguments[0]\n        return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        return new Point(coordinates, this)\n      }\n    \n  }\n  getCoordinateSequenceFactory() {\n    return this._coordinateSequenceFactory\n  }\n  get interfaces_() {\n    return [Serializable]\n  }\n}\n","export default function(o, i) {\n  return o.interfaces_ && o.interfaces_.indexOf(i) > -1\n}\n","import LineString from './LineString.js'\nimport Geometry from './Geometry.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport Dimension from './Dimension.js'\nexport default class LinearRing extends LineString {\n  constructor() {\n    super()\n    LinearRing.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const points = arguments[0], factory = arguments[1]\n    LineString.constructor_.call(this, points, factory)\n    this.validateConstruction()\n  }\n  copyInternal() {\n    return new LinearRing(this._points.copy(), this._factory)\n  }\n  getBoundaryDimension() {\n    return Dimension.FALSE\n  }\n  isClosed() {\n    if (this.isEmpty()) \n      return true\n    \n    return super.isClosed.call(this)\n  }\n  reverseInternal() {\n    const seq = this._points.copy()\n    CoordinateSequences.reverse(seq)\n    return this.getFactory().createLinearRing(seq)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_LINEARRING\n  }\n  validateConstruction() {\n    if (!this.isEmpty() && !super.isClosed.call(this)) \n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    \n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) \n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    \n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_LINEARRING\n  }\n}\nLinearRing.MINIMUM_VALID_SIZE = 4\n","import hasInterface from '../../../../hasInterface.js'\nimport Length from '../algorithm/Length.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nimport CoordinateArrays from './CoordinateArrays.js'\nimport Dimension from './Dimension.js'\nimport Envelope from './Envelope.js'\nimport Geometry from './Geometry.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport Lineal from './Lineal.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nexport default class LineString extends Geometry {\n  constructor() {\n    super()\n    LineString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._points = null\n    if (arguments.length === 0) {} else if (arguments.length === 2) {\n      const points = arguments[0], factory = arguments[1]\n      Geometry.constructor_.call(this, factory)\n      this.init(points)\n    }\n  }\n  computeEnvelopeInternal() {\n    if (this.isEmpty()) \n      return new Envelope()\n    \n    return this._points.expandEnvelope(new Envelope())\n  }\n  isRing() {\n    return this.isClosed() && CoordinateArrays.isRing(this.getCoordinates())\n  }\n  getCoordinates() {\n    return this._points.toCoordinateArray()\n  }\n  copyInternal() {\n    return new LineString(this._points.copy(), this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      const otherLineString = other\n      if (this._points.size() !== otherLineString._points.size()) \n        return false\n      \n      for (let i = 0; i < this._points.size(); i++) \n        if (!this.equal(this._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) \n          return false\n        \n      \n      return true\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  isClosed() {\n    if (this.isEmpty()) \n      return false\n    \n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  }\n  reverseInternal() {\n    const seq = this._points.copy()\n    CoordinateSequences.reverse(seq)\n    return this.getFactory().createLineString(seq)\n  }\n  getEndPoint() {\n    if (this.isEmpty()) \n      return null\n    \n    return this.getPointN(this.getNumPoints() - 1)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_LINESTRING\n  }\n  getDimension() {\n    return 1\n  }\n  getBoundary() {\n    throw new UnsupportedOperationException()\n  }\n  isEquivalentClass(other) {\n    return other instanceof LineString\n  }\n  getCoordinateSequence() {\n    return this._points\n  }\n  getPointN(n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  }\n  normalize() {\n    for (let i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      const j = this._points.size() - 1 - i\n      if (!this._points.getCoordinate(i).equals(this._points.getCoordinate(j))) {\n        if (this._points.getCoordinate(i).compareTo(this._points.getCoordinate(j)) > 0) {\n          const copy = this._points.copy()\n          CoordinateSequences.reverse(copy)\n          this._points = copy\n        }\n        return null\n      }\n    }\n  }\n  getCoordinate() {\n    if (this.isEmpty()) return null\n    return this._points.getCoordinate(0)\n  }\n  getBoundaryDimension() {\n    if (this.isClosed()) \n      return Dimension.FALSE\n    \n    return 0\n  }\n  getLength() {\n    return Length.ofLine(this._points)\n  }\n  getNumPoints() {\n    return this._points.size()\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      const line = o\n      let i = 0\n      let j = 0\n      while (i < this._points.size() && j < line._points.size()) {\n        const comparison = this._points.getCoordinate(i).compareTo(line._points.getCoordinate(j))\n        if (comparison !== 0) \n          return comparison\n        \n        i++\n        j++\n      }\n      if (i < this._points.size()) \n        return 1\n      \n      if (j < line._points.size()) \n        return -1\n      \n      return 0\n    } else if (arguments.length === 2) {\n      const o = arguments[0], comp = arguments[1]\n      const line = o\n      return comp.compare(this._points, line._points)\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      for (let i = 0; i < this._points.size(); i++) \n        filter.filter(this._points.getCoordinate(i))\n      \n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      if (this._points.size() === 0) return null\n      for (let i = 0; i < this._points.size(); i++) {\n        filter.filter(this._points, i)\n        if (filter.isDone()) break\n      }\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    }\n  }\n  getCoordinateN(n) {\n    return this._points.getCoordinate(n)\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_LINESTRING\n  }\n  isEmpty() {\n    return this._points.size() === 0\n  }\n  init(points) {\n    if (points === null) \n      points = this.getFactory().getCoordinateSequenceFactory().create([])\n    \n    if (points.size() === 1) \n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    \n    this._points = points\n  }\n  isCoordinate(pt) {\n    for (let i = 0; i < this._points.size(); i++) \n      if (this._points.getCoordinate(i).equals(pt)) \n        return true\n      \n    \n    return false\n  }\n  getStartPoint() {\n    if (this.isEmpty()) \n      return null\n    \n    return this.getPointN(0)\n  }\n  get interfaces_() {\n    return [Lineal]\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nexport default class Length {\n  static ofLine(pts) {\n    const n = pts.size()\n    if (n <= 1) return 0.0\n    let len = 0.0\n    const p = new Coordinate()\n    pts.getCoordinate(0, p)\n    let x0 = p.x\n    let y0 = p.y\n    for (let i = 1; i < n; i++) {\n      pts.getCoordinate(i, p)\n      const x1 = p.x\n      const y1 = p.y\n      const dx = x1 - x0\n      const dy = y1 - y0\n      len += Math.sqrt(dx * dx + dy * dy)\n      x0 = x1\n      y0 = y1\n    }\n    return len\n  }\n}\n","export default class GeometryComponentFilter {\n  filter(geom) {}\n}\n","import Exception from './Exception.js'\n\nexport default class UnsupportedOperationException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ UnsupportedOperationException })[0]\n  }\n}\n","import CoordinateList from './CoordinateList.js'\nimport Coordinates from './Coordinates.js'\nimport MathUtil from '../math/MathUtil.js'\nimport System from '../../../../java/lang/System.js'\nimport Comparator from '../../../../java/util/Comparator.js'\nimport Envelope from './Envelope.js'\nexport default class CoordinateArrays {\n  static scroll(coordinates, firstCoordinate) {\n    const i = CoordinateArrays.indexOf(firstCoordinate, coordinates)\n    if (i < 0) return null\n    const newCoordinates = new Array(coordinates.length).fill(null)\n    System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i)\n    System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i)\n    System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length)\n  }\n  static removeRepeatedPoints(coord) {\n    if (!CoordinateArrays.hasRepeatedPoints(coord)) return coord\n    const coordList = new CoordinateList(coord, false)\n    return coordList.toCoordinateArray()\n  }\n  static reverse(coord) {\n    const last = coord.length - 1\n    const mid = Math.trunc(last / 2)\n    for (let i = 0; i <= mid; i++) {\n      const tmp = coord[i]\n      coord[i] = coord[last - i]\n      coord[last - i] = tmp\n    }\n  }\n  static removeNull(coord) {\n    let nonNull = 0\n    for (let i = 0; i < coord.length; i++) \n      if (coord[i] !== null) nonNull++\n    \n    const newCoord = new Array(nonNull).fill(null)\n    if (nonNull === 0) return newCoord\n    let j = 0\n    for (let i = 0; i < coord.length; i++) \n      if (coord[i] !== null) newCoord[j++] = coord[i]\n    \n    return newCoord\n  }\n  static copyDeep() {\n    if (arguments.length === 1) {\n      const coordinates = arguments[0]\n      const copy = new Array(coordinates.length).fill(null)\n      for (let i = 0; i < coordinates.length; i++) \n        copy[i] = coordinates[i].copy()\n      \n      return copy\n    } else if (arguments.length === 5) {\n      const src = arguments[0], srcStart = arguments[1], dest = arguments[2], destStart = arguments[3], length = arguments[4]\n      for (let i = 0; i < length; i++) \n        dest[destStart + i] = src[srcStart + i].copy()\n      \n    }\n  }\n  static isEqualReversed(pts1, pts2) {\n    for (let i = 0; i < pts1.length; i++) {\n      const p1 = pts1[i]\n      const p2 = pts2[pts1.length - i - 1]\n      if (p1.compareTo(p2) !== 0) return false\n    }\n    return true\n  }\n  static envelope(coordinates) {\n    const env = new Envelope()\n    for (let i = 0; i < coordinates.length; i++) \n      env.expandToInclude(coordinates[i])\n    \n    return env\n  }\n  static extract(pts, start, end) {\n    start = MathUtil.clamp(start, 0, pts.length)\n    end = MathUtil.clamp(end, -1, pts.length)\n    let npts = end - start + 1\n    if (end < 0) npts = 0\n    if (start >= pts.length) npts = 0\n    if (end < start) npts = 0\n    const extractPts = new Array(npts).fill(null)\n    if (npts === 0) return extractPts\n    let iPts = 0\n    for (let i = start; i <= end; i++) \n      extractPts[iPts++] = pts[i]\n    \n    return extractPts\n  }\n  static isRing(pts) {\n    if (pts.length < 4) return false\n    if (!pts[0].equals2D(pts[pts.length - 1])) return false\n    return true\n  }\n  static ptNotInList(testPts, pts) {\n    for (let i = 0; i < testPts.length; i++) {\n      const testPt = testPts[i]\n      if (CoordinateArrays.indexOf(testPt, pts) < 0) return testPt\n    }\n    return null\n  }\n  static equals() {\n    if (arguments.length === 2) {\n      const coord1 = arguments[0], coord2 = arguments[1]\n      if (coord1 === coord2) return true\n      if (coord1 === null || coord2 === null) return false\n      if (coord1.length !== coord2.length) return false\n      for (let i = 0; i < coord1.length; i++) \n        if (!coord1[i].equals(coord2[i])) return false\n      \n      return true\n    } else if (arguments.length === 3) {\n      const coord1 = arguments[0], coord2 = arguments[1], coordinateComparator = arguments[2]\n      if (coord1 === coord2) return true\n      if (coord1 === null || coord2 === null) return false\n      if (coord1.length !== coord2.length) return false\n      for (let i = 0; i < coord1.length; i++) \n        if (coordinateComparator.compare(coord1[i], coord2[i]) !== 0) return false\n      \n      return true\n    }\n  }\n  static intersection(coordinates, env) {\n    const coordList = new CoordinateList()\n    for (let i = 0; i < coordinates.length; i++) \n      if (env.intersects(coordinates[i])) coordList.add(coordinates[i], true)\n    \n    return coordList.toCoordinateArray()\n  }\n  static measures(pts) {\n    if (pts === null || pts.length === 0) \n      return 0\n    \n    let measures = 0\n    for (const coordinate of pts) \n      measures = Math.max(measures, Coordinates.measures(coordinate))\n    \n    return measures\n  }\n  static hasRepeatedPoints(coord) {\n    for (let i = 1; i < coord.length; i++) \n      if (coord[i - 1].equals(coord[i])) \n        return true\n      \n    \n    return false\n  }\n  static toCoordinateArray(coordList) {\n    return coordList.toArray(CoordinateArrays.coordArrayType)\n  }\n  static dimension(pts) {\n    if (pts === null || pts.length === 0) \n      return 3\n    \n    let dimension = 0\n    for (const coordinate of pts) \n      dimension = Math.max(dimension, Coordinates.dimension(coordinate))\n    \n    return dimension\n  }\n  static atLeastNCoordinatesOrNothing(n, c) {\n    return c.length >= n ? c : []\n  }\n  static indexOf(coordinate, coordinates) {\n    for (let i = 0; i < coordinates.length; i++) \n      if (coordinate.equals(coordinates[i])) \n        return i\n      \n    \n    return -1\n  }\n  static increasingDirection(pts) {\n    for (let i = 0; i < Math.trunc(pts.length / 2); i++) {\n      const j = pts.length - 1 - i\n      const comp = pts[i].compareTo(pts[j])\n      if (comp !== 0) return comp\n    }\n    return 1\n  }\n  static compare(pts1, pts2) {\n    let i = 0\n    while (i < pts1.length && i < pts2.length) {\n      const compare = pts1[i].compareTo(pts2[i])\n      if (compare !== 0) return compare\n      i++\n    }\n    if (i < pts2.length) return -1\n    if (i < pts1.length) return 1\n    return 0\n  }\n  static minCoordinate(coordinates) {\n    let minCoord = null\n    for (let i = 0; i < coordinates.length; i++) \n      if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) \n        minCoord = coordinates[i]\n      \n    \n    return minCoord\n  }\n}\nclass ForwardComparator {\n  compare(o1, o2) {\n    const pts1 = o1\n    const pts2 = o2\n    return CoordinateArrays.compare(pts1, pts2)\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nclass BidirectionalComparator {\n  compare(o1, o2) {\n    const pts1 = o1\n    const pts2 = o2\n    if (pts1.length < pts2.length) return -1\n    if (pts1.length > pts2.length) return 1\n    if (pts1.length === 0) return 0\n    const forwardComp = CoordinateArrays.compare(pts1, pts2)\n    const isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2)\n    if (isEqualRev) return 0\n    return forwardComp\n  }\n  OLDcompare(o1, o2) {\n    const pts1 = o1\n    const pts2 = o2\n    if (pts1.length < pts2.length) return -1\n    if (pts1.length > pts2.length) return 1\n    if (pts1.length === 0) return 0\n    const dir1 = CoordinateArrays.increasingDirection(pts1)\n    const dir2 = CoordinateArrays.increasingDirection(pts2)\n    let i1 = dir1 > 0 ? 0 : pts1.length - 1\n    let i2 = dir2 > 0 ? 0 : pts1.length - 1\n    for (let i = 0; i < pts1.length; i++) {\n      const comparePt = pts1[i1].compareTo(pts2[i2])\n      if (comparePt !== 0) return comparePt\n      i1 += dir1\n      i2 += dir2\n    }\n    return 0\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nCoordinateArrays.ForwardComparator = ForwardComparator\nCoordinateArrays.BidirectionalComparator = BidirectionalComparator\nCoordinateArrays.coordArrayType = new Array(0).fill(null)\n","import hasInterface from '../../../../hasInterface.js'\nimport Collection from '../../../../java/util/Collection.js'\nimport Coordinate from './Coordinate.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class CoordinateList extends ArrayList {\n  constructor() {\n    super()\n    CoordinateList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const coord = arguments[0]\n      this.ensureCapacity(coord.length)\n      this.add(coord, true)\n    } else if (arguments.length === 2) {\n      const coord = arguments[0], allowRepeated = arguments[1]\n      this.ensureCapacity(coord.length)\n      this.add(coord, allowRepeated)\n    }\n  }\n  getCoordinate(i) {\n    return this.get(i)\n  }\n  addAll() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'boolean' && hasInterface(arguments[0], Collection))) {\n      const coll = arguments[0], allowRepeated = arguments[1]\n      let isChanged = false\n      for (let i = coll.iterator(); i.hasNext(); ) {\n        this.add(i.next(), allowRepeated)\n        isChanged = true\n      }\n      return isChanged\n    } else {\n      return super.addAll.apply(this, arguments)\n    }\n  }\n  clone() {\n    const clone = super.clone.call(this)\n    for (let i = 0; i < this.size(); i++) \n      clone.add(i, this.get(i).clone())\n    \n    return clone\n  }\n  closeRing() {\n    if (this.size() > 0) {\n      const duplicate = this.get(0).copy()\n      this.add(duplicate, false)\n    }\n  }\n  toCoordinateArray() {\n    if (arguments.length === 0) {\n      return this.toArray(CoordinateList.coordArrayType)\n    } else if (arguments.length === 1) {\n      const isForward = arguments[0]\n      if (isForward) \n        return this.toArray(CoordinateList.coordArrayType)\n      \n      const size = this.size()\n      const pts = new Array(size).fill(null)\n      for (let i = 0; i < size; i++) \n        pts[i] = this.get(size - i - 1)\n      \n      return pts\n    }\n  }\n  add() {\n    if (arguments.length === 1) {\n      const coord = arguments[0]\n      return super.add.call(this, coord)\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        const coord = arguments[0], allowRepeated = arguments[1]\n        this.add(coord, allowRepeated, true)\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        const coord = arguments[0], allowRepeated = arguments[1]\n        if (!allowRepeated) \n          if (this.size() >= 1) {\n            const last = this.get(this.size() - 1)\n            if (last.equals2D(coord)) return null\n          }\n        \n        super.add.call(this, coord)\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        const obj = arguments[0], allowRepeated = arguments[1]\n        this.add(obj, allowRepeated)\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        const coord = arguments[0], allowRepeated = arguments[1], direction = arguments[2]\n        if (direction) \n          for (let i = 0; i < coord.length; i++) \n            this.add(coord[i], allowRepeated)\n          \n        else \n          for (let i = coord.length - 1; i >= 0; i--) \n            this.add(coord[i], allowRepeated)\n          \n        \n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        const i = arguments[0], coord = arguments[1], allowRepeated = arguments[2]\n        if (!allowRepeated) {\n          const size = this.size()\n          if (size > 0) {\n            if (i > 0) {\n              const prev = this.get(i - 1)\n              if (prev.equals2D(coord)) return null\n            }\n            if (i < size) {\n              const next = this.get(i)\n              if (next.equals2D(coord)) return null\n            }\n          }\n        }\n        super.add.call(this, i, coord)\n      }\n    } else if (arguments.length === 4) {\n      const coord = arguments[0], allowRepeated = arguments[1], start = arguments[2], end = arguments[3]\n      let inc = 1\n      if (start > end) inc = -1\n      for (let i = start; i !== end; i += inc) \n        this.add(coord[i], allowRepeated)\n      \n      return true\n    }\n  }\n}\nCoordinateList.coordArrayType = new Array(0).fill(null)\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n */\nexport default class Collection {\n  /**\n     * Ensures that this collection contains the specified element (optional\n     * operation).\n     * @param {Object} e\n     * @return {boolean}\n     */\n  add() { }\n  /**\n     * Appends all of the elements in the specified collection to the end of this\n     * list, in the order that they are returned by the specified collection's\n     * iterator (optional operation).\n     * @param {javascript.util.Collection} c\n     * @return {boolean}\n     */\n  addAll() { }\n  /**\n     * Returns true if this collection contains no elements.\n     * @return {boolean}\n     */\n  isEmpty() { }\n  /**\n     * Returns an iterator over the elements in this collection.\n     * @return {javascript.util.Iterator}\n     */\n  iterator() { }\n  /**\n     * Returns an iterator over the elements in this collection.\n     * @return {number}\n     */\n  size() { }\n  /**\n     * Returns an array containing all of the elements in this collection.\n     * @return {Array}\n     */\n  toArray() { }\n  /**\n     * Removes a single instance of the specified element from this collection if it\n     * is present. (optional)\n     * @param {Object} e\n     * @return {boolean}\n     */\n  remove() { }\n}\n","import Collection from './Collection.js'\nimport IndexOutOfBoundsException from '../lang/IndexOutOfBoundsException.js'\nimport List from './List.js'\nimport NoSuchElementException from './NoSuchElementException.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n */\nexport default class ArrayList extends List {\n\n  constructor(o) {\n    super()\n    this.array = []\n    if (o instanceof Collection) this.addAll(o)\n  }\n\n  get interfaces_() {\n    return [List, Collection]\n  }\n\n  ensureCapacity() { }\n\n  add(e) {\n    if (arguments.length === 1)\n      this.array.push(e)\n    else\n      this.array.splice(arguments[0], 0, arguments[1])\n    return true\n  }\n\n  clear() {\n    this.array = []\n  }\n\n  addAll(c) {\n    for (const e of c)\n      this.array.push(e)\n  }\n\n  set(index, element) {\n    const oldElement = this.array[index]\n    this.array[index] = element\n    return oldElement\n  }\n\n  iterator() {\n    return new Iterator(this)\n  }\n\n  get(index) {\n    if (index < 0 || index >= this.size())\n      throw new IndexOutOfBoundsException()\n    return this.array[index]\n  }\n\n  isEmpty() {\n    return this.array.length === 0\n  }\n\n  sort(comparator) {\n    if (comparator)\n      this.array.sort((a, b) => comparator.compare(a, b))\n    else this.array.sort()\n  }\n\n  size() {\n    return this.array.length\n  }\n\n  toArray() {\n    return this.array.slice()\n  }\n\n  remove(o) {\n    for (let i = 0, len = this.array.length; i < len; i++)\n      if (this.array[i] === o)\n        return !!this.array.splice(i, 1)\n    return false\n  }\n\n  [Symbol.iterator]() {\n    return this.array.values()\n  }\n}\n\nclass Iterator {\n  constructor(arrayList) {\n    this.arrayList = arrayList\n    this.position = 0\n  }\n\n  next() {\n    if (this.position === this.arrayList.size())\n      throw new NoSuchElementException()\n    return this.arrayList.get(this.position++)\n  }\n\n  hasNext() {\n    return this.position < this.arrayList.size()\n  }\n\n  set(element) {\n    return this.arrayList.set(this.position - 1, element)\n  }\n\n  remove() {\n    this.arrayList.remove(this.arrayList.get(this.position))\n  }\n}\n","import Exception from './Exception.js'\n\nexport default class IndexOutOfBoundsException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ IndexOutOfBoundsException })[0]\n  } \n}","import Collection from './Collection.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n */\nexport default class List extends Collection {\n  /**\n     * Returns the element at the specified position in this list.\n     * @param {number} index\n     * @return {Object}\n     */\n  get() { }\n  /**\n     * Replaces the element at the specified position in this list with the\n     * specified element (optional operation).\n     * @param {number} index\n     * @param {Object} e\n     * @return {Object}\n     */\n  set() { }\n  /**\n     * Returns true if this collection contains no elements.\n     * @return {boolean}\n     */\n  isEmpty() { }\n}\n","import Exception from '../lang/Exception.js'\n\nexport default class NoSuchElementException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ NoSuchElementException })[0]\n  }\n}","import CoordinateXY from './CoordinateXY.js'\nimport Coordinate from './Coordinate.js'\nimport CoordinateXYM from './CoordinateXYM.js'\nimport CoordinateXYZM from './CoordinateXYZM.js'\nexport default class Coordinates {\n  static measures(coordinate) {\n    if (coordinate instanceof CoordinateXY) \n      return 0\n    else if (coordinate instanceof CoordinateXYM) \n      return 1\n    else if (coordinate instanceof CoordinateXYZM) \n      return 1\n    else if (coordinate instanceof Coordinate) \n      return 0\n    \n    return 0\n  }\n  static create() {\n    if (arguments.length === 1) {\n      const dimension = arguments[0]\n      return Coordinates.create(dimension, 0)\n    } else if (arguments.length === 2) {\n      const dimension = arguments[0], measures = arguments[1]\n      if (dimension === 2) \n        return new CoordinateXY()\n      else if (dimension === 3 && measures === 0) \n        return new Coordinate()\n      else if (dimension === 3 && measures === 1) \n        return new CoordinateXYM()\n      else if (dimension === 4 && measures === 1) \n        return new CoordinateXYZM()\n      \n      return new Coordinate()\n    }\n  }\n  static dimension(coordinate) {\n    if (coordinate instanceof CoordinateXY) \n      return 2\n    else if (coordinate instanceof CoordinateXYM) \n      return 3\n    else if (coordinate instanceof CoordinateXYZM) \n      return 4\n    else if (coordinate instanceof Coordinate) \n      return 3\n    \n    return 3\n  }\n}\n","import Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class CoordinateXY extends Coordinate {\n  constructor() {\n    super()\n    CoordinateXY.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this)\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof CoordinateXY) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n      } else if (arguments[0] instanceof Coordinate) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      Coordinate.constructor_.call(this, x, y, Coordinate.NULL_ORDINATE)\n    }\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case CoordinateXY.X:\n      this.x = value\n      break\n    case CoordinateXY.Y:\n      this.y = value\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n  setZ(z) {\n    throw new IllegalArgumentException('CoordinateXY dimension 2 does not support z-ordinate')\n  }\n  copy() {\n    return new CoordinateXY(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ')'\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n  }\n  getZ() {\n    return Coordinate.NULL_ORDINATE\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case CoordinateXY.X:\n      return this.x\n    case CoordinateXY.Y:\n      return this.y\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n}\nCoordinateXY.X = 0\nCoordinateXY.Y = 1\nCoordinateXY.Z = -1\nCoordinateXY.M = -1\n","import Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class CoordinateXYM extends Coordinate {\n  constructor() {\n    super()\n    CoordinateXYM.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._m = null\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this)\n      this._m = 0.0\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof CoordinateXYM) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n        this._m = coord._m\n      } else if (arguments[0] instanceof Coordinate) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n        this._m = this.getM()\n      }\n    } else if (arguments.length === 3) {\n      const x = arguments[0], y = arguments[1], m = arguments[2]\n      Coordinate.constructor_.call(this, x, y, Coordinate.NULL_ORDINATE)\n      this._m = m\n    }\n  }\n  setM(m) {\n    this._m = m\n  }\n  setZ(z) {\n    throw new IllegalArgumentException('CoordinateXY dimension 2 does not support z-ordinate')\n  }\n  copy() {\n    return new CoordinateXYM(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ' m=' + this.getM() + ')'\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n    this._m = other.getM()\n  }\n  getM() {\n    return this._m\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case CoordinateXYM.X:\n      this.x = value\n      break\n    case CoordinateXYM.Y:\n      this.y = value\n      break\n    case CoordinateXYM.M:\n      this._m = value\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n  getZ() {\n    return Coordinate.NULL_ORDINATE\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case CoordinateXYM.X:\n      return this.x\n    case CoordinateXYM.Y:\n      return this.y\n    case CoordinateXYM.M:\n      return this._m\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n}\nCoordinateXYM.X = 0\nCoordinateXYM.Y = 1\nCoordinateXYM.Z = -1\nCoordinateXYM.M = 2\n","import Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class CoordinateXYZM extends Coordinate {\n  constructor() {\n    super()\n    CoordinateXYZM.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._m = null\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this)\n      this._m = 0.0\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof CoordinateXYZM) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord)\n        this._m = coord._m\n      } else if (arguments[0] instanceof Coordinate) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord)\n        this._m = this.getM()\n      }\n    } else if (arguments.length === 4) {\n      const x = arguments[0], y = arguments[1], z = arguments[2], m = arguments[3]\n      Coordinate.constructor_.call(this, x, y, z)\n      this._m = m\n    }\n  }\n  setM(m) {\n    this._m = m\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.getZ()\n    case Coordinate.M:\n      return this.getM()\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n  copy() {\n    return new CoordinateXYZM(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ', ' + this.getZ() + ' m=' + this.getM() + ')'\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n    this._m = other.getM()\n  }\n  getM() {\n    return this._m\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value\n      break\n    case Coordinate.Y:\n      this.y = value\n      break\n    case Coordinate.Z:\n      this.z = value\n      break\n    case Coordinate.M:\n      this._m = value\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n}\n","import Double from '../../../../java/lang/Double.js'\nexport default class MathUtil {\n  static log10(x) {\n    const ln = Math.log(x)\n    if (Double.isInfinite(ln)) return ln\n    if (Double.isNaN(ln)) return ln\n    return ln / MathUtil.LOG_10\n  }\n  static min(v1, v2, v3, v4) {\n    let min = v1\n    if (v2 < min) min = v2\n    if (v3 < min) min = v3\n    if (v4 < min) min = v4\n    return min\n  }\n  static clamp() {\n    if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n      const x = arguments[0], min = arguments[1], max = arguments[2]\n      if (x < min) return min\n      if (x > max) return max\n      return x\n    } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n      const x = arguments[0], min = arguments[1], max = arguments[2]\n      if (x < min) return min\n      if (x > max) return max\n      return x\n    }\n  }\n  static average(x1, x2) {\n    return (x1 + x2) / 2.0\n  }\n  static wrap(index, max) {\n    if (index < 0) \n      return max - -index % max\n    \n    return index % max\n  }\n  static max() {\n    if (arguments.length === 3) {\n      const v1 = arguments[0], v2 = arguments[1], v3 = arguments[2]\n      let max = v1\n      if (v2 > max) max = v2\n      if (v3 > max) max = v3\n      return max\n    } else if (arguments.length === 4) {\n      const v1 = arguments[0], v2 = arguments[1], v3 = arguments[2], v4 = arguments[3]\n      let max = v1\n      if (v2 > max) max = v2\n      if (v3 > max) max = v3\n      if (v4 > max) max = v4\n      return max\n    }\n  }\n}\nMathUtil.LOG_10 = Math.log(10)\n","export default class System {\n  static arraycopy(src, srcPos, dest, destPos, len) {\n    let c = 0\n    for (let i = srcPos; i < srcPos + len; i++) {\n      dest[destPos + c] = src[i]\n      c++\n    }\n  }\n\n  static getProperty(name) {\n    return {\n      'line.separator': '\\n'\n    }[name]\n  }\n}\n","import Coordinate from './Coordinate.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nexport default class Envelope {\n  constructor() {\n    Envelope.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._minx = null\n    this._maxx = null\n    this._miny = null\n    this._maxy = null\n    if (arguments.length === 0) {\n      this.init()\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        this.init(p.x, p.x, p.y, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const env = arguments[0]\n        this.init(env)\n      }\n    } else if (arguments.length === 2) {\n      const p1 = arguments[0], p2 = arguments[1]\n      this.init(p1.x, p2.x, p1.y, p2.y)\n    } else if (arguments.length === 4) {\n      const x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3]\n      this.init(x1, x2, y1, y2)\n    }\n  }\n  static intersects() {\n    if (arguments.length === 3) {\n      const p1 = arguments[0], p2 = arguments[1], q = arguments[2]\n      if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) \n        return true\n      \n      return false\n    } else if (arguments.length === 4) {\n      const p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3]\n      let minq = Math.min(q1.x, q2.x)\n      let maxq = Math.max(q1.x, q2.x)\n      let minp = Math.min(p1.x, p2.x)\n      let maxp = Math.max(p1.x, p2.x)\n      if (minp > maxq) return false\n      if (maxp < minq) return false\n      minq = Math.min(q1.y, q2.y)\n      maxq = Math.max(q1.y, q2.y)\n      minp = Math.min(p1.y, p2.y)\n      maxp = Math.max(p1.y, p2.y)\n      if (minp > maxq) return false\n      if (maxp < minq) return false\n      return true\n    }\n  }\n  getArea() {\n    return this.getWidth() * this.getHeight()\n  }\n  getMinX() {\n    return this._minx\n  }\n  expandToInclude() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        this.expandToInclude(p.x, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        if (other.isNull()) \n          return null\n        \n        if (this.isNull()) {\n          this._minx = other.getMinX()\n          this._maxx = other.getMaxX()\n          this._miny = other.getMinY()\n          this._maxy = other.getMaxY()\n        } else {\n          if (other._minx < this._minx) \n            this._minx = other._minx\n          \n          if (other._maxx > this._maxx) \n            this._maxx = other._maxx\n          \n          if (other._miny < this._miny) \n            this._miny = other._miny\n          \n          if (other._maxy > this._maxy) \n            this._maxy = other._maxy\n          \n        }\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      if (this.isNull()) {\n        this._minx = x\n        this._maxx = x\n        this._miny = y\n        this._maxy = y\n      } else {\n        if (x < this._minx) \n          this._minx = x\n        \n        if (x > this._maxx) \n          this._maxx = x\n        \n        if (y < this._miny) \n          this._miny = y\n        \n        if (y > this._maxy) \n          this._maxy = y\n        \n      }\n    }\n  }\n  compareTo(o) {\n    const env = o\n    if (this.isNull()) {\n      if (env.isNull()) return 0\n      return -1\n    } else {\n      if (env.isNull()) return 1\n    }\n    if (this._minx < env._minx) return -1\n    if (this._minx > env._minx) return 1\n    if (this._miny < env._miny) return -1\n    if (this._miny > env._miny) return 1\n    if (this._maxx < env._maxx) return -1\n    if (this._maxx > env._maxx) return 1\n    if (this._maxy < env._maxy) return -1\n    if (this._maxy > env._maxy) return 1\n    return 0\n  }\n  translate(transX, transY) {\n    if (this.isNull()) \n      return null\n    \n    this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY)\n  }\n  copy() {\n    return new Envelope(this)\n  }\n  expandBy() {\n    if (arguments.length === 1) {\n      const distance = arguments[0]\n      this.expandBy(distance, distance)\n    } else if (arguments.length === 2) {\n      const deltaX = arguments[0], deltaY = arguments[1]\n      if (this.isNull()) return null\n      this._minx -= deltaX\n      this._maxx += deltaX\n      this._miny -= deltaY\n      this._maxy += deltaY\n      if (this._minx > this._maxx || this._miny > this._maxy) this.setToNull()\n    }\n  }\n  contains() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        return this.covers(other)\n      } else if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this.covers(p)\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      return this.covers(x, y)\n    }\n  }\n  hashCode() {\n    let result = 17\n    result = 37 * result + Coordinate.hashCode(this._minx)\n    result = 37 * result + Coordinate.hashCode(this._maxx)\n    result = 37 * result + Coordinate.hashCode(this._miny)\n    result = 37 * result + Coordinate.hashCode(this._maxy)\n    return result\n  }\n  equals(other) {\n    if (!(other instanceof Envelope)) \n      return false\n    \n    const otherEnvelope = other\n    if (this.isNull()) \n      return otherEnvelope.isNull()\n    \n    return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n  }\n  intersection(env) {\n    if (this.isNull() || env.isNull() || !this.intersects(env)) return new Envelope()\n    const intMinX = this._minx > env._minx ? this._minx : env._minx\n    const intMinY = this._miny > env._miny ? this._miny : env._miny\n    const intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx\n    const intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy\n    return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n  }\n  isNull() {\n    return this._maxx < this._minx\n  }\n  getMaxX() {\n    return this._maxx\n  }\n  covers() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this.covers(p.x, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        if (this.isNull() || other.isNull()) \n          return false\n        \n        return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      if (this.isNull()) return false\n      return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n    }\n  }\n  intersects() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        if (this.isNull() || other.isNull()) \n          return false\n        \n        return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n      } else if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this.intersects(p.x, p.y)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n        const a = arguments[0], b = arguments[1]\n        if (this.isNull()) \n          return false\n        \n        const envminx = a.x < b.x ? a.x : b.x\n        if (envminx > this._maxx) return false\n        const envmaxx = a.x > b.x ? a.x : b.x\n        if (envmaxx < this._minx) return false\n        const envminy = a.y < b.y ? a.y : b.y\n        if (envminy > this._maxy) return false\n        const envmaxy = a.y > b.y ? a.y : b.y\n        if (envmaxy < this._miny) return false\n        return true\n      } else if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n        const x = arguments[0], y = arguments[1]\n        if (this.isNull()) return false\n        return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n      }\n    }\n  }\n  getMinY() {\n    return this._miny\n  }\n  getDiameter() {\n    if (this.isNull()) \n      return 0\n    \n    const w = this.getWidth()\n    const h = this.getHeight()\n    return Math.sqrt(w * w + h * h)\n  }\n  minExtent() {\n    if (this.isNull()) return 0.0\n    const w = this.getWidth()\n    const h = this.getHeight()\n    if (w < h) return w\n    return h\n  }\n  getWidth() {\n    if (this.isNull()) \n      return 0\n    \n    return this._maxx - this._minx\n  }\n  toString() {\n    return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n  }\n  setToNull() {\n    this._minx = 0\n    this._maxx = -1\n    this._miny = 0\n    this._maxy = -1\n  }\n  disjoint(other) {\n    if (this.isNull() || other.isNull()) \n      return true\n    \n    return other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny\n  }\n  getHeight() {\n    if (this.isNull()) \n      return 0\n    \n    return this._maxy - this._miny\n  }\n  maxExtent() {\n    if (this.isNull()) return 0.0\n    const w = this.getWidth()\n    const h = this.getHeight()\n    if (w > h) return w\n    return h\n  }\n  centre() {\n    if (this.isNull()) return null\n    return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n  }\n  init() {\n    if (arguments.length === 0) {\n      this.setToNull()\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        this.init(p.x, p.x, p.y, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const env = arguments[0]\n        this._minx = env._minx\n        this._maxx = env._maxx\n        this._miny = env._miny\n        this._maxy = env._maxy\n      }\n    } else if (arguments.length === 2) {\n      const p1 = arguments[0], p2 = arguments[1]\n      this.init(p1.x, p2.x, p1.y, p2.y)\n    } else if (arguments.length === 4) {\n      const x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3]\n      if (x1 < x2) {\n        this._minx = x1\n        this._maxx = x2\n      } else {\n        this._minx = x2\n        this._maxx = x1\n      }\n      if (y1 < y2) {\n        this._miny = y1\n        this._maxy = y2\n      } else {\n        this._miny = y2\n        this._maxy = y1\n      }\n    }\n  }\n  getMaxY() {\n    return this._maxy\n  }\n  distance(env) {\n    if (this.intersects(env)) return 0\n    let dx = 0.0\n    if (this._maxx < env._minx) dx = env._minx - this._maxx; else if (this._minx > env._maxx) dx = this._minx - env._maxx\n    let dy = 0.0\n    if (this._maxy < env._miny) dy = env._miny - this._maxy; else if (this._miny > env._maxy) dy = this._miny - env._maxy\n    if (dx === 0.0) return dy\n    if (dy === 0.0) return dx\n    return Math.sqrt(dx * dx + dy * dy)\n  }\n  get interfaces_() {\n    return [Comparable, Serializable]\n  }\n}\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Character from '../../../../java/lang/Character.js'\nexport default class Dimension {\n  static toDimensionSymbol(dimensionValue) {\n    switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    }\n    throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n  }\n  static toDimensionValue(dimensionSymbol) {\n    switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    }\n    throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n  }\n}\nDimension.P = 0\nDimension.L = 1\nDimension.A = 2\nDimension.FALSE = -1\nDimension.TRUE = -2\nDimension.DONTCARE = -3\nDimension.SYM_FALSE = 'F'\nDimension.SYM_TRUE = 'T'\nDimension.SYM_DONTCARE = '*'\nDimension.SYM_P = '0'\nDimension.SYM_L = '1'\nDimension.SYM_A = '2'\n","export default class Character {\n  static isWhitespace(c) {\n    return ((c <= 32 && c >= 0) || c === 127)\n  }\n\n  static toUpperCase(c) {\n    return c.toUpperCase()\n  }\n}\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport Envelope from './Envelope.js'\nexport default class Geometry {\n  constructor() {\n    Geometry.constructor_.apply(this, arguments)\n  }\n\n  isGeometryCollection() {\n    return this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION\n  }\n\n  getFactory() {\n    return this._factory\n  }\n\n  getGeometryN(n) {\n    return this\n  }\n\n  getArea() {\n    return 0.0\n  }\n\n  isRectangle() {\n    return false\n  }\n\n  equalsExact(other) {\n    return this === other || this.equalsExact(other, 0)\n  }\n\n  geometryChanged() {\n    this.apply(Geometry.geometryChangedFilter)\n  }\n\n  geometryChangedAction() {\n    this._envelope = null\n  }\n\n  equalsNorm(g) {\n    if (g === null) return false\n    return this.norm().equalsExact(g.norm())\n  }\n\n  getLength() {\n    return 0.0\n  }\n\n  getNumGeometries() {\n    return 1\n  }\n\n  compareTo() {\n    let other\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      other = o\n      if (this.getTypeCode() !== other.getTypeCode()) return this.getTypeCode() - other.getTypeCode()\n\n      if (this.isEmpty() && other.isEmpty()) return 0\n\n      if (this.isEmpty()) return -1\n\n      if (other.isEmpty()) return 1\n\n      return this.compareToSameClass(o)\n    } else if (arguments.length === 2) {\n      const o = arguments[0]; const comp = arguments[1]\n      other = o\n      if (this.getTypeCode() !== other.getTypeCode()) return this.getTypeCode() - other.getTypeCode()\n\n      if (this.isEmpty() && other.isEmpty()) return 0\n\n      if (this.isEmpty()) return -1\n\n      if (other.isEmpty()) return 1\n\n      return this.compareToSameClass(o, comp)\n    }\n  }\n\n  getUserData() {\n    return this._userData\n  }\n\n  getSRID() {\n    return this._SRID\n  }\n\n  getEnvelope() {\n    return this.getFactory().toGeometry(this.getEnvelopeInternal())\n  }\n\n  static checkNotGeometryCollection(g) {\n    if (g.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n\n  equal(a, b, tolerance) {\n    if (tolerance === 0) return a.equals(b)\n\n    return a.distance(b) <= tolerance\n  }\n\n  norm() {\n    const copy = this.copy()\n    copy.normalize()\n    return copy\n  }\n\n  reverse() {\n    const res = this.reverseInternal()\n    if (this.envelope != null) res.envelope = this.envelope.copy()\n\n    res.setSRID(this.getSRID())\n    return res\n  }\n\n  copy() {\n    const copy = this.copyInternal()\n    copy.envelope = this._envelope == null ? null : this._envelope.copy()\n    copy._SRID = this._SRID\n    copy._userData = this._userData\n    return copy\n  }\n\n  getPrecisionModel() {\n    return this._factory.getPrecisionModel()\n  }\n\n  getEnvelopeInternal() {\n    if (this._envelope === null) this._envelope = this.computeEnvelopeInternal()\n\n    return new Envelope(this._envelope)\n  }\n\n  setSRID(SRID) {\n    this._SRID = SRID\n  }\n\n  setUserData(userData) {\n    this._userData = userData\n  }\n\n  compare(a, b) {\n    const i = a.iterator()\n    const j = b.iterator()\n    while (i.hasNext() && j.hasNext()) {\n      const aElement = i.next()\n      const bElement = j.next()\n      const comparison = aElement.compareTo(bElement)\n      if (comparison !== 0) return comparison\n    }\n    if (i.hasNext()) return 1\n\n    if (j.hasNext()) return -1\n\n    return 0\n  }\n\n  hashCode() {\n    return this.getEnvelopeInternal().hashCode()\n  }\n\n  isEquivalentClass(other) {\n    return this.getTypeCode() == other.getTypeCode()\n  }\n\n  get interfaces_() {\n    return [Cloneable, Comparable, Serializable]\n  }\n\n  getClass() {\n    return Geometry\n  }\n\n  static hasNonEmptyElements(geometries) {\n    for (let i = 0; i < geometries.length; i++)\n      if (!geometries[i].isEmpty()) return true\n\n    return false\n  }\n\n  static hasNullElements(array) {\n    for (let i = 0; i < array.length; i++)\n      if (array[i] === null) return true\n\n    return false\n  }\n}\nGeometry.constructor_ = function(factory) {\n  if (!factory) return\n  this._envelope = null\n  this._userData = null\n  this._factory = factory\n  this._SRID = factory.getSRID()\n}\nGeometry.TYPECODE_POINT = 0\nGeometry.TYPECODE_MULTIPOINT = 1\nGeometry.TYPECODE_LINESTRING = 2\nGeometry.TYPECODE_LINEARRING = 3\nGeometry.TYPECODE_MULTILINESTRING = 4\nGeometry.TYPECODE_POLYGON = 5\nGeometry.TYPECODE_MULTIPOLYGON = 6\nGeometry.TYPECODE_GEOMETRYCOLLECTION = 7\nGeometry.TYPENAME_POINT = 'Point'\nGeometry.TYPENAME_MULTIPOINT = 'MultiPoint'\nGeometry.TYPENAME_LINESTRING = 'LineString'\nGeometry.TYPENAME_LINEARRING = 'LinearRing'\nGeometry.TYPENAME_MULTILINESTRING = 'MultiLineString'\nGeometry.TYPENAME_POLYGON = 'Polygon'\nGeometry.TYPENAME_MULTIPOLYGON = 'MultiPolygon'\nGeometry.TYPENAME_GEOMETRYCOLLECTION = 'GeometryCollection'\nGeometry.geometryChangedFilter = {\n  get interfaces_() {\n    return [GeometryComponentFilter]\n  },\n  filter(geom) {\n    geom.geometryChangedAction()\n  }\n}\n","export default class CoordinateFilter {\n  filter(coord) {}\n}\n","export default class Lineal {}\n","import hasInterface from '../../../../hasInterface.js'\nimport Coordinate from './Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport CoordinateSequence from './CoordinateSequence.js'\nexport default class CoordinateSequences {\n  static scroll() {\n    if (arguments.length === 2) {\n      if (hasInterface(arguments[0], CoordinateSequence) && Number.isInteger(arguments[1])) {\n        const seq = arguments[0], indexOfFirstCoordinate = arguments[1]\n        CoordinateSequences.scroll(seq, indexOfFirstCoordinate, CoordinateSequences.isRing(seq))\n      } else if (hasInterface(arguments[0], CoordinateSequence) && arguments[1] instanceof Coordinate) {\n        const seq = arguments[0], firstCoordinate = arguments[1]\n        const i = CoordinateSequences.indexOf(firstCoordinate, seq)\n        if (i <= 0) return null\n        CoordinateSequences.scroll(seq, i)\n      }\n    } else if (arguments.length === 3) {\n      const seq = arguments[0], indexOfFirstCoordinate = arguments[1], ensureRing = arguments[2]\n      const i = indexOfFirstCoordinate\n      if (i <= 0) return null\n      const copy = seq.copy()\n      const last = ensureRing ? seq.size() - 1 : seq.size()\n      for (let j = 0; j < last; j++) \n        for (let k = 0; k < seq.getDimension(); k++) seq.setOrdinate(j, k, copy.getOrdinate((indexOfFirstCoordinate + j) % last, k))\n      \n      if (ensureRing) \n        for (let k = 0; k < seq.getDimension(); k++) seq.setOrdinate(last, k, seq.getOrdinate(0, k))\n      \n    }\n  }\n  static isEqual(cs1, cs2) {\n    const cs1Size = cs1.size()\n    const cs2Size = cs2.size()\n    if (cs1Size !== cs2Size) return false\n    const dim = Math.min(cs1.getDimension(), cs2.getDimension())\n    for (let i = 0; i < cs1Size; i++) \n      for (let d = 0; d < dim; d++) {\n        const v1 = cs1.getOrdinate(i, d)\n        const v2 = cs2.getOrdinate(i, d)\n        if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) continue\n        if (Double.isNaN(v1) && Double.isNaN(v2)) continue\n        return false\n      }\n    \n    return true\n  }\n  static minCoordinateIndex() {\n    if (arguments.length === 1) {\n      const seq = arguments[0]\n      return CoordinateSequences.minCoordinateIndex(seq, 0, seq.size() - 1)\n    } else if (arguments.length === 3) {\n      const seq = arguments[0], from = arguments[1], to = arguments[2]\n      let minCoordIndex = -1\n      let minCoord = null\n      for (let i = from; i <= to; i++) {\n        const testCoord = seq.getCoordinate(i)\n        if (minCoord === null || minCoord.compareTo(testCoord) > 0) {\n          minCoord = testCoord\n          minCoordIndex = i\n        }\n      }\n      return minCoordIndex\n    }\n  }\n  static extend(fact, seq, size) {\n    const newseq = fact.create(size, seq.getDimension())\n    const n = seq.size()\n    CoordinateSequences.copy(seq, 0, newseq, 0, n)\n    if (n > 0) \n      for (let i = n; i < size; i++) CoordinateSequences.copy(seq, n - 1, newseq, i, 1)\n    \n    return newseq\n  }\n  static reverse(seq) {\n    const last = seq.size() - 1\n    const mid = Math.trunc(last / 2)\n    for (let i = 0; i <= mid; i++) \n      CoordinateSequences.swap(seq, i, last - i)\n    \n  }\n  static ensureValidRing(fact, seq) {\n    const n = seq.size()\n    if (n === 0) return seq\n    if (n <= 3) return CoordinateSequences.createClosedRing(fact, seq, 4)\n    const isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n    if (isClosed) return seq\n    return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n  }\n  static minCoordinate(seq) {\n    let minCoord = null\n    for (let i = 0; i < seq.size(); i++) {\n      const testCoord = seq.getCoordinate(i)\n      if (minCoord === null || minCoord.compareTo(testCoord) > 0) \n        minCoord = testCoord\n      \n    }\n    return minCoord\n  }\n  static copyCoord(src, srcPos, dest, destPos) {\n    const minDim = Math.min(src.getDimension(), dest.getDimension())\n    for (let dim = 0; dim < minDim; dim++) \n      dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim))\n    \n  }\n  static isRing(seq) {\n    const n = seq.size()\n    if (n === 0) return true\n    if (n <= 3) return false\n    return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n  }\n  static swap(seq, i, j) {\n    if (i === j) return null\n    for (let dim = 0; dim < seq.getDimension(); dim++) {\n      const tmp = seq.getOrdinate(i, dim)\n      seq.setOrdinate(i, dim, seq.getOrdinate(j, dim))\n      seq.setOrdinate(j, dim, tmp)\n    }\n  }\n  static copy(src, srcPos, dest, destPos, length) {\n    for (let i = 0; i < length; i++) \n      CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i)\n    \n  }\n  static indexOf(coordinate, seq) {\n    for (let i = 0; i < seq.size(); i++) \n      if (coordinate.x === seq.getOrdinate(i, CoordinateSequence.X) && coordinate.y === seq.getOrdinate(i, CoordinateSequence.Y)) \n        return i\n      \n    \n    return -1\n  }\n  static createClosedRing(fact, seq, size) {\n    const newseq = fact.create(size, seq.getDimension())\n    const n = seq.size()\n    CoordinateSequences.copy(seq, 0, newseq, 0, n)\n    for (let i = n; i < size; i++) CoordinateSequences.copy(seq, 0, newseq, i, 1)\n    return newseq\n  }\n}\n","import Double from '../../../../java/lang/Double.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nexport default class CoordinateSequence {\n  getCoordinate() {\n    if (arguments.length === 1) {\n      const i = arguments[0]\n    } else if (arguments.length === 2) {\n      const index = arguments[0], coord = arguments[1]\n    }\n  }\n  getCoordinateCopy(i) {}\n  createCoordinate() {}\n  getDimension() {}\n  hasM() {\n    return this.getMeasures() > 0\n  }\n  getX(index) {}\n  hasZ() {\n    return this.getDimension() - this.getMeasures() > 2\n  }\n  getMeasures() {\n    return 0\n  }\n  expandEnvelope(env) {}\n  copy() {}\n  getY(index) {}\n  toCoordinateArray() {}\n  getM(index) {\n    if (this.hasM()) {\n      const mIndex = this.getDimension() - this.getMeasures()\n      return this.getOrdinate(index, mIndex)\n    } else {\n      return Double.NaN\n    }\n  }\n  setOrdinate(index, ordinateIndex, value) {}\n  getZ(index) {\n    if (this.hasZ()) \n      return this.getOrdinate(index, 2)\n    else \n      return Double.NaN\n    \n  }\n  size() {}\n  getOrdinate(index, ordinateIndex) {}\n  get interfaces_() {\n    return [Cloneable]\n  }\n}\nCoordinateSequence.X = 0\nCoordinateSequence.Y = 1\nCoordinateSequence.Z = 2\nCoordinateSequence.M = 3\n","export default class GeometryFilter {\n  filter(geom) {}\n}\n","export default class CoordinateSequenceFilter {\n  filter(seq, i) {}\n  isGeometryChanged() {}\n  isDone() {}\n}\n","import CoordinateSequenceFactory from '../CoordinateSequenceFactory.js'\nimport CoordinateSequence from '../CoordinateSequence.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport CoordinateArraySequence from './CoordinateArraySequence.js'\nexport default class CoordinateArraySequenceFactory {\n  static instance() {\n    return CoordinateArraySequenceFactory.instanceObject\n  }\n  readResolve() {\n    return CoordinateArraySequenceFactory.instance()\n  }\n  create() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        return new CoordinateArraySequence(coordinates)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordSeq = arguments[0]\n        return new CoordinateArraySequence(coordSeq)\n      }\n    } else if (arguments.length === 2) {\n      let size = arguments[0], dimension = arguments[1]\n      if (dimension > 3) dimension = 3\n      if (dimension < 2) dimension = 2\n      return new CoordinateArraySequence(size, dimension)\n    } else if (arguments.length === 3) {\n      let size = arguments[0], dimension = arguments[1], measures = arguments[2]\n      let spatial = dimension - measures\n      if (measures > 1) \n        measures = 1\n      \n      if (spatial > 3) \n        spatial = 3\n      \n      if (spatial < 2) spatial = 2\n      return new CoordinateArraySequence(size, spatial + measures, measures)\n    }\n  }\n  get interfaces_() {\n    return [CoordinateSequenceFactory, Serializable]\n  }\n}\nCoordinateArraySequenceFactory.instanceObject = new CoordinateArraySequenceFactory()\n","import hasInterface from '../../../../hasInterface.js'\nimport CoordinateSequence from './CoordinateSequence.js'\nexport default class CoordinateSequenceFactory {\n  create() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordSeq = arguments[0]\n      }\n    } else if (arguments.length === 2) {\n      const size = arguments[0], dimension = arguments[1]\n    } else if (arguments.length === 3) {\n      const size = arguments[0], dimension = arguments[1], measures = arguments[2]\n      return this.create(size, dimension)\n    }\n  }\n}\n","import hasInterface from '../../../../../hasInterface.js'\nimport Coordinate from '../Coordinate.js'\nimport Double from '../../../../../java/lang/Double.js'\nimport Coordinates from '../Coordinates.js'\nimport CoordinateSequence from '../CoordinateSequence.js'\nimport CoordinateArrays from '../CoordinateArrays.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport StringBuilder from '../../../../../java/lang/StringBuilder.js'\nexport default class CoordinateArraySequence {\n  constructor() {\n    CoordinateArraySequence.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._dimension = 3\n    this._measures = 0\n    this._coordinates = null\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        CoordinateArraySequence.constructor_.call(this, coordinates, CoordinateArrays.dimension(coordinates), CoordinateArrays.measures(coordinates))\n      } else if (Number.isInteger(arguments[0])) {\n        const size = arguments[0]\n        this._coordinates = new Array(size).fill(null)\n        for (let i = 0; i < size; i++) \n          this._coordinates[i] = new Coordinate()\n        \n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordSeq = arguments[0]\n        if (coordSeq === null) {\n          this._coordinates = new Array(0).fill(null)\n          return null\n        }\n        this._dimension = coordSeq.getDimension()\n        this._measures = coordSeq.getMeasures()\n        this._coordinates = new Array(coordSeq.size()).fill(null)\n        for (let i = 0; i < this._coordinates.length; i++) \n          this._coordinates[i] = coordSeq.getCoordinateCopy(i)\n        \n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n        const coordinates = arguments[0], dimension = arguments[1]\n        CoordinateArraySequence.constructor_.call(this, coordinates, dimension, CoordinateArrays.measures(coordinates))\n      } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n        const size = arguments[0], dimension = arguments[1]\n        this._coordinates = new Array(size).fill(null)\n        this._dimension = dimension\n        for (let i = 0; i < size; i++) \n          this._coordinates[i] = Coordinates.create(dimension)\n        \n      }\n    } else if (arguments.length === 3) {\n      if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Array && Number.isInteger(arguments[1]))) {\n        const coordinates = arguments[0], dimension = arguments[1], measures = arguments[2]\n        this._dimension = dimension\n        this._measures = measures\n        if (coordinates === null) \n          this._coordinates = new Array(0).fill(null)\n        else \n          this._coordinates = coordinates\n        \n      } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n        const size = arguments[0], dimension = arguments[1], measures = arguments[2]\n        this._coordinates = new Array(size).fill(null)\n        this._dimension = dimension\n        this._measures = measures\n        for (let i = 0; i < size; i++) \n          this._coordinates[i] = this.createCoordinate()\n        \n      }\n    }\n  }\n  getCoordinate() {\n    if (arguments.length === 1) {\n      const i = arguments[0]\n      return this._coordinates[i]\n    } else if (arguments.length === 2) {\n      const index = arguments[0], coord = arguments[1]\n      coord.setCoordinate(this._coordinates[index])\n    }\n  }\n  getCoordinateCopy(i) {\n    const copy = this.createCoordinate()\n    copy.setCoordinate(this._coordinates[i])\n    return copy\n  }\n  createCoordinate() {\n    return Coordinates.create(this.getDimension(), this.getMeasures())\n  }\n  getDimension() {\n    return this._dimension\n  }\n  getX(index) {\n    return this._coordinates[index].x\n  }\n  getMeasures() {\n    return this._measures\n  }\n  expandEnvelope(env) {\n    for (let i = 0; i < this._coordinates.length; i++) \n      env.expandToInclude(this._coordinates[i])\n    \n    return env\n  }\n  copy() {\n    const cloneCoordinates = new Array(this.size()).fill(null)\n    for (let i = 0; i < this._coordinates.length; i++) {\n      const duplicate = this.createCoordinate()\n      duplicate.setCoordinate(this._coordinates[i])\n      cloneCoordinates[i] = duplicate\n    }\n    return new CoordinateArraySequence(cloneCoordinates, this._dimension, this._measures)\n  }\n  toString() {\n    if (this._coordinates.length > 0) {\n      const strBuilder = new StringBuilder(17 * this._coordinates.length)\n      strBuilder.append('(')\n      strBuilder.append(this._coordinates[0])\n      for (let i = 1; i < this._coordinates.length; i++) {\n        strBuilder.append(', ')\n        strBuilder.append(this._coordinates[i])\n      }\n      strBuilder.append(')')\n      return strBuilder.toString()\n    } else {\n      return '()'\n    }\n  }\n  getY(index) {\n    return this._coordinates[index].y\n  }\n  toCoordinateArray() {\n    return this._coordinates\n  }\n  getM(index) {\n    if (this.hasM()) \n      return this._coordinates[index].getM()\n    else \n      return Double.NaN\n    \n  }\n  setOrdinate(index, ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value\n      break\n    default:\n      this._coordinates[index].setOrdinate(ordinateIndex, value)\n    }\n  }\n  getZ(index) {\n    if (this.hasZ()) \n      return this._coordinates[index].getZ()\n    else \n      return Double.NaN\n    \n  }\n  size() {\n    return this._coordinates.length\n  }\n  getOrdinate(index, ordinateIndex) {\n    switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    default:\n      return this._coordinates[index].getOrdinate(ordinateIndex)\n    }\n  }\n  get interfaces_() {\n    return [CoordinateSequence, Serializable]\n  }\n}\n","export default class StringBuilder {\n  constructor(str) {\n    this.str = str\n  }\n  append(e) {\n    this.str += e\n  }\n  setCharAt(i, c) {\n    this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n  }\n  toString() {\n    return this.str\n  }\n}","import Geometry from './Geometry.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport Polygonal from './Polygonal.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class MultiPolygon extends GeometryCollection {\n  constructor() {\n    super()\n    MultiPolygon.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const polygons = arguments[0], factory = arguments[1]\n    GeometryCollection.constructor_.call(this, polygons, factory)\n  }\n  copyInternal() {\n    const polygons = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < polygons.length; i++) \n      polygons[i] = this._geometries[i].copy()\n    \n    return new MultiPolygon(polygons, this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      return super.equalsExact.call(this, other, tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  getBoundaryDimension() {\n    return 1\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_MULTIPOLYGON\n  }\n  getDimension() {\n    return 2\n  }\n  getBoundary() {\n    if (this.isEmpty()) \n      return this.getFactory().createMultiLineString()\n    \n    const allRings = new ArrayList()\n    for (let i = 0; i < this._geometries.length; i++) {\n      const polygon = this._geometries[i]\n      const rings = polygon.getBoundary()\n      for (let j = 0; j < rings.getNumGeometries(); j++) \n        allRings.add(rings.getGeometryN(j))\n      \n    }\n    const allRingsArray = new Array(allRings.size()).fill(null)\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_MULTIPOLYGON\n  }\n  get interfaces_() {\n    return [Polygonal]\n  }\n}\n","import TreeSet from '../../../../java/util/TreeSet.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Dimension from './Dimension.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Geometry from './Geometry.js'\nimport Arrays from '../../../../java/util/Arrays.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nimport Envelope from './Envelope.js'\nimport Assert from '../util/Assert.js'\nexport default class GeometryCollection extends Geometry {\n  constructor() {\n    super()\n    GeometryCollection.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geometries = null\n    if (arguments.length === 0) {} else if (arguments.length === 2) {\n      let geometries = arguments[0], factory = arguments[1]\n      Geometry.constructor_.call(this, factory)\n      if (geometries === null) \n        geometries = []\n      \n      if (Geometry.hasNullElements(geometries)) \n        throw new IllegalArgumentException('geometries must not contain null elements')\n      \n      this._geometries = geometries\n    }\n  }\n  computeEnvelopeInternal() {\n    const envelope = new Envelope()\n    for (let i = 0; i < this._geometries.length; i++) \n      envelope.expandToInclude(this._geometries[i].getEnvelopeInternal())\n    \n    return envelope\n  }\n  getGeometryN(n) {\n    return this._geometries[n]\n  }\n  getCoordinates() {\n    const coordinates = new Array(this.getNumPoints()).fill(null)\n    let k = -1\n    for (let i = 0; i < this._geometries.length; i++) {\n      const childCoordinates = this._geometries[i].getCoordinates()\n      for (let j = 0; j < childCoordinates.length; j++) {\n        k++\n        coordinates[k] = childCoordinates[j]\n      }\n    }\n    return coordinates\n  }\n  getArea() {\n    let area = 0.0\n    for (let i = 0; i < this._geometries.length; i++) \n      area += this._geometries[i].getArea()\n    \n    return area\n  }\n  copyInternal() {\n    const geometries = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < geometries.length; i++) \n      geometries[i] = this._geometries[i].copy()\n    \n    return new GeometryCollection(geometries, this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      const otherCollection = other\n      if (this._geometries.length !== otherCollection._geometries.length) \n        return false\n      \n      for (let i = 0; i < this._geometries.length; i++) \n        if (!this._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) \n          return false\n        \n      \n      return true\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  reverseInternal() {\n    const numGeometries = this._geometries.length\n    const reversed = new ArrayList(numGeometries)\n    for (let i = 0; i < numGeometries; i++) \n      reversed.add(this._geometries[i].reverse())\n    \n    return this.getFactory().buildGeometry(reversed)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_GEOMETRYCOLLECTION\n  }\n  getDimension() {\n    let dimension = Dimension.FALSE\n    for (let i = 0; i < this._geometries.length; i++) \n      dimension = Math.max(dimension, this._geometries[i].getDimension())\n    \n    return dimension\n  }\n  getNumGeometries() {\n    return this._geometries.length\n  }\n  getBoundary() {\n    Geometry.checkNotGeometryCollection(this)\n    Assert.shouldNeverReachHere()\n    return null\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_GEOMETRYCOLLECTION\n  }\n  isEmpty() {\n    for (let i = 0; i < this._geometries.length; i++) \n      if (!this._geometries[i].isEmpty()) \n        return false\n      \n    \n    return true\n  }\n  normalize() {\n    for (let i = 0; i < this._geometries.length; i++) \n      this._geometries[i].normalize()\n    \n    Arrays.sort(this._geometries)\n  }\n  getCoordinate() {\n    if (this.isEmpty()) return null\n    return this._geometries[0].getCoordinate()\n  }\n  getBoundaryDimension() {\n    let dimension = Dimension.FALSE\n    for (let i = 0; i < this._geometries.length; i++) \n      dimension = Math.max(dimension, this._geometries[i].getBoundaryDimension())\n    \n    return dimension\n  }\n  getLength() {\n    let sum = 0.0\n    for (let i = 0; i < this._geometries.length; i++) \n      sum += this._geometries[i].getLength()\n    \n    return sum\n  }\n  getNumPoints() {\n    let numPoints = 0\n    for (let i = 0; i < this._geometries.length; i++) \n      numPoints += this._geometries[i].getNumPoints()\n    \n    return numPoints\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      const theseElements = new TreeSet(Arrays.asList(this._geometries))\n      const otherElements = new TreeSet(Arrays.asList(o._geometries))\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      const o = arguments[0], comp = arguments[1]\n      const gc = o\n      const n1 = this.getNumGeometries()\n      const n2 = gc.getNumGeometries()\n      let i = 0\n      while (i < n1 && i < n2) {\n        const thisGeom = this.getGeometryN(i)\n        const otherGeom = gc.getGeometryN(i)\n        const holeComp = thisGeom.compareToSameClass(otherGeom, comp)\n        if (holeComp !== 0) return holeComp\n        i++\n      }\n      if (i < n1) return 1\n      if (i < n2) return -1\n      return 0\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      for (let i = 0; i < this._geometries.length; i++) \n        this._geometries[i].apply(filter)\n      \n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      if (this._geometries.length === 0) return null\n      for (let i = 0; i < this._geometries.length; i++) {\n        this._geometries[i].apply(filter)\n        if (filter.isDone()) \n          break\n        \n      }\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n      for (let i = 0; i < this._geometries.length; i++) \n        this._geometries[i].apply(filter)\n      \n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n      for (let i = 0; i < this._geometries.length; i++) \n        this._geometries[i].apply(filter)\n      \n    }\n  }\n}\n","import Collection from './Collection.js'\nimport NoSuchElementException from './NoSuchElementException.js'\nimport UnsupportedOperationException from '../lang/UnsupportedOperationException.js'\nimport SortedSet from './SortedSet.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n */\nexport default class TreeSet extends SortedSet {\n  constructor(o) {\n    super()\n    this.array = []\n    if (o instanceof Collection)\n      this.addAll(o)\n  }\n\n  contains(o) {\n    for (const e of this.array)\n      if (e.compareTo(o) === 0)\n        return true\n    return false\n  }\n\n  add(o) {\n    if (this.contains(o))\n      return false\n    for (let i = 0, len = this.array.length; i < len; i++) {\n      const e = this.array[i]\n      if (e.compareTo(o) === 1)\n        return !!this.array.splice(i, 0, o)\n    }\n    this.array.push(o)\n    return true\n  }\n\n  addAll(c) {\n    for (const e of c)\n      this.add(e)\n    return true\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n\n  size() {\n    return this.array.length\n  }\n\n  isEmpty() {\n    return this.array.length === 0\n  }\n\n  toArray() {\n    return this.array.slice()\n  }\n\n  iterator() {\n    return new Iterator(this.array)\n  }\n}\n\nclass Iterator {\n  constructor(array) {\n    this.array = array\n    this.position = 0\n  }\n\n  next() {\n    if (this.position === this.array.length)\n      throw new NoSuchElementException()\n    return this.array[this.position++]\n  }\n\n  hasNext() {\n    return this.position < this.array.length\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n}\n","import Set from './Set.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n */\nexport default class SortedSet extends Set {}\n","import Collection from './Collection.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nexport default class Set extends Collection {\n  /**\n   * Returns true if this set contains the specified element. More formally,\n   * returns true if and only if this set contains an element e such that (o==null ?\n   * e==null : o.equals(e)).\n   * @param {Object} e\n   * @return {boolean}\n   */\n  contains() { }\n}\n","import ArrayList from './ArrayList.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n */\nexport default class Arrays {\n  static sort() {\n    const a = arguments[0]\n    if (arguments.length === 1) {\n      a.sort((a, b) => a.compareTo(b))\n    } else if (arguments.length === 2) {\n      a.sort((a, b) => arguments[1].compare(a, b))\n    } else if (arguments.length === 3) {\n      const t = a.slice(arguments[1], arguments[2])\n      t.sort()\n      const r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length))\n      a.splice(0, a.length)\n      for (const e of r)\n        a.push(e)\n    } else if (arguments.length === 4) {\n      const t = a.slice(arguments[1], arguments[2])\n      t.sort((a, b) => arguments[3].compare(a, b))\n      const r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length))\n      a.splice(0, a.length)\n      for (const e of r)\n        a.push(e)\n    }\n  }\n\n  /**\n   * @param {Array} array\n   * @return {ArrayList}\n   */\n  static asList(array) {\n    const arrayList = new ArrayList()\n    for (const e of array)\n      arrayList.add(e)\n    return arrayList\n  }\n\n  static copyOf(original, newLength) {\n    return original.slice(0, newLength)\n  }\n}\n","export default class Polygonal {}\n","import HashMap from '../../../../java/util/HashMap.js'\nimport Coordinate from './Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Integer from '../../../../java/lang/Integer.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nexport default class PrecisionModel {\n  constructor() {\n    PrecisionModel.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._modelType = null\n    this._scale = null\n    if (arguments.length === 0) \n      this._modelType = PrecisionModel.FLOATING\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Type) {\n        const modelType = arguments[0]\n        this._modelType = modelType\n        if (modelType === PrecisionModel.FIXED) \n          this.setScale(1.0)\n        \n      } else if (typeof arguments[0] === 'number') {\n        const scale = arguments[0]\n        this._modelType = PrecisionModel.FIXED\n        this.setScale(scale)\n      } else if (arguments[0] instanceof PrecisionModel) {\n        const pm = arguments[0]\n        this._modelType = pm._modelType\n        this._scale = pm._scale\n      }\n    \n  }\n  static mostPrecise(pm1, pm2) {\n    if (pm1.compareTo(pm2) >= 0) return pm1\n    return pm2\n  }\n  equals(other) {\n    if (!(other instanceof PrecisionModel)) \n      return false\n    \n    const otherPrecisionModel = other\n    return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n  }\n  compareTo(o) {\n    const other = o\n    const sigDigits = this.getMaximumSignificantDigits()\n    const otherSigDigits = other.getMaximumSignificantDigits()\n    return Integer.compare(sigDigits, otherSigDigits)\n  }\n  getType() {\n    return this._modelType\n  }\n  toString() {\n    let description = 'UNKNOWN'\n    if (this._modelType === PrecisionModel.FLOATING) \n      description = 'Floating'\n    else if (this._modelType === PrecisionModel.FLOATING_SINGLE) \n      description = 'Floating-Single'\n    else if (this._modelType === PrecisionModel.FIXED) \n      description = 'Fixed (Scale=' + this.getScale() + ')'\n    \n    return description\n  }\n  makePrecise() {\n    if (typeof arguments[0] === 'number') {\n      const val = arguments[0]\n      if (Double.isNaN(val)) return val\n      if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n        const floatSingleVal = val\n        return floatSingleVal\n      }\n      if (this._modelType === PrecisionModel.FIXED) \n        return Math.round(val * this._scale) / this._scale\n      \n      return val\n    } else if (arguments[0] instanceof Coordinate) {\n      const coord = arguments[0]\n      if (this._modelType === PrecisionModel.FLOATING) return null\n      coord.x = this.makePrecise(coord.x)\n      coord.y = this.makePrecise(coord.y)\n    }\n  }\n  getMaximumSignificantDigits() {\n    let maxSigDigits = 16\n    if (this._modelType === PrecisionModel.FLOATING) \n      maxSigDigits = 16\n    else if (this._modelType === PrecisionModel.FLOATING_SINGLE) \n      maxSigDigits = 6\n    else if (this._modelType === PrecisionModel.FIXED) \n      maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)))\n    \n    return maxSigDigits\n  }\n  setScale(scale) {\n    this._scale = Math.abs(scale)\n  }\n  getScale() {\n    return this._scale\n  }\n  isFloating() {\n    return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n  }\n  get interfaces_() {\n    return [Serializable, Comparable]\n  }\n}\nclass Type {\n  constructor() {\n    Type.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._name = null\n    const name = arguments[0]\n    this._name = name\n    Type.nameToTypeMap.put(name, this)\n  }\n  readResolve() {\n    return Type.nameToTypeMap.get(this._name)\n  }\n  toString() {\n    return this._name\n  }\n  get interfaces_() {\n    return [Serializable]\n  }\n}\nType.nameToTypeMap = new HashMap()\nPrecisionModel.Type = Type\nPrecisionModel.FIXED = new Type('FIXED')\nPrecisionModel.FLOATING = new Type('FLOATING')\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE')\nPrecisionModel.maximumPreciseValue = 9007199254740992.0\n","import ArrayList from './ArrayList.js'\nimport MapInterface from './Map.js'\nimport HashSet from './HashSet.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n */\nexport default class HashMap extends MapInterface {\n  constructor() {\n    super()\n    this.map = new Map()\n  }\n\n  get(key) {\n    return this.map.get(key) || null\n  }\n\n  put(key, value) {\n    this.map.set(key, value)\n    return value\n  }\n\n  values() {\n    const arrayList = new ArrayList()\n    const it = this.map.values()\n    let o = it.next()\n    while (!o.done) {\n      arrayList.add(o.value)\n      o = it.next()\n    }\n    return arrayList\n  }\n\n  entrySet() {\n    const hashSet = new HashSet()\n    this.map.entries().forEach(entry => hashSet.add(entry))\n    return hashSet\n  }\n\n  size() {\n    return this.map.size()\n  }\n}\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n */\nexport default class Map {\n  /**\n     * Returns the value to which the specified key is mapped, or null if this map\n     * contains no mapping for the key.\n     * @param {Object} key\n     * @return {Object}\n     */\n  get() { }\n\n  /**\n     * Associates the specified value with the specified key in this map (optional\n     * operation).\n     * @param {Object} key\n     * @param {Object} value\n     * @return {Object}\n     */\n  put() { }\n\n  /**\n     * Returns the number of key-value mappings in this map.\n     * @return {number}\n     */\n  size() { }\n\n  /**\n     * Returns a Collection view of the values contained in this map.\n     * @return {javascript.util.Collection}\n     */\n  values() { }\n\n  /**\n     * Returns a {@link Set} view of the mappings contained in this map.\n     * The set is backed by the map, so changes to the map are\n     * reflected in the set, and vice-versa.  If the map is modified\n     * while an iteration over the set is in progress (except through\n     * the iterator's own <tt>remove</tt> operation, or through the\n     * <tt>setValue</tt> operation on a map entry returned by the\n     * iterator) the results of the iteration are undefined.  The set\n     * supports element removal, which removes the corresponding\n     * mapping from the map, via the <tt>Iterator.remove</tt>,\n     * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n     * <tt>clear</tt> operations.  It does not support the\n     * <tt>add</tt> or <tt>addAll</tt> operations.\n     *\n     * @return {Set} a set view of the mappings contained in this map\n     */\n  entrySet() { }\n}\n","import Collection from './Collection.js'\nimport NoSuchElementException from './NoSuchElementException.js'\nimport UnsupportedOperationException from '../lang/UnsupportedOperationException.js'\nimport Set from './Set.js'\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n */\nexport default class HashSet extends Set {\n  constructor(o) {\n    super()\n    this.map = new Map()\n    if (o instanceof Collection)\n      this.addAll(o)\n  }\n\n  contains(o) {\n    const hashCode = o.hashCode ? o.hashCode() : o\n    if (this.map.has(hashCode))\n      return true\n    return false\n  }\n\n  add(o) {\n    const hashCode = o.hashCode ? o.hashCode() : o\n    if (this.map.has(hashCode))\n      return false\n    return !!this.map.set(hashCode, o)\n  }\n\n  addAll(c) {\n    for (const e of c)\n      this.add(e)\n    return true\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n\n  size() {\n    return this.map.size\n  }\n\n  isEmpty() {\n    return this.map.size === 0\n  }\n\n  toArray() {\n    return Array.from(this.map.values())\n  }\n\n  iterator() {\n    return new Iterator(this.map)\n  }\n\n  [Symbol.iterator]() {\n    return this.map\n  }\n}\n\nclass Iterator {\n  constructor(map) {\n    this.iterator = map.values()\n    const { done, value } = this.iterator.next()\n    this.done = done\n    this.value = value\n  }\n\n  next() {\n    if (this.done)\n      throw new NoSuchElementException()\n    const current = this.value\n    const { done, value } = this.iterator.next()\n    this.done = done\n    this.value = value\n    return current\n  }\n\n  hasNext() {\n    return !this.done\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n}\n","export default class Integer {\n  constructor(value) {\n    this.value = value\n  }\n\n  intValue() {\n    return this.value\n  }\n\n  compareTo(o) {\n    if (this.value < o)\n      return -1\n    if (this.value > o)\n      return 1\n    return 0\n  }\n\n  static compare(x, y) {\n    if (x < y)\n      return -1\n    if (x > y)\n      return 1\n    return 0\n  }\n\n  static isNan(n) {\n    return Number.isNaN(n)\n  }\n\n  static valueOf(value) {\n    return new Integer(value)\n  }\n}\n","import Geometry from './Geometry.js'\nimport Lineal from './Lineal.js'\nimport Dimension from './Dimension.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nexport default class MultiLineString extends GeometryCollection {\n  constructor() {\n    super()\n    MultiLineString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const lineStrings = arguments[0], factory = arguments[1]\n    GeometryCollection.constructor_.call(this, lineStrings, factory)\n  }\n  copyInternal() {\n    const lineStrings = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < lineStrings.length; i++) \n      lineStrings[i] = this._geometries[i].copy()\n    \n    return new MultiLineString(lineStrings, this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      return super.equalsExact.call(this, other, tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  getBoundaryDimension() {\n    if (this.isClosed()) \n      return Dimension.FALSE\n    \n    return 0\n  }\n  isClosed() {\n    if (this.isEmpty()) \n      return false\n    \n    for (let i = 0; i < this._geometries.length; i++) \n      if (!this._geometries[i].isClosed()) \n        return false\n      \n    \n    return true\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_MULTILINESTRING\n  }\n  getDimension() {\n    return 1\n  }\n  getBoundary() {\n    throw new UnsupportedOperationException()\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_MULTILINESTRING\n  }\n  get interfaces_() {\n    return [Lineal]\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Dimension from './Dimension.js'\nimport Puntal from './Puntal.js'\nimport IllegalStateException from '../../../../java/lang/IllegalStateException.js'\nimport Geometry from './Geometry.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nimport Envelope from './Envelope.js'\nimport Assert from '../util/Assert.js'\nexport default class Point extends Geometry {\n  constructor() {\n    super()\n    Point.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._coordinates = null\n    const coordinates = arguments[0], factory = arguments[1]\n    Geometry.constructor_.call(this, factory)\n    this.init(coordinates)\n  }\n  computeEnvelopeInternal() {\n    if (this.isEmpty()) \n      return new Envelope()\n    \n    const env = new Envelope()\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0))\n    return env\n  }\n  getCoordinates() {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  }\n  copyInternal() {\n    return new Point(this._coordinates.copy(), this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      if (this.isEmpty() && other.isEmpty()) \n        return true\n      \n      if (this.isEmpty() !== other.isEmpty()) \n        return false\n      \n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  reverseInternal() {\n    return this.getFactory().createPoint(this._coordinates.copy())\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_POINT\n  }\n  getDimension() {\n    return 0\n  }\n  getNumPoints() {\n    return this.isEmpty() ? 0 : 1\n  }\n  getX() {\n    if (this.getCoordinate() === null) \n      throw new IllegalStateException('getX called on empty Point')\n    \n    return this.getCoordinate().x\n  }\n  getBoundary() {\n    return this.getFactory().createGeometryCollection()\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_POINT\n  }\n  getCoordinateSequence() {\n    return this._coordinates\n  }\n  getY() {\n    if (this.getCoordinate() === null) \n      throw new IllegalStateException('getY called on empty Point')\n    \n    return this.getCoordinate().y\n  }\n  isSimple() {\n    return true\n  }\n  normalize() {}\n  getCoordinate() {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  }\n  getBoundaryDimension() {\n    return Dimension.FALSE\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const other = arguments[0]\n      const point = other\n      return this.getCoordinate().compareTo(point.getCoordinate())\n    } else if (arguments.length === 2) {\n      const other = arguments[0], comp = arguments[1]\n      const point = other\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      if (this.isEmpty()) \n        return null\n      \n      filter.filter(this.getCoordinate())\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      if (this.isEmpty()) return null\n      filter.filter(this._coordinates, 0)\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    }\n  }\n  isEmpty() {\n    return this._coordinates.size() === 0\n  }\n  init(coordinates) {\n    if (coordinates === null) \n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([])\n    \n    Assert.isTrue(coordinates.size() <= 1)\n    this._coordinates = coordinates\n  }\n  get interfaces_() {\n    return [Puntal]\n  }\n}\n","export default class Puntal {}\n","import Exception from './Exception.js'\n\nexport default class IllegalStateException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ IllegalStateException })[0]\n  }\n}\n","import Area from '../algorithm/Area.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Polygonal from './Polygonal.js'\nimport Geometry from './Geometry.js'\nimport Arrays from '../../../../java/util/Arrays.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nexport default class Polygon extends Geometry {\n  constructor() {\n    super()\n    Polygon.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._shell = null\n    this._holes = null\n    let shell = arguments[0], holes = arguments[1], factory = arguments[2]\n    Geometry.constructor_.call(this, factory)\n    if (shell === null) \n      shell = this.getFactory().createLinearRing()\n    \n    if (holes === null) \n      holes = []\n    \n    if (Geometry.hasNullElements(holes)) \n      throw new IllegalArgumentException('holes must not contain null elements')\n    \n    if (shell.isEmpty() && Geometry.hasNonEmptyElements(holes)) \n      throw new IllegalArgumentException('shell is empty but holes are not')\n    \n    this._shell = shell\n    this._holes = holes\n  }\n  computeEnvelopeInternal() {\n    return this._shell.getEnvelopeInternal()\n  }\n  getCoordinates() {\n    if (this.isEmpty()) \n      return []\n    \n    const coordinates = new Array(this.getNumPoints()).fill(null)\n    let k = -1\n    const shellCoordinates = this._shell.getCoordinates()\n    for (let x = 0; x < shellCoordinates.length; x++) {\n      k++\n      coordinates[k] = shellCoordinates[x]\n    }\n    for (let i = 0; i < this._holes.length; i++) {\n      const childCoordinates = this._holes[i].getCoordinates()\n      for (let j = 0; j < childCoordinates.length; j++) {\n        k++\n        coordinates[k] = childCoordinates[j]\n      }\n    }\n    return coordinates\n  }\n  getArea() {\n    let area = 0.0\n    area += Area.ofRing(this._shell.getCoordinateSequence())\n    for (let i = 0; i < this._holes.length; i++) \n      area -= Area.ofRing(this._holes[i].getCoordinateSequence())\n    \n    return area\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      const otherPolygon = other\n      const thisShell = this._shell\n      const otherPolygonShell = otherPolygon._shell\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) \n        return false\n      \n      if (this._holes.length !== otherPolygon._holes.length) \n        return false\n      \n      for (let i = 0; i < this._holes.length; i++) \n        if (!this._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) \n          return false\n        \n      \n      return true\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  reverseInternal() {\n    const shell = this.getExteriorRing().reverse()\n    const holes = new Array(this.getNumInteriorRing()).fill(null)\n    for (let i = 0; i < holes.length; i++) \n      holes[i] = this.getInteriorRingN(i).reverse()\n    \n    return this.getFactory().createPolygon(shell, holes)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_POLYGON\n  }\n  getDimension() {\n    return 2\n  }\n  getBoundary() {\n    if (this.isEmpty()) \n      return this.getFactory().createMultiLineString()\n    \n    const rings = new Array(this._holes.length + 1).fill(null)\n    rings[0] = this._shell\n    for (let i = 0; i < this._holes.length; i++) \n      rings[i + 1] = this._holes[i]\n    \n    if (rings.length <= 1) return this.getFactory().createLinearRing(rings[0].getCoordinateSequence())\n    return this.getFactory().createMultiLineString(rings)\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_POLYGON\n  }\n  getExteriorRing() {\n    return this._shell\n  }\n  copyInternal() {\n    const shellCopy = this._shell.copy()\n    const holeCopies = new Array(this._holes.length).fill(null)\n    for (let i = 0; i < this._holes.length; i++) \n      holeCopies[i] = this._holes[i].copy()\n    \n    return new Polygon(shellCopy, holeCopies, this._factory)\n  }\n  isRectangle() {\n    if (this.getNumInteriorRing() !== 0) return false\n    if (this._shell === null) return false\n    if (this._shell.getNumPoints() !== 5) return false\n    const seq = this._shell.getCoordinateSequence()\n    const env = this.getEnvelopeInternal()\n    for (let i = 0; i < 5; i++) {\n      const x = seq.getX(i)\n      if (!(x === env.getMinX() || x === env.getMaxX())) return false\n      const y = seq.getY(i)\n      if (!(y === env.getMinY() || y === env.getMaxY())) return false\n    }\n    let prevX = seq.getX(0)\n    let prevY = seq.getY(0)\n    for (let i = 1; i <= 4; i++) {\n      const x = seq.getX(i)\n      const y = seq.getY(i)\n      const xChanged = x !== prevX\n      const yChanged = y !== prevY\n      if (xChanged === yChanged) return false\n      prevX = x\n      prevY = y\n    }\n    return true\n  }\n  normalize() {\n    if (arguments.length === 0) {\n      this._shell = this.normalized(this._shell, true)\n      for (let i = 0; i < this._holes.length; i++) \n        this._holes[i] = this.normalized(this._holes[i], false)\n      \n      Arrays.sort(this._holes)\n    } else if (arguments.length === 2) {\n      const ring = arguments[0], clockwise = arguments[1]\n      if (ring.isEmpty()) \n        return null\n      \n      const seq = ring.getCoordinateSequence()\n      const minCoordinateIndex = CoordinateSequences.minCoordinateIndex(seq, 0, seq.size() - 2)\n      CoordinateSequences.scroll(seq, minCoordinateIndex, true)\n      if (Orientation.isCCW(seq) === clockwise) CoordinateSequences.reverse(seq)\n    }\n  }\n  getCoordinate() {\n    return this._shell.getCoordinate()\n  }\n  getNumInteriorRing() {\n    return this._holes.length\n  }\n  getBoundaryDimension() {\n    return 1\n  }\n  getLength() {\n    let len = 0.0\n    len += this._shell.getLength()\n    for (let i = 0; i < this._holes.length; i++) \n      len += this._holes[i].getLength()\n    \n    return len\n  }\n  getNumPoints() {\n    let numPoints = this._shell.getNumPoints()\n    for (let i = 0; i < this._holes.length; i++) \n      numPoints += this._holes[i].getNumPoints()\n    \n    return numPoints\n  }\n  convexHull() {\n    return this.getExteriorRing().convexHull()\n  }\n  normalized(ring, clockwise) {\n    const res = ring.copy()\n    this.normalize(res, clockwise)\n    return res\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      const thisShell = this._shell\n      const otherShell = o._shell\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      const o = arguments[0], comp = arguments[1]\n      const poly = o\n      const thisShell = this._shell\n      const otherShell = poly._shell\n      const shellComp = thisShell.compareToSameClass(otherShell, comp)\n      if (shellComp !== 0) return shellComp\n      const nHole1 = this.getNumInteriorRing()\n      const nHole2 = poly.getNumInteriorRing()\n      let i = 0\n      while (i < nHole1 && i < nHole2) {\n        const thisHole = this.getInteriorRingN(i)\n        const otherHole = poly.getInteriorRingN(i)\n        const holeComp = thisHole.compareToSameClass(otherHole, comp)\n        if (holeComp !== 0) return holeComp\n        i++\n      }\n      if (i < nHole1) return 1\n      if (i < nHole2) return -1\n      return 0\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      this._shell.apply(filter)\n      for (let i = 0; i < this._holes.length; i++) \n        this._holes[i].apply(filter)\n      \n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      this._shell.apply(filter)\n      if (!filter.isDone()) \n        for (let i = 0; i < this._holes.length; i++) {\n          this._holes[i].apply(filter)\n          if (filter.isDone()) break\n        }\n      \n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n      this._shell.apply(filter)\n      for (let i = 0; i < this._holes.length; i++) \n        this._holes[i].apply(filter)\n      \n    }\n  }\n  isEmpty() {\n    return this._shell.isEmpty()\n  }\n  getInteriorRingN(n) {\n    return this._holes[n]\n  }\n  get interfaces_() {\n    return [Polygonal]\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport CoordinateSequence from '../geom/CoordinateSequence.js'\nexport default class Area {\n  static ofRingSigned() {\n    if (arguments[0] instanceof Array) {\n      const ring = arguments[0]\n      if (ring.length < 3) return 0.0\n      let sum = 0.0\n      const x0 = ring[0].x\n      for (let i = 1; i < ring.length - 1; i++) {\n        const x = ring[i].x - x0\n        const y1 = ring[i + 1].y\n        const y2 = ring[i - 1].y\n        sum += x * (y2 - y1)\n      }\n      return sum / 2.0\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      const ring = arguments[0]\n      const n = ring.size()\n      if (n < 3) return 0.0\n      const p0 = new Coordinate()\n      const p1 = new Coordinate()\n      const p2 = new Coordinate()\n      ring.getCoordinate(0, p1)\n      ring.getCoordinate(1, p2)\n      const x0 = p1.x\n      p2.x -= x0\n      let sum = 0.0\n      for (let i = 1; i < n - 1; i++) {\n        p0.y = p1.y\n        p1.x = p2.x\n        p1.y = p2.y\n        ring.getCoordinate(i + 1, p2)\n        p2.x -= x0\n        sum += p1.x * (p0.y - p2.y)\n      }\n      return sum / 2.0\n    }\n  }\n  static ofRing() {\n    if (arguments[0] instanceof Array) {\n      const ring = arguments[0]\n      return Math.abs(Area.ofRingSigned(ring))\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      const ring = arguments[0]\n      return Math.abs(Area.ofRingSigned(ring))\n    }\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport CGAlgorithmsDD from './CGAlgorithmsDD.js'\nimport CoordinateSequence from '../geom/CoordinateSequence.js'\nexport default class Orientation {\n  static isCCW() {\n    if (arguments[0] instanceof Array) {\n      const ring = arguments[0]\n      const nPts = ring.length - 1\n      if (nPts < 3) throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined')\n      let hiPt = ring[0]\n      let hiIndex = 0\n      for (let i = 1; i <= nPts; i++) {\n        const p = ring[i]\n        if (p.y > hiPt.y) {\n          hiPt = p\n          hiIndex = i\n        }\n      }\n      let iPrev = hiIndex\n      do {\n        iPrev = iPrev - 1\n        if (iPrev < 0) iPrev = nPts\n      } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n      let iNext = hiIndex\n      do \n        iNext = (iNext + 1) % nPts\n      while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n      const prev = ring[iPrev]\n      const next = ring[iNext]\n      if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false\n      const disc = Orientation.index(prev, hiPt, next)\n      let isCCW = null\n      if (disc === 0) \n        isCCW = prev.x > next.x\n      else \n        isCCW = disc > 0\n      \n      return isCCW\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      const ring = arguments[0]\n      const nPts = ring.size() - 1\n      if (nPts < 3) throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined')\n      let hiPt = ring.getCoordinate(0)\n      let hiIndex = 0\n      for (let i = 1; i <= nPts; i++) {\n        const p = ring.getCoordinate(i)\n        if (p.y > hiPt.y) {\n          hiPt = p\n          hiIndex = i\n        }\n      }\n      let prev = null\n      let iPrev = hiIndex\n      do {\n        iPrev = iPrev - 1\n        if (iPrev < 0) iPrev = nPts\n        prev = ring.getCoordinate(iPrev)\n      } while (prev.equals2D(hiPt) && iPrev !== hiIndex)\n      let next = null\n      let iNext = hiIndex\n      do {\n        iNext = (iNext + 1) % nPts\n        next = ring.getCoordinate(iNext)\n      } while (next.equals2D(hiPt) && iNext !== hiIndex)\n      if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false\n      const disc = Orientation.index(prev, hiPt, next)\n      let isCCW = null\n      if (disc === 0) \n        isCCW = prev.x > next.x\n      else \n        isCCW = disc > 0\n      \n      return isCCW\n    }\n  }\n  static index(p1, p2, q) {\n    return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n  }\n}\nOrientation.CLOCKWISE = -1\nOrientation.RIGHT = Orientation.CLOCKWISE\nOrientation.COUNTERCLOCKWISE = 1\nOrientation.LEFT = Orientation.COUNTERCLOCKWISE\nOrientation.COLLINEAR = 0\nOrientation.STRAIGHT = Orientation.COLLINEAR\n","import Coordinate from '../geom/Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport DD from '../math/DD.js'\nexport default class CGAlgorithmsDD {\n  static orientationIndex(p1, p2, q) {\n    const index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q)\n    if (index <= 1) return index\n    const dx1 = DD.valueOf(p2.x).selfAdd(-p1.x)\n    const dy1 = DD.valueOf(p2.y).selfAdd(-p1.y)\n    const dx2 = DD.valueOf(q.x).selfAdd(-p2.x)\n    const dy2 = DD.valueOf(q.y).selfAdd(-p2.y)\n    return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n  }\n  static signOfDet2x2() {\n    if (arguments[3] instanceof DD && (arguments[2] instanceof DD && (arguments[0] instanceof DD && arguments[1] instanceof DD))) {\n      const x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3]\n      const det = x1.multiply(y2).selfSubtract(y1.multiply(x2))\n      return det.signum()\n    } else if (typeof arguments[3] === 'number' && (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number'))) {\n      const dx1 = arguments[0], dy1 = arguments[1], dx2 = arguments[2], dy2 = arguments[3]\n      const x1 = DD.valueOf(dx1)\n      const y1 = DD.valueOf(dy1)\n      const x2 = DD.valueOf(dx2)\n      const y2 = DD.valueOf(dy2)\n      const det = x1.multiply(y2).selfSubtract(y1.multiply(x2))\n      return det.signum()\n    }\n  }\n  static intersection(p1, p2, q1, q2) {\n    const px = new DD(p1.y).selfSubtract(p2.y)\n    const py = new DD(p2.x).selfSubtract(p1.x)\n    const pw = new DD(p1.x).selfMultiply(p2.y).selfSubtract(new DD(p2.x).selfMultiply(p1.y))\n    const qx = new DD(q1.y).selfSubtract(q2.y)\n    const qy = new DD(q2.x).selfSubtract(q1.x)\n    const qw = new DD(q1.x).selfMultiply(q2.y).selfSubtract(new DD(q2.x).selfMultiply(q1.y))\n    const x = py.multiply(qw).selfSubtract(qy.multiply(pw))\n    const y = qx.multiply(pw).selfSubtract(px.multiply(qw))\n    const w = px.multiply(qy).selfSubtract(qx.multiply(py))\n    const xInt = x.selfDivide(w).doubleValue()\n    const yInt = y.selfDivide(w).doubleValue()\n    if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) \n      return null\n    \n    return new Coordinate(xInt, yInt)\n  }\n  static orientationIndexFilter(pa, pb, pc) {\n    let detsum = null\n    const detleft = (pa.x - pc.x) * (pb.y - pc.y)\n    const detright = (pa.y - pc.y) * (pb.x - pc.x)\n    const det = detleft - detright\n    if (detleft > 0.0) \n      if (detright <= 0.0) \n        return CGAlgorithmsDD.signum(det)\n      else \n        detsum = detleft + detright\n      \n    else if (detleft < 0.0) \n      if (detright >= 0.0) \n        return CGAlgorithmsDD.signum(det)\n      else \n        detsum = -detleft - detright\n      \n    else \n      return CGAlgorithmsDD.signum(det)\n    \n    const errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum\n    if (det >= errbound || -det >= errbound) \n      return CGAlgorithmsDD.signum(det)\n    \n    return 2\n  }\n  static signum(x) {\n    if (x > 0) return 1\n    if (x < 0) return -1\n    return 0\n  }\n}\nCGAlgorithmsDD.DP_SAFE_EPSILON = 1e-15\n","import StringBuffer from '../../../../java/lang/StringBuffer.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Integer from '../../../../java/lang/Integer.js'\nimport Character from '../../../../java/lang/Character.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport IllegalStateException from '../../../../java/lang/IllegalStateException.js'\nexport default class DD {\n  constructor() {\n    DD.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._hi = 0.0\n    this._lo = 0.0\n    if (arguments.length === 0) {\n      this.init(0.0)\n    } else if (arguments.length === 1) {\n      if (typeof arguments[0] === 'number') {\n        const x = arguments[0]\n        this.init(x)\n      } else if (arguments[0] instanceof DD) {\n        const dd = arguments[0]\n        this.init(dd)\n      } else if (typeof arguments[0] === 'string') {\n        const str = arguments[0]\n        DD.constructor_.call(this, DD.parse(str))\n      }\n    } else if (arguments.length === 2) {\n      const hi = arguments[0], lo = arguments[1]\n      this.init(hi, lo)\n    }\n  }\n  static determinant() {\n    if (typeof arguments[3] === 'number' && (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number'))) {\n      const x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3]\n      return DD.determinant(DD.valueOf(x1), DD.valueOf(y1), DD.valueOf(x2), DD.valueOf(y2))\n    } else if (arguments[3] instanceof DD && (arguments[2] instanceof DD && (arguments[0] instanceof DD && arguments[1] instanceof DD))) {\n      const x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3]\n      const det = x1.multiply(y2).selfSubtract(y1.multiply(x2))\n      return det\n    }\n  }\n  static sqr(x) {\n    return DD.valueOf(x).selfMultiply(x)\n  }\n  static valueOf() {\n    if (typeof arguments[0] === 'string') {\n      const str = arguments[0]\n      return DD.parse(str)\n    } else if (typeof arguments[0] === 'number') {\n      const x = arguments[0]\n      return new DD(x)\n    }\n  }\n  static sqrt(x) {\n    return DD.valueOf(x).sqrt()\n  }\n  static parse(str) {\n    let i = 0\n    const strlen = str.length\n    while (Character.isWhitespace(str.charAt(i))) i++\n    let isNegative = false\n    if (i < strlen) {\n      const signCh = str.charAt(i)\n      if (signCh === '-' || signCh === '+') {\n        i++\n        if (signCh === '-') isNegative = true\n      }\n    }\n    const val = new DD()\n    let numDigits = 0\n    let numBeforeDec = 0\n    let exp = 0\n    let hasDecimalChar = false\n    while (true) {\n      if (i >= strlen) break\n      const ch = str.charAt(i)\n      i++\n      if (Character.isDigit(ch)) {\n        const d = ch - '0'\n        val.selfMultiply(DD.TEN)\n        val.selfAdd(d)\n        numDigits++\n        continue\n      }\n      if (ch === '.') {\n        numBeforeDec = numDigits\n        hasDecimalChar = true\n        continue\n      }\n      if (ch === 'e' || ch === 'E') {\n        const expStr = str.substring(i)\n        try {\n          exp = Integer.parseInt(expStr)\n        } catch (ex) {\n          if (ex instanceof NumberFormatException) \n            throw new NumberFormatException('Invalid exponent ' + expStr + ' in string ' + str)\n          else throw ex\n        } finally {}\n        break\n      }\n      throw new NumberFormatException('Unexpected character \\'' + ch + '\\' at position ' + i + ' in string ' + str)\n    }\n    let val2 = val\n    if (!hasDecimalChar) numBeforeDec = numDigits\n    const numDecPlaces = numDigits - numBeforeDec - exp\n    if (numDecPlaces === 0) {\n      val2 = val\n    } else if (numDecPlaces > 0) {\n      const scale = DD.TEN.pow(numDecPlaces)\n      val2 = val.divide(scale)\n    } else if (numDecPlaces < 0) {\n      const scale = DD.TEN.pow(-numDecPlaces)\n      val2 = val.multiply(scale)\n    }\n    if (isNegative) \n      return val2.negate()\n    \n    return val2\n  }\n  static createNaN() {\n    return new DD(Double.NaN, Double.NaN)\n  }\n  static copy(dd) {\n    return new DD(dd)\n  }\n  static magnitude(x) {\n    const xAbs = Math.abs(x)\n    const xLog10 = Math.log(xAbs) / Math.log(10)\n    let xMag = Math.trunc(Math.floor(xLog10))\n    const xApprox = Math.pow(10, xMag)\n    if (xApprox * 10 <= xAbs) xMag += 1\n    return xMag\n  }\n  static stringOfChar(ch, len) {\n    const buf = new StringBuffer()\n    for (let i = 0; i < len; i++) \n      buf.append(ch)\n    \n    return buf.toString()\n  }\n  le(y) {\n    return this._hi < y._hi || this._hi === y._hi && this._lo <= y._lo\n  }\n  extractSignificantDigits(insertDecimalPoint, magnitude) {\n    let y = this.abs()\n    let mag = DD.magnitude(y._hi)\n    const scale = DD.TEN.pow(mag)\n    y = y.divide(scale)\n    if (y.gt(DD.TEN)) {\n      y = y.divide(DD.TEN)\n      mag += 1\n    } else if (y.lt(DD.ONE)) {\n      y = y.multiply(DD.TEN)\n      mag -= 1\n    }\n    const decimalPointPos = mag + 1\n    const buf = new StringBuffer()\n    const numDigits = DD.MAX_PRINT_DIGITS - 1\n    for (let i = 0; i <= numDigits; i++) {\n      if (insertDecimalPoint && i === decimalPointPos) \n        buf.append('.')\n      \n      const digit = Math.trunc(y._hi)\n      if (digit < 0 || digit > 9) {}\n      if (digit < 0) \n        break\n      \n      let rebiasBy10 = false\n      let digitChar = 0\n      if (digit > 9) {\n        rebiasBy10 = true\n        digitChar = '9'\n      } else {\n        digitChar = '0' + digit\n      }\n      buf.append(digitChar)\n      y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN)\n      if (rebiasBy10) y.selfAdd(DD.TEN)\n      let continueExtractingDigits = true\n      const remMag = DD.magnitude(y._hi)\n      if (remMag < 0 && Math.abs(remMag) >= numDigits - i) continueExtractingDigits = false\n      if (!continueExtractingDigits) break\n    }\n    magnitude[0] = mag\n    return buf.toString()\n  }\n  sqr() {\n    return this.multiply(this)\n  }\n  getSpecialNumberString() {\n    if (this.isZero()) return '0.0'\n    if (this.isNaN()) return 'NaN '\n    return null\n  }\n  setValue() {\n    if (arguments[0] instanceof DD) {\n      const value = arguments[0]\n      this.init(value)\n      return this\n    } else if (typeof arguments[0] === 'number') {\n      const value = arguments[0]\n      this.init(value)\n      return this\n    }\n  }\n  multiply() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      if (y.isNaN()) return DD.createNaN()\n      return DD.copy(this).selfMultiply(y)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      if (Double.isNaN(y)) return DD.createNaN()\n      return DD.copy(this).selfMultiply(y, 0.0)\n    }\n  }\n  isNaN() {\n    return Double.isNaN(this._hi)\n  }\n  reciprocal() {\n    let hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null\n    C = 1.0 / this._hi\n    c = DD.SPLIT * C\n    hc = c - C\n    u = DD.SPLIT * this._hi\n    hc = c - hc\n    tc = C - hc\n    hy = u - this._hi\n    U = C * this._hi\n    hy = u - hy\n    ty = this._hi - hy\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty\n    c = (1.0 - U - u - C * this._lo) / this._hi\n    const zhi = C + c\n    const zlo = C - zhi + c\n    return new DD(zhi, zlo)\n  }\n  doubleValue() {\n    return this._hi + this._lo\n  }\n  subtract() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      return this.add(y.negate())\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      return this.add(-y)\n    }\n  }\n  equals() {\n    if (arguments.length === 1 && arguments[0] instanceof DD) {\n      const y = arguments[0]\n      return this._hi === y._hi && this._lo === y._lo\n    }\n  }\n  isZero() {\n    return this._hi === 0.0 && this._lo === 0.0\n  }\n  selfSubtract() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      if (this.isNaN()) return this\n      return this.selfAdd(-y._hi, -y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      if (this.isNaN()) return this\n      return this.selfAdd(-y, 0.0)\n    }\n  }\n  min(x) {\n    if (this.le(x)) \n      return this\n    else \n      return x\n    \n  }\n  selfDivide() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof DD) {\n        const y = arguments[0]\n        return this.selfDivide(y._hi, y._lo)\n      } else if (typeof arguments[0] === 'number') {\n        const y = arguments[0]\n        return this.selfDivide(y, 0.0)\n      }\n    } else if (arguments.length === 2) {\n      const yhi = arguments[0], ylo = arguments[1]\n      let hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null\n      C = this._hi / yhi\n      c = DD.SPLIT * C\n      hc = c - C\n      u = DD.SPLIT * yhi\n      hc = c - hc\n      tc = C - hc\n      hy = u - yhi\n      U = C * yhi\n      hy = u - hy\n      ty = yhi - hy\n      u = hc * hy - U + hc * ty + tc * hy + tc * ty\n      c = (this._hi - U - u + this._lo - C * ylo) / yhi\n      u = C + c\n      this._hi = u\n      this._lo = C - u + c\n      return this\n    }\n  }\n  dump() {\n    return 'DD<' + this._hi + ', ' + this._lo + '>'\n  }\n  divide() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      let hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null\n      C = this._hi / y._hi\n      c = DD.SPLIT * C\n      hc = c - C\n      u = DD.SPLIT * y._hi\n      hc = c - hc\n      tc = C - hc\n      hy = u - y._hi\n      U = C * y._hi\n      hy = u - hy\n      ty = y._hi - hy\n      u = hc * hy - U + hc * ty + tc * hy + tc * ty\n      c = (this._hi - U - u + this._lo - C * y._lo) / y._hi\n      u = C + c\n      const zhi = u\n      const zlo = C - u + c\n      return new DD(zhi, zlo)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      if (Double.isNaN(y)) return DD.createNaN()\n      return DD.copy(this).selfDivide(y, 0.0)\n    }\n  }\n  ge(y) {\n    return this._hi > y._hi || this._hi === y._hi && this._lo >= y._lo\n  }\n  pow(exp) {\n    if (exp === 0.0) return DD.valueOf(1.0)\n    let r = new DD(this)\n    let s = DD.valueOf(1.0)\n    let n = Math.abs(exp)\n    if (n > 1) \n      while (n > 0) {\n        if (n % 2 === 1) \n          s.selfMultiply(r)\n        \n        n /= 2\n        if (n > 0) r = r.sqr()\n      }\n    else \n      s = r\n    \n    if (exp < 0) return s.reciprocal()\n    return s\n  }\n  ceil() {\n    if (this.isNaN()) return DD.NaN\n    const fhi = Math.ceil(this._hi)\n    let flo = 0.0\n    if (fhi === this._hi) \n      flo = Math.ceil(this._lo)\n    \n    return new DD(fhi, flo)\n  }\n  compareTo(o) {\n    const other = o\n    if (this._hi < other._hi) return -1\n    if (this._hi > other._hi) return 1\n    if (this._lo < other._lo) return -1\n    if (this._lo > other._lo) return 1\n    return 0\n  }\n  rint() {\n    if (this.isNaN()) return this\n    const plus5 = this.add(0.5)\n    return plus5.floor()\n  }\n  max(x) {\n    if (this.ge(x)) \n      return this\n    else \n      return x\n    \n  }\n  sqrt() {\n    if (this.isZero()) return DD.valueOf(0.0)\n    if (this.isNegative()) \n      return DD.NaN\n    \n    const x = 1.0 / Math.sqrt(this._hi)\n    const ax = this._hi * x\n    const axdd = DD.valueOf(ax)\n    const diffSq = this.subtract(axdd.sqr())\n    const d2 = diffSq._hi * (x * 0.5)\n    return axdd.add(d2)\n  }\n  selfAdd() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof DD) {\n        const y = arguments[0]\n        return this.selfAdd(y._hi, y._lo)\n      } else if (typeof arguments[0] === 'number') {\n        const y = arguments[0]\n        let H = null, h = null, S = null, s = null, e = null, f = null\n        S = this._hi + y\n        e = S - this._hi\n        s = S - e\n        s = y - e + (this._hi - s)\n        f = s + this._lo\n        H = S + f\n        h = f + (S - H)\n        this._hi = H + h\n        this._lo = h + (H - this._hi)\n        return this\n      }\n    } else if (arguments.length === 2) {\n      const yhi = arguments[0], ylo = arguments[1]\n      let H = null, h = null, T = null, t = null, S = null, s = null, e = null, f = null\n      S = this._hi + yhi\n      T = this._lo + ylo\n      e = S - this._hi\n      f = T - this._lo\n      s = S - e\n      t = T - f\n      s = yhi - e + (this._hi - s)\n      t = ylo - f + (this._lo - t)\n      e = s + T\n      H = S + e\n      h = e + (S - H)\n      e = t + h\n      const zhi = H + e\n      const zlo = e + (H - zhi)\n      this._hi = zhi\n      this._lo = zlo\n      return this\n    }\n  }\n  selfMultiply() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof DD) {\n        const y = arguments[0]\n        return this.selfMultiply(y._hi, y._lo)\n      } else if (typeof arguments[0] === 'number') {\n        const y = arguments[0]\n        return this.selfMultiply(y, 0.0)\n      }\n    } else if (arguments.length === 2) {\n      const yhi = arguments[0], ylo = arguments[1]\n      let hx = null, tx = null, hy = null, ty = null, C = null, c = null\n      C = DD.SPLIT * this._hi\n      hx = C - this._hi\n      c = DD.SPLIT * yhi\n      hx = C - hx\n      tx = this._hi - hx\n      hy = c - yhi\n      C = this._hi * yhi\n      hy = c - hy\n      ty = yhi - hy\n      c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi)\n      const zhi = C + c\n      hx = C - zhi\n      const zlo = c + hx\n      this._hi = zhi\n      this._lo = zlo\n      return this\n    }\n  }\n  selfSqr() {\n    return this.selfMultiply(this)\n  }\n  floor() {\n    if (this.isNaN()) return DD.NaN\n    const fhi = Math.floor(this._hi)\n    let flo = 0.0\n    if (fhi === this._hi) \n      flo = Math.floor(this._lo)\n    \n    return new DD(fhi, flo)\n  }\n  negate() {\n    if (this.isNaN()) return this\n    return new DD(-this._hi, -this._lo)\n  }\n  clone() {\n    try {\n      return null\n    } catch (ex) {\n      if (ex instanceof CloneNotSupportedException) \n        return null\n      else throw ex\n    } finally {}\n  }\n  intValue() {\n    return Math.trunc(this._hi)\n  }\n  toString() {\n    const mag = DD.magnitude(this._hi)\n    if (mag >= -3 && mag <= 20) return this.toStandardNotation()\n    return this.toSciNotation()\n  }\n  toStandardNotation() {\n    const specialStr = this.getSpecialNumberString()\n    if (specialStr !== null) return specialStr\n    const magnitude = new Array(1).fill(null)\n    const sigDigits = this.extractSignificantDigits(true, magnitude)\n    const decimalPointPos = magnitude[0] + 1\n    let num = sigDigits\n    if (sigDigits.charAt(0) === '.') {\n      num = '0' + sigDigits\n    } else if (decimalPointPos < 0) {\n      num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits\n    } else if (sigDigits.indexOf('.') === -1) {\n      const numZeroes = decimalPointPos - sigDigits.length\n      const zeroes = DD.stringOfChar('0', numZeroes)\n      num = sigDigits + zeroes + '.0'\n    }\n    if (this.isNegative()) return '-' + num\n    return num\n  }\n  toSciNotation() {\n    if (this.isZero()) return DD.SCI_NOT_ZERO\n    const specialStr = this.getSpecialNumberString()\n    if (specialStr !== null) return specialStr\n    const magnitude = new Array(1).fill(null)\n    const digits = this.extractSignificantDigits(false, magnitude)\n    const expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0]\n    if (digits.charAt(0) === '0') \n      throw new IllegalStateException('Found leading zero: ' + digits)\n    \n    let trailingDigits = ''\n    if (digits.length > 1) trailingDigits = digits.substring(1)\n    const digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits\n    if (this.isNegative()) return '-' + digitsWithDecimal + expStr\n    return digitsWithDecimal + expStr\n  }\n  abs() {\n    if (this.isNaN()) return DD.NaN\n    if (this.isNegative()) return this.negate()\n    return new DD(this)\n  }\n  isPositive() {\n    return this._hi > 0.0 || this._hi === 0.0 && this._lo > 0.0\n  }\n  lt(y) {\n    return this._hi < y._hi || this._hi === y._hi && this._lo < y._lo\n  }\n  add() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      return DD.copy(this).selfAdd(y)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      return DD.copy(this).selfAdd(y)\n    }\n  }\n  init() {\n    if (arguments.length === 1) {\n      if (typeof arguments[0] === 'number') {\n        const x = arguments[0]\n        this._hi = x\n        this._lo = 0.0\n      } else if (arguments[0] instanceof DD) {\n        const dd = arguments[0]\n        this._hi = dd._hi\n        this._lo = dd._lo\n      }\n    } else if (arguments.length === 2) {\n      const hi = arguments[0], lo = arguments[1]\n      this._hi = hi\n      this._lo = lo\n    }\n  }\n  gt(y) {\n    return this._hi > y._hi || this._hi === y._hi && this._lo > y._lo\n  }\n  isNegative() {\n    return this._hi < 0.0 || this._hi === 0.0 && this._lo < 0.0\n  }\n  trunc() {\n    if (this.isNaN()) return DD.NaN\n    if (this.isPositive()) return this.floor(); else return this.ceil()\n  }\n  signum() {\n    if (this._hi > 0) return 1\n    if (this._hi < 0) return -1\n    if (this._lo > 0) return 1\n    if (this._lo < 0) return -1\n    return 0\n  }\n  get interfaces_() {\n    return [Serializable, Comparable, Cloneable]\n  }\n}\nDD.PI = new DD(3.141592653589793116e+00, 1.224646799147353207e-16)\nDD.TWO_PI = new DD(6.283185307179586232e+00, 2.449293598294706414e-16)\nDD.PI_2 = new DD(1.570796326794896558e+00, 6.123233995736766036e-17)\nDD.E = new DD(2.718281828459045091e+00, 1.445646891729250158e-16)\nDD.NaN = new DD(Double.NaN, Double.NaN)\nDD.EPS = 1.23259516440783e-32\nDD.SPLIT = 134217729.0\nDD.MAX_PRINT_DIGITS = 32\nDD.TEN = DD.valueOf(10.0)\nDD.ONE = DD.valueOf(1.0)\nDD.SCI_NOT_EXPONENT_CHAR = 'E'\nDD.SCI_NOT_ZERO = '0.0E0'\n","export default class StringBuffer {\n  constructor(str) {\n    this.str = str\n  }\n  append(e) {\n    this.str += e\n  }\n  setCharAt(i, c) {\n    this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n  }\n  toString() {\n    return this.str\n  }\n}","import Geometry from './Geometry.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport Dimension from './Dimension.js'\nimport Puntal from './Puntal.js'\nexport default class MultiPoint extends GeometryCollection {\n  constructor() {\n    super()\n    MultiPoint.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const points = arguments[0], factory = arguments[1]\n    GeometryCollection.constructor_.call(this, points, factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      return super.equalsExact.call(this, other, tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_MULTIPOINT\n  }\n  getDimension() {\n    return 0\n  }\n  getBoundary() {\n    return this.getFactory().createGeometryCollection()\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_MULTIPOINT\n  }\n  copyInternal() {\n    const points = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < points.length; i++) \n      points[i] = this._geometries[i].copy()\n    \n    return new MultiPoint(points, this._factory)\n  }\n  isValid() {\n    return true\n  }\n  getCoordinate() {\n    if (arguments.length === 1 && Number.isInteger(arguments[0])) {\n      const n = arguments[0]\n      return this._geometries[n].getCoordinate()\n    } else {\n      return super.getCoordinate.apply(this, arguments)\n    }\n  }\n  getBoundaryDimension() {\n    return Dimension.FALSE\n  }\n  get interfaces_() {\n    return [Puntal]\n  }\n}\n","import Location from './Location.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Dimension from './Dimension.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nimport StringBuilder from '../../../../java/lang/StringBuilder.js'\nexport default class IntersectionMatrix {\n  constructor() {\n    IntersectionMatrix.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._matrix = null\n    if (arguments.length === 0) {\n      this._matrix = Array(3).fill().map(() => Array(3))\n      this.setAll(Dimension.FALSE)\n    } else if (arguments.length === 1) {\n      if (typeof arguments[0] === 'string') {\n        const elements = arguments[0]\n        IntersectionMatrix.constructor_.call(this)\n        this.set(elements)\n      } else if (arguments[0] instanceof IntersectionMatrix) {\n        const other = arguments[0]\n        IntersectionMatrix.constructor_.call(this)\n        this._matrix[Location.INTERIOR][Location.INTERIOR] = other._matrix[Location.INTERIOR][Location.INTERIOR]\n        this._matrix[Location.INTERIOR][Location.BOUNDARY] = other._matrix[Location.INTERIOR][Location.BOUNDARY]\n        this._matrix[Location.INTERIOR][Location.EXTERIOR] = other._matrix[Location.INTERIOR][Location.EXTERIOR]\n        this._matrix[Location.BOUNDARY][Location.INTERIOR] = other._matrix[Location.BOUNDARY][Location.INTERIOR]\n        this._matrix[Location.BOUNDARY][Location.BOUNDARY] = other._matrix[Location.BOUNDARY][Location.BOUNDARY]\n        this._matrix[Location.BOUNDARY][Location.EXTERIOR] = other._matrix[Location.BOUNDARY][Location.EXTERIOR]\n        this._matrix[Location.EXTERIOR][Location.INTERIOR] = other._matrix[Location.EXTERIOR][Location.INTERIOR]\n        this._matrix[Location.EXTERIOR][Location.BOUNDARY] = other._matrix[Location.EXTERIOR][Location.BOUNDARY]\n        this._matrix[Location.EXTERIOR][Location.EXTERIOR] = other._matrix[Location.EXTERIOR][Location.EXTERIOR]\n      }\n    }\n  }\n  static isTrue(actualDimensionValue) {\n    if (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE) \n      return true\n    \n    return false\n  }\n  static matches() {\n    if (Number.isInteger(arguments[0]) && typeof arguments[1] === 'string') {\n      const actualDimensionValue = arguments[0], requiredDimensionSymbol = arguments[1]\n      if (requiredDimensionSymbol === Dimension.SYM_DONTCARE) \n        return true\n      \n      if (requiredDimensionSymbol === Dimension.SYM_TRUE && (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE)) \n        return true\n      \n      if (requiredDimensionSymbol === Dimension.SYM_FALSE && actualDimensionValue === Dimension.FALSE) \n        return true\n      \n      if (requiredDimensionSymbol === Dimension.SYM_P && actualDimensionValue === Dimension.P) \n        return true\n      \n      if (requiredDimensionSymbol === Dimension.SYM_L && actualDimensionValue === Dimension.L) \n        return true\n      \n      if (requiredDimensionSymbol === Dimension.SYM_A && actualDimensionValue === Dimension.A) \n        return true\n      \n      return false\n    } else if (typeof arguments[0] === 'string' && typeof arguments[1] === 'string') {\n      const actualDimensionSymbols = arguments[0], requiredDimensionSymbols = arguments[1]\n      const m = new IntersectionMatrix(actualDimensionSymbols)\n      return m.matches(requiredDimensionSymbols)\n    }\n  }\n  isIntersects() {\n    return !this.isDisjoint()\n  }\n  set() {\n    if (arguments.length === 1) {\n      const dimensionSymbols = arguments[0]\n      for (let i = 0; i < dimensionSymbols.length; i++) {\n        const row = Math.trunc(i / 3)\n        const col = i % 3\n        this._matrix[row][col] = Dimension.toDimensionValue(dimensionSymbols.charAt(i))\n      }\n    } else if (arguments.length === 3) {\n      const row = arguments[0], column = arguments[1], dimensionValue = arguments[2]\n      this._matrix[row][column] = dimensionValue\n    }\n  }\n  isContains() {\n    return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE\n  }\n  isWithin() {\n    return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE\n  }\n  isTouches(dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA > dimensionOfGeometryB) \n      return this.isTouches(dimensionOfGeometryB, dimensionOfGeometryA)\n    \n    if (dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L) \n      return this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && (IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]))\n    \n    return false\n  }\n  isOverlaps(dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A) \n      return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR])\n    \n    if (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) \n      return this._matrix[Location.INTERIOR][Location.INTERIOR] === 1 && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR])\n    \n    return false\n  }\n  isEquals(dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA !== dimensionOfGeometryB) \n      return false\n    \n    return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE\n  }\n  matches(requiredDimensionSymbols) {\n    if (requiredDimensionSymbols.length !== 9) \n      throw new IllegalArgumentException('Should be length 9: ' + requiredDimensionSymbols)\n    \n    for (let ai = 0; ai < 3; ai++) \n      for (let bi = 0; bi < 3; bi++) \n        if (!IntersectionMatrix.matches(this._matrix[ai][bi], requiredDimensionSymbols.charAt(3 * ai + bi))) \n          return false\n        \n      \n    \n    return true\n  }\n  add(im) {\n    for (let i = 0; i < 3; i++) \n      for (let j = 0; j < 3; j++) \n        this.setAtLeast(i, j, im.get(i, j))\n      \n    \n  }\n  isDisjoint() {\n    return this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.INTERIOR][Location.BOUNDARY] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.BOUNDARY] === Dimension.FALSE\n  }\n  isCrosses(dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A) \n      return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR])\n    \n    if (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.L) \n      return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR])\n    \n    if (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) \n      return this._matrix[Location.INTERIOR][Location.INTERIOR] === 0\n    \n    return false\n  }\n  isCovers() {\n    const hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY])\n    return hasPointInCommon && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE\n  }\n  isCoveredBy() {\n    const hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY])\n    return hasPointInCommon && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE\n  }\n  setAtLeast() {\n    if (arguments.length === 1) {\n      const minimumDimensionSymbols = arguments[0]\n      for (let i = 0; i < minimumDimensionSymbols.length; i++) {\n        const row = Math.trunc(i / 3)\n        const col = i % 3\n        this.setAtLeast(row, col, Dimension.toDimensionValue(minimumDimensionSymbols.charAt(i)))\n      }\n    } else if (arguments.length === 3) {\n      const row = arguments[0], column = arguments[1], minimumDimensionValue = arguments[2]\n      if (this._matrix[row][column] < minimumDimensionValue) \n        this._matrix[row][column] = minimumDimensionValue\n      \n    }\n  }\n  setAtLeastIfValid(row, column, minimumDimensionValue) {\n    if (row >= 0 && column >= 0) \n      this.setAtLeast(row, column, minimumDimensionValue)\n    \n  }\n  toString() {\n    const builder = new StringBuilder('123456789')\n    for (let ai = 0; ai < 3; ai++) \n      for (let bi = 0; bi < 3; bi++) \n        builder.setCharAt(3 * ai + bi, Dimension.toDimensionSymbol(this._matrix[ai][bi]))\n      \n    \n    return builder.toString()\n  }\n  setAll(dimensionValue) {\n    for (let ai = 0; ai < 3; ai++) \n      for (let bi = 0; bi < 3; bi++) \n        this._matrix[ai][bi] = dimensionValue\n      \n    \n  }\n  get(row, column) {\n    return this._matrix[row][column]\n  }\n  transpose() {\n    let temp = this._matrix[1][0]\n    this._matrix[1][0] = this._matrix[0][1]\n    this._matrix[0][1] = temp\n    temp = this._matrix[2][0]\n    this._matrix[2][0] = this._matrix[0][2]\n    this._matrix[0][2] = temp\n    temp = this._matrix[2][1]\n    this._matrix[2][1] = this._matrix[1][2]\n    this._matrix[1][2] = temp\n    return this\n  }\n  get interfaces_() {\n    return [Cloneable]\n  }\n}\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class Location {\n  static toLocationSymbol(locationValue) {\n    switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    }\n    throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n  }\n}\nLocation.INTERIOR = 0\nLocation.BOUNDARY = 1\nLocation.EXTERIOR = 2\nLocation.NONE = -1\n","import Orientation from '../algorithm/Orientation.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Quadrant from './Quadrant.js'\nimport Assert from '../util/Assert.js'\nexport default class EdgeEnd {\n  constructor() {\n    EdgeEnd.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edge = null\n    this._label = null\n    this._node = null\n    this._p0 = null\n    this._p1 = null\n    this._dx = null\n    this._dy = null\n    this._quadrant = null\n    if (arguments.length === 1) {\n      const edge = arguments[0]\n      this._edge = edge\n    } else if (arguments.length === 3) {\n      const edge = arguments[0], p0 = arguments[1], p1 = arguments[2]\n      EdgeEnd.constructor_.call(this, edge, p0, p1, null)\n    } else if (arguments.length === 4) {\n      const edge = arguments[0], p0 = arguments[1], p1 = arguments[2], label = arguments[3]\n      EdgeEnd.constructor_.call(this, edge)\n      this.init(p0, p1)\n      this._label = label\n    }\n  }\n  compareDirection(e) {\n    if (this._dx === e._dx && this._dy === e._dy) return 0\n    if (this._quadrant > e._quadrant) return 1\n    if (this._quadrant < e._quadrant) return -1\n    return Orientation.index(e._p0, e._p1, this._p1)\n  }\n  getDy() {\n    return this._dy\n  }\n  print(out) {\n    const angle = Math.atan2(this._dy, this._dx)\n    const className = this.getClass().getName()\n    const lastDotPos = className.lastIndexOf('.')\n    const name = className.substring(lastDotPos + 1)\n    out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label)\n  }\n  getLabel() {\n    return this._label\n  }\n  getEdge() {\n    return this._edge\n  }\n  toString() {\n    const angle = Math.atan2(this._dy, this._dx)\n    const className = this.getClass().getName()\n    const lastDotPos = className.lastIndexOf('.')\n    const name = className.substring(lastDotPos + 1)\n    return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n  }\n  computeLabel(boundaryNodeRule) {}\n  init(p0, p1) {\n    this._p0 = p0\n    this._p1 = p1\n    this._dx = p1.x - p0.x\n    this._dy = p1.y - p0.y\n    this._quadrant = Quadrant.quadrant(this._dx, this._dy)\n    Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found')\n  }\n  getCoordinate() {\n    return this._p0\n  }\n  setNode(node) {\n    this._node = node\n  }\n  compareTo(obj) {\n    const e = obj\n    return this.compareDirection(e)\n  }\n  getDirectedCoordinate() {\n    return this._p1\n  }\n  getDx() {\n    return this._dx\n  }\n  getQuadrant() {\n    return this._quadrant\n  }\n  getNode() {\n    return this._node\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class Quadrant {\n  static isNorthern(quad) {\n    return quad === Quadrant.NE || quad === Quadrant.NW\n  }\n  static isOpposite(quad1, quad2) {\n    if (quad1 === quad2) return false\n    const diff = (quad1 - quad2 + 4) % 4\n    if (diff === 2) return true\n    return false\n  }\n  static commonHalfPlane(quad1, quad2) {\n    if (quad1 === quad2) return quad1\n    const diff = (quad1 - quad2 + 4) % 4\n    if (diff === 2) return -1\n    const min = quad1 < quad2 ? quad1 : quad2\n    const max = quad1 > quad2 ? quad1 : quad2\n    if (min === 0 && max === 3) return 3\n    return min\n  }\n  static isInHalfPlane(quad, halfPlane) {\n    if (halfPlane === Quadrant.SE) \n      return quad === Quadrant.SE || quad === Quadrant.SW\n    \n    return quad === halfPlane || quad === halfPlane + 1\n  }\n  static quadrant() {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      const dx = arguments[0], dy = arguments[1]\n      if (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )')\n      if (dx >= 0.0) \n        if (dy >= 0.0) return Quadrant.NE; else return Quadrant.SE\n      else \n        if (dy >= 0.0) return Quadrant.NW; else return Quadrant.SW\n      \n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      const p0 = arguments[0], p1 = arguments[1]\n      if (p1.x === p0.x && p1.y === p0.y) throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0)\n      if (p1.x >= p0.x) \n        if (p1.y >= p0.y) return Quadrant.NE; else return Quadrant.SE\n      else \n        if (p1.y >= p0.y) return Quadrant.NW; else return Quadrant.SW\n      \n    }\n  }\n}\nQuadrant.NE = 0\nQuadrant.NW = 1\nQuadrant.SW = 2\nQuadrant.SE = 3\n","import StringBuffer from '../../../../java/lang/StringBuffer.js'\nimport Location from '../geom/Location.js'\nimport Position from './Position.js'\nimport TopologyLocation from './TopologyLocation.js'\nexport default class Label {\n  constructor() {\n    Label.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.elt = new Array(2).fill(null)\n    if (arguments.length === 1) {\n      if (Number.isInteger(arguments[0])) {\n        const onLoc = arguments[0]\n        this.elt[0] = new TopologyLocation(onLoc)\n        this.elt[1] = new TopologyLocation(onLoc)\n      } else if (arguments[0] instanceof Label) {\n        const lbl = arguments[0]\n        this.elt[0] = new TopologyLocation(lbl.elt[0])\n        this.elt[1] = new TopologyLocation(lbl.elt[1])\n      }\n    } else if (arguments.length === 2) {\n      const geomIndex = arguments[0], onLoc = arguments[1]\n      this.elt[0] = new TopologyLocation(Location.NONE)\n      this.elt[1] = new TopologyLocation(Location.NONE)\n      this.elt[geomIndex].setLocation(onLoc)\n    } else if (arguments.length === 3) {\n      const onLoc = arguments[0], leftLoc = arguments[1], rightLoc = arguments[2]\n      this.elt[0] = new TopologyLocation(onLoc, leftLoc, rightLoc)\n      this.elt[1] = new TopologyLocation(onLoc, leftLoc, rightLoc)\n    } else if (arguments.length === 4) {\n      const geomIndex = arguments[0], onLoc = arguments[1], leftLoc = arguments[2], rightLoc = arguments[3]\n      this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE)\n      this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE)\n      this.elt[geomIndex].setLocations(onLoc, leftLoc, rightLoc)\n    }\n  }\n  static toLineLabel(label) {\n    const lineLabel = new Label(Location.NONE)\n    for (let i = 0; i < 2; i++) \n      lineLabel.setLocation(i, label.getLocation(i))\n    \n    return lineLabel\n  }\n  getGeometryCount() {\n    let count = 0\n    if (!this.elt[0].isNull()) count++\n    if (!this.elt[1].isNull()) count++\n    return count\n  }\n  setAllLocations(geomIndex, location) {\n    this.elt[geomIndex].setAllLocations(location)\n  }\n  isNull(geomIndex) {\n    return this.elt[geomIndex].isNull()\n  }\n  setAllLocationsIfNull() {\n    if (arguments.length === 1) {\n      const location = arguments[0]\n      this.setAllLocationsIfNull(0, location)\n      this.setAllLocationsIfNull(1, location)\n    } else if (arguments.length === 2) {\n      const geomIndex = arguments[0], location = arguments[1]\n      this.elt[geomIndex].setAllLocationsIfNull(location)\n    }\n  }\n  isLine(geomIndex) {\n    return this.elt[geomIndex].isLine()\n  }\n  merge(lbl) {\n    for (let i = 0; i < 2; i++) \n      if (this.elt[i] === null && lbl.elt[i] !== null) \n        this.elt[i] = new TopologyLocation(lbl.elt[i])\n      else \n        this.elt[i].merge(lbl.elt[i])\n      \n    \n  }\n  flip() {\n    this.elt[0].flip()\n    this.elt[1].flip()\n  }\n  getLocation() {\n    if (arguments.length === 1) {\n      const geomIndex = arguments[0]\n      return this.elt[geomIndex].get(Position.ON)\n    } else if (arguments.length === 2) {\n      const geomIndex = arguments[0], posIndex = arguments[1]\n      return this.elt[geomIndex].get(posIndex)\n    }\n  }\n  toString() {\n    const buf = new StringBuffer()\n    if (this.elt[0] !== null) {\n      buf.append('A:')\n      buf.append(this.elt[0].toString())\n    }\n    if (this.elt[1] !== null) {\n      buf.append(' B:')\n      buf.append(this.elt[1].toString())\n    }\n    return buf.toString()\n  }\n  setLocation() {\n    if (arguments.length === 2) {\n      const geomIndex = arguments[0], location = arguments[1]\n      this.elt[geomIndex].setLocation(Position.ON, location)\n    } else if (arguments.length === 3) {\n      const geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2]\n      this.elt[geomIndex].setLocation(posIndex, location)\n    }\n  }\n  isEqualOnSide(lbl, side) {\n    return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n  }\n  allPositionsEqual(geomIndex, loc) {\n    return this.elt[geomIndex].allPositionsEqual(loc)\n  }\n  toLine(geomIndex) {\n    if (this.elt[geomIndex].isArea()) this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0])\n  }\n  isArea() {\n    if (arguments.length === 0) {\n      return this.elt[0].isArea() || this.elt[1].isArea()\n    } else if (arguments.length === 1) {\n      const geomIndex = arguments[0]\n      return this.elt[geomIndex].isArea()\n    }\n  }\n  isAnyNull(geomIndex) {\n    return this.elt[geomIndex].isAnyNull()\n  }\n}\n","export default class Position {\n  static opposite(position) {\n    if (position === Position.LEFT) return Position.RIGHT\n    if (position === Position.RIGHT) return Position.LEFT\n    return position\n  }\n}\nPosition.ON = 0\nPosition.LEFT = 1\nPosition.RIGHT = 2\n","import StringBuffer from '../../../../java/lang/StringBuffer.js'\nimport Location from '../geom/Location.js'\nimport Position from './Position.js'\nexport default class TopologyLocation {\n  constructor() {\n    TopologyLocation.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.location = null\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const location = arguments[0]\n        this.init(location.length)\n      } else if (Number.isInteger(arguments[0])) {\n        const on = arguments[0]\n        this.init(1)\n        this.location[Position.ON] = on\n      } else if (arguments[0] instanceof TopologyLocation) {\n        const gl = arguments[0]\n        this.init(gl.location.length)\n        if (gl !== null) \n          for (let i = 0; i < this.location.length; i++) \n            this.location[i] = gl.location[i]\n          \n        \n      }\n    } else if (arguments.length === 3) {\n      const on = arguments[0], left = arguments[1], right = arguments[2]\n      this.init(3)\n      this.location[Position.ON] = on\n      this.location[Position.LEFT] = left\n      this.location[Position.RIGHT] = right\n    }\n  }\n  setAllLocations(locValue) {\n    for (let i = 0; i < this.location.length; i++) \n      this.location[i] = locValue\n    \n  }\n  isNull() {\n    for (let i = 0; i < this.location.length; i++) \n      if (this.location[i] !== Location.NONE) return false\n    \n    return true\n  }\n  setAllLocationsIfNull(locValue) {\n    for (let i = 0; i < this.location.length; i++) \n      if (this.location[i] === Location.NONE) this.location[i] = locValue\n    \n  }\n  isLine() {\n    return this.location.length === 1\n  }\n  merge(gl) {\n    if (gl.location.length > this.location.length) {\n      const newLoc = new Array(3).fill(null)\n      newLoc[Position.ON] = this.location[Position.ON]\n      newLoc[Position.LEFT] = Location.NONE\n      newLoc[Position.RIGHT] = Location.NONE\n      this.location = newLoc\n    }\n    for (let i = 0; i < this.location.length; i++) \n      if (this.location[i] === Location.NONE && i < gl.location.length) this.location[i] = gl.location[i]\n    \n  }\n  getLocations() {\n    return this.location\n  }\n  flip() {\n    if (this.location.length <= 1) return null\n    const temp = this.location[Position.LEFT]\n    this.location[Position.LEFT] = this.location[Position.RIGHT]\n    this.location[Position.RIGHT] = temp\n  }\n  get(posIndex) {\n    if (posIndex < this.location.length) return this.location[posIndex]\n    return Location.NONE\n  }\n  isEqualOnSide(le, locIndex) {\n    return this.location[locIndex] === le.location[locIndex]\n  }\n  allPositionsEqual(loc) {\n    for (let i = 0; i < this.location.length; i++) \n      if (this.location[i] !== loc) return false\n    \n    return true\n  }\n  toString() {\n    const buf = new StringBuffer()\n    if (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.LEFT]))\n    buf.append(Location.toLocationSymbol(this.location[Position.ON]))\n    if (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.RIGHT]))\n    return buf.toString()\n  }\n  setLocations(on, left, right) {\n    this.location[Position.ON] = on\n    this.location[Position.LEFT] = left\n    this.location[Position.RIGHT] = right\n  }\n  isArea() {\n    return this.location.length > 1\n  }\n  isAnyNull() {\n    for (let i = 0; i < this.location.length; i++) \n      if (this.location[i] === Location.NONE) return true\n    \n    return false\n  }\n  setLocation() {\n    if (arguments.length === 1) {\n      const locValue = arguments[0]\n      this.setLocation(Position.ON, locValue)\n    } else if (arguments.length === 2) {\n      const locIndex = arguments[0], locValue = arguments[1]\n      this.location[locIndex] = locValue\n    }\n  }\n  init(size) {\n    this.location = new Array(size).fill(null)\n    this.setAllLocations(Location.NONE)\n  }\n}\n","import Location from '../geom/Location.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Node from './Node.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nexport default class NodeMap {\n  constructor() {\n    NodeMap.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.nodeMap = new TreeMap()\n    this.nodeFact = null\n    const nodeFact = arguments[0]\n    this.nodeFact = nodeFact\n  }\n  print(out) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const n = it.next()\n      n.print(out)\n    }\n  }\n  iterator() {\n    return this.nodeMap.values().iterator()\n  }\n  values() {\n    return this.nodeMap.values()\n  }\n  getBoundaryNodes(geomIndex) {\n    const bdyNodes = new ArrayList()\n    for (let i = this.iterator(); i.hasNext(); ) {\n      const node = i.next()\n      if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) bdyNodes.add(node)\n    }\n    return bdyNodes\n  }\n  add(e) {\n    const p = e.getCoordinate()\n    const n = this.addNode(p)\n    n.add(e)\n  }\n  find(coord) {\n    return this.nodeMap.get(coord)\n  }\n  addNode() {\n    if (arguments[0] instanceof Coordinate) {\n      const coord = arguments[0]\n      let node = this.nodeMap.get(coord)\n      if (node === null) {\n        node = this.nodeFact.createNode(coord)\n        this.nodeMap.put(coord, node)\n      }\n      return node\n    } else if (arguments[0] instanceof Node) {\n      const n = arguments[0]\n      const node = this.nodeMap.get(n.getCoordinate())\n      if (node === null) {\n        this.nodeMap.put(n.getCoordinate(), n)\n        return n\n      }\n      node.mergeLabel(n)\n      return node\n    }\n  }\n}\n","import Location from '../geom/Location.js'\nimport Label from './Label.js'\nimport GraphComponent from './GraphComponent.js'\nexport default class Node extends GraphComponent {\n  constructor() {\n    super()\n    Node.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._coord = null\n    this._edges = null\n    const coord = arguments[0], edges = arguments[1]\n    this._coord = coord\n    this._edges = edges\n    this._label = new Label(0, Location.NONE)\n  }\n  isIncidentEdgeInResult() {\n    for (let it = this.getEdges().getEdges().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      if (de.getEdge().isInResult()) return true\n    }\n    return false\n  }\n  isIsolated() {\n    return this._label.getGeometryCount() === 1\n  }\n  getCoordinate() {\n    return this._coord\n  }\n  computeMergedLocation(label2, eltIndex) {\n    let loc = Location.NONE\n    loc = this._label.getLocation(eltIndex)\n    if (!label2.isNull(eltIndex)) {\n      const nLoc = label2.getLocation(eltIndex)\n      if (loc !== Location.BOUNDARY) loc = nLoc\n    }\n    return loc\n  }\n  setLabel() {\n    if (arguments.length === 2 && (Number.isInteger(arguments[1]) && Number.isInteger(arguments[0]))) {\n      const argIndex = arguments[0], onLocation = arguments[1]\n      if (this._label === null) \n        this._label = new Label(argIndex, onLocation)\n      else this._label.setLocation(argIndex, onLocation)\n    } else {\n      return super.setLabel.apply(this, arguments)\n    }\n  }\n  getEdges() {\n    return this._edges\n  }\n  mergeLabel() {\n    if (arguments[0] instanceof Node) {\n      const n = arguments[0]\n      this.mergeLabel(n._label)\n    } else if (arguments[0] instanceof Label) {\n      const label2 = arguments[0]\n      for (let i = 0; i < 2; i++) {\n        const loc = this.computeMergedLocation(label2, i)\n        const thisLoc = this._label.getLocation(i)\n        if (thisLoc === Location.NONE) this._label.setLocation(i, loc)\n      }\n    }\n  }\n  add(e) {\n    this._edges.insert(e)\n    e.setNode(this)\n  }\n  setLabelBoundary(argIndex) {\n    if (this._label === null) return null\n    let loc = Location.NONE\n    if (this._label !== null) loc = this._label.getLocation(argIndex)\n    let newLoc = null\n    switch (loc) {\n    case Location.BOUNDARY:\n      newLoc = Location.INTERIOR\n      break\n    case Location.INTERIOR:\n      newLoc = Location.BOUNDARY\n      break\n    default:\n      newLoc = Location.BOUNDARY\n      break\n    }\n    this._label.setLocation(argIndex, newLoc)\n  }\n  print(out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label)\n  }\n  computeIM(im) {}\n}\n","import Assert from '../util/Assert.js'\nexport default class GraphComponent {\n  constructor() {\n    GraphComponent.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._label = null\n    this._isInResult = false\n    this._isCovered = false\n    this._isCoveredSet = false\n    this._isVisited = false\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const label = arguments[0]\n      this._label = label\n    }\n  }\n  setVisited(isVisited) {\n    this._isVisited = isVisited\n  }\n  setInResult(isInResult) {\n    this._isInResult = isInResult\n  }\n  setLabel(label) {\n    this._label = label\n  }\n  getLabel() {\n    return this._label\n  }\n  setCovered(isCovered) {\n    this._isCovered = isCovered\n    this._isCoveredSet = true\n  }\n  updateIM(im) {\n    Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label')\n    this.computeIM(im)\n  }\n  isCovered() {\n    return this._isCovered\n  }\n  isCoveredSet() {\n    return this._isCoveredSet\n  }\n  isInResult() {\n    return this._isInResult\n  }\n  isVisited() {\n    return this._isVisited\n  }\n}\n","import ArrayList from './ArrayList.js'\nimport SortedMap from './SortedMap.js'\nimport HashSet from './HashSet.js'\n\nconst BLACK = 0\nconst RED = 1\n\nfunction colorOf(p) {\n  return (p == null ? BLACK : p.color)\n}\nfunction parentOf(p) {\n  return (p == null ? null : p.parent)\n}\nfunction setColor(p, c) {\n  if (p !== null) p.color = c\n}\nfunction leftOf(p) {\n  return (p == null ? null : p.left)\n}\nfunction rightOf(p) {\n  return (p == null ? null : p.right)\n}\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n */\nexport default class TreeMap extends SortedMap {\n  constructor() {\n    super()\n    this.root_ = null\n    this.size_ = 0\n  }\n\n  get(key) {\n    let p = this.root_\n    while (p !== null) {\n      const cmp = key.compareTo(p.key)\n      if (cmp < 0)\n        p = p.left\n      else if (cmp > 0)\n        p = p.right\n      else return p.value\n    }\n    return null\n  }\n\n  put(key, value) {\n    if (this.root_ === null) {\n      this.root_ = {\n        key: key,\n        value: value,\n        left: null,\n        right: null,\n        parent: null,\n        color: BLACK,\n        getValue() {\n          return this.value\n        },\n        getKey() {\n          return this.key\n        }\n      }\n      this.size_ = 1\n      return null\n    }\n    let t = this.root_; let parent; let cmp\n    do {\n      parent = t\n      cmp = key.compareTo(t.key)\n      if (cmp < 0) {\n        t = t.left\n      } else if (cmp > 0) {\n        t = t.right\n      } else {\n        const oldValue = t.value\n        t.value = value\n        return oldValue\n      }\n    } while (t !== null)\n    const e = {\n      key: key,\n      left: null,\n      right: null,\n      value: value,\n      parent: parent,\n      color: BLACK,\n      getValue() {\n        return this.value\n      },\n      getKey() {\n        return this.key\n      }\n    }\n    if (cmp < 0)\n      parent.left = e\n    else parent.right = e\n\n    this.fixAfterInsertion(e)\n    this.size_++\n    return null\n  }\n\n  /**\n   * @param {Object} x\n   */\n  fixAfterInsertion(x) {\n    let y\n    x.color = RED\n    while (x != null && x !== this.root_ && x.parent.color === RED)\n      if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n        y = rightOf(parentOf(parentOf(x)))\n        if (colorOf(y) === RED) {\n          setColor(parentOf(x), BLACK)\n          setColor(y, BLACK)\n          setColor(parentOf(parentOf(x)), RED)\n          x = parentOf(parentOf(x))\n        } else {\n          if (x === rightOf(parentOf(x))) {\n            x = parentOf(x)\n            this.rotateLeft(x)\n          }\n          setColor(parentOf(x), BLACK)\n          setColor(parentOf(parentOf(x)), RED)\n          this.rotateRight(parentOf(parentOf(x)))\n        }\n      } else {\n        y = leftOf(parentOf(parentOf(x)))\n        if (colorOf(y) === RED) {\n          setColor(parentOf(x), BLACK)\n          setColor(y, BLACK)\n          setColor(parentOf(parentOf(x)), RED)\n          x = parentOf(parentOf(x))\n        } else {\n          if (x === leftOf(parentOf(x))) {\n            x = parentOf(x)\n            this.rotateRight(x)\n          }\n          setColor(parentOf(x), BLACK)\n          setColor(parentOf(parentOf(x)), RED)\n          this.rotateLeft(parentOf(parentOf(x)))\n        }\n      }\n\n    this.root_.color = BLACK\n  }\n\n  values() {\n    const arrayList = new ArrayList()\n    let p = this.getFirstEntry()\n    if (p !== null) {\n      arrayList.add(p.value)\n      while ((p = TreeMap.successor(p)) !== null)\n        arrayList.add(p.value)\n    }\n    return arrayList\n  }\n\n  entrySet() {\n    const hashSet = new HashSet()\n    let p = this.getFirstEntry()\n    if (p !== null) {\n      hashSet.add(p)\n      while ((p = TreeMap.successor(p)) !== null)\n        hashSet.add(p)\n    }\n    return hashSet\n  }\n\n  /**\n   * @param {Object} p\n   */\n  rotateLeft(p) {\n    if (p != null) {\n      const r = p.right\n      p.right = r.left\n      if (r.left != null)\n        r.left.parent = p\n      r.parent = p.parent\n      if (p.parent == null)\n        this.root_ = r\n      else if (p.parent.left === p)\n        p.parent.left = r\n      else\n        p.parent.right = r\n      r.left = p\n      p.parent = r\n    }\n  }\n\n  /**\n   * @param {Object} p\n   */\n  rotateRight(p) {\n    if (p != null) {\n      const l = p.left\n      p.left = l.right\n      if (l.right != null)\n        l.right.parent = p\n      l.parent = p.parent\n      if (p.parent == null)\n        this.root_ = l\n      else if (p.parent.right === p)\n        p.parent.right = l\n      else\n        p.parent.left = l\n      l.right = p\n      p.parent = l\n    }\n  }\n\n  /**\n   * @return {Object}\n   */\n  getFirstEntry() {\n    let p = this.root_\n    if (p != null)\n      while (p.left != null) p = p.left\n    return p\n  }\n\n  /**\n   * @param {Object} t\n   * @return {Object}\n   * @private\n   */\n  static successor(t) {\n    let p\n    if (t === null) {\n      return null\n    } else if (t.right !== null) {\n      p = t.right\n      while (p.left !== null)\n        p = p.left\n      return p\n    } else {\n      p = t.parent\n      let ch = t\n      while (p !== null && ch === p.right) {\n        ch = p\n        p = p.parent\n      }\n      return p\n    }\n  }\n\n  size() {\n    return this.size_\n  }\n\n  containsKey(key) {\n    let p = this.root_\n    while (p !== null) {\n      const cmp = key.compareTo(p.key)\n      if (cmp < 0)\n        p = p.left\n      else if (cmp > 0)\n        p = p.right\n      else return true\n    }\n    return false\n  }\n}\n","import Map from './Map.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n */\nexport default class SortedMap extends Map {}\n","import StringBuffer from '../../../../java/lang/StringBuffer.js'\nimport Location from '../geom/Location.js'\nimport Position from './Position.js'\nimport TopologyException from '../geom/TopologyException.js'\nimport System from '../../../../java/lang/System.js'\nimport SimplePointInAreaLocator from '../algorithm/locate/SimplePointInAreaLocator.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Assert from '../util/Assert.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nexport default class EdgeEndStar {\n  constructor() {\n    EdgeEndStar.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edgeMap = new TreeMap()\n    this._edgeList = null\n    this._ptInAreaLocation = [Location.NONE, Location.NONE]\n  }\n  getNextCW(ee) {\n    this.getEdges()\n    const i = this._edgeList.indexOf(ee)\n    let iNextCW = i - 1\n    if (i === 0) iNextCW = this._edgeList.size() - 1\n    return this._edgeList.get(iNextCW)\n  }\n  propagateSideLabels(geomIndex) {\n    let startLoc = Location.NONE\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) startLoc = label.getLocation(geomIndex, Position.LEFT)\n    }\n    if (startLoc === Location.NONE) return null\n    let currLoc = startLoc\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      if (label.getLocation(geomIndex, Position.ON) === Location.NONE) label.setLocation(geomIndex, Position.ON, currLoc)\n      if (label.isArea(geomIndex)) {\n        const leftLoc = label.getLocation(geomIndex, Position.LEFT)\n        const rightLoc = label.getLocation(geomIndex, Position.RIGHT)\n        if (rightLoc !== Location.NONE) {\n          if (rightLoc !== currLoc) throw new TopologyException('side location conflict', e.getCoordinate())\n          if (leftLoc === Location.NONE) \n            Assert.shouldNeverReachHere('found single null side (at ' + e.getCoordinate() + ')')\n          \n          currLoc = leftLoc\n        } else {\n          Assert.isTrue(label.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side')\n          label.setLocation(geomIndex, Position.RIGHT, currLoc)\n          label.setLocation(geomIndex, Position.LEFT, currLoc)\n        }\n      }\n    }\n  }\n  getCoordinate() {\n    const it = this.iterator()\n    if (!it.hasNext()) return null\n    const e = it.next()\n    return e.getCoordinate()\n  }\n  checkAreaLabelsConsistent(geomIndex) {\n    const edges = this.getEdges()\n    if (edges.size() <= 0) return true\n    const lastEdgeIndex = edges.size() - 1\n    const startLabel = edges.get(lastEdgeIndex).getLabel()\n    const startLoc = startLabel.getLocation(geomIndex, Position.LEFT)\n    Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge')\n    let currLoc = startLoc\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge')\n      const leftLoc = label.getLocation(geomIndex, Position.LEFT)\n      const rightLoc = label.getLocation(geomIndex, Position.RIGHT)\n      if (leftLoc === rightLoc) \n        return false\n      \n      if (rightLoc !== currLoc) \n        return false\n      \n      currLoc = leftLoc\n    }\n    return true\n  }\n  findIndex(eSearch) {\n    this.iterator()\n    for (let i = 0; i < this._edgeList.size(); i++) {\n      const e = this._edgeList.get(i)\n      if (e === eSearch) return i\n    }\n    return -1\n  }\n  iterator() {\n    return this.getEdges().iterator()\n  }\n  getEdges() {\n    if (this._edgeList === null) \n      this._edgeList = new ArrayList(this._edgeMap.values())\n    \n    return this._edgeList\n  }\n  getLocation(geomIndex, p, geom) {\n    if (this._ptInAreaLocation[geomIndex] === Location.NONE) \n      this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry())\n    \n    return this._ptInAreaLocation[geomIndex]\n  }\n  toString() {\n    const buf = new StringBuffer()\n    buf.append('EdgeEndStar:   ' + this.getCoordinate())\n    buf.append('\\n')\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      buf.append(e)\n      buf.append('\\n')\n    }\n    return buf.toString()\n  }\n  computeEdgeEndLabels(boundaryNodeRule) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ee = it.next()\n      ee.computeLabel(boundaryNodeRule)\n    }\n  }\n  computeLabelling(geomGraph) {\n    this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule())\n    this.propagateSideLabels(0)\n    this.propagateSideLabels(1)\n    const hasDimensionalCollapseEdge = [false, false]\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      for (let geomi = 0; geomi < 2; geomi++) \n        if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) hasDimensionalCollapseEdge[geomi] = true\n      \n    }\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      for (let geomi = 0; geomi < 2; geomi++) \n        if (label.isAnyNull(geomi)) {\n          let loc = Location.NONE\n          if (hasDimensionalCollapseEdge[geomi]) {\n            loc = Location.EXTERIOR\n          } else {\n            const p = e.getCoordinate()\n            loc = this.getLocation(geomi, p, geomGraph)\n          }\n          label.setAllLocationsIfNull(geomi, loc)\n        }\n      \n    }\n  }\n  getDegree() {\n    return this._edgeMap.size()\n  }\n  insertEdgeEnd(e, obj) {\n    this._edgeMap.put(e, obj)\n    this._edgeList = null\n  }\n  print(out) {\n    System.out.println('EdgeEndStar:   ' + this.getCoordinate())\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      e.print(out)\n    }\n  }\n  isAreaLabelsConsistent(geomGraph) {\n    this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule())\n    return this.checkAreaLabelsConsistent(0)\n  }\n}\n","import Coordinate from './Coordinate.js'\nimport RuntimeException from '../../../../java/lang/RuntimeException.js'\n\nexport default class TopologyException extends RuntimeException {\n  constructor(msg, pt) {\n    super(pt ? msg + ' [ ' + pt + ' ]' : msg)\n    this.pt = pt ? new Coordinate(pt) : undefined\n    this.name = Object.keys({ TopologyException })[0]\n  }\n  getCoordinate() {\n    return this.pt\n  }\n}\n","import Location from '../../geom/Location.js'\nimport Polygon from '../../geom/Polygon.js'\nimport PointLocation from '../PointLocation.js'\nimport PointOnGeometryLocator from './PointOnGeometryLocator.js'\nimport GeometryCollectionIterator from '../../geom/GeometryCollectionIterator.js'\nimport GeometryCollection from '../../geom/GeometryCollection.js'\nexport default class SimplePointInAreaLocator {\n  constructor() {\n    SimplePointInAreaLocator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geom = null\n    const geom = arguments[0]\n    this._geom = geom\n  }\n  static locatePointInPolygon(p, poly) {\n    if (poly.isEmpty()) return Location.EXTERIOR\n    const shell = poly.getExteriorRing()\n    const shellLoc = SimplePointInAreaLocator.locatePointInRing(p, shell)\n    if (shellLoc !== Location.INTERIOR) return shellLoc\n    for (let i = 0; i < poly.getNumInteriorRing(); i++) {\n      const hole = poly.getInteriorRingN(i)\n      const holeLoc = SimplePointInAreaLocator.locatePointInRing(p, hole)\n      if (holeLoc === Location.BOUNDARY) return Location.BOUNDARY\n      if (holeLoc === Location.INTERIOR) return Location.EXTERIOR\n    }\n    return Location.INTERIOR\n  }\n  static locatePointInRing(p, ring) {\n    if (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR\n    return PointLocation.locateInRing(p, ring.getCoordinates())\n  }\n  static isContained(p, geom) {\n    return Location.EXTERIOR !== SimplePointInAreaLocator.locate(p, geom)\n  }\n  static locate(p, geom) {\n    if (geom.isEmpty()) return Location.EXTERIOR\n    if (!geom.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR\n    return SimplePointInAreaLocator.locateInGeometry(p, geom)\n  }\n  static containsPointInPolygon(p, poly) {\n    return Location.EXTERIOR !== SimplePointInAreaLocator.locatePointInPolygon(p, poly)\n  }\n  static locateInGeometry(p, geom) {\n    if (geom instanceof Polygon) \n      return SimplePointInAreaLocator.locatePointInPolygon(p, geom)\n    \n    if (geom instanceof GeometryCollection) {\n      const geomi = new GeometryCollectionIterator(geom)\n      while (geomi.hasNext()) {\n        const g2 = geomi.next()\n        if (g2 !== geom) {\n          const loc = SimplePointInAreaLocator.locateInGeometry(p, g2)\n          if (loc !== Location.EXTERIOR) return loc\n        }\n      }\n    }\n    return Location.EXTERIOR\n  }\n  locate(p) {\n    return SimplePointInAreaLocator.locate(p, this._geom)\n  }\n  get interfaces_() {\n    return [PointOnGeometryLocator]\n  }\n}\n","import Location from '../geom/Location.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport CoordinateSequence from '../geom/CoordinateSequence.js'\nimport RobustLineIntersector from './RobustLineIntersector.js'\nimport RayCrossingCounter from './RayCrossingCounter.js'\nexport default class PointLocation {\n  static isInRing(p, ring) {\n    return PointLocation.locateInRing(p, ring) !== Location.EXTERIOR\n  }\n  static locateInRing(p, ring) {\n    return RayCrossingCounter.locatePointInRing(p, ring)\n  }\n  static isOnLine() {\n    if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n      const p = arguments[0], line = arguments[1]\n      const lineIntersector = new RobustLineIntersector()\n      const p0 = new Coordinate()\n      const p1 = new Coordinate()\n      const n = line.size()\n      for (let i = 1; i < n; i++) {\n        line.getCoordinate(i - 1, p0)\n        line.getCoordinate(i, p1)\n        lineIntersector.computeIntersection(p, p0, p1)\n        if (lineIntersector.hasIntersection()) \n          return true\n        \n      }\n      return false\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n      const p = arguments[0], line = arguments[1]\n      const lineIntersector = new RobustLineIntersector()\n      for (let i = 1; i < line.length; i++) {\n        const p0 = line[i - 1]\n        const p1 = line[i]\n        lineIntersector.computeIntersection(p, p0, p1)\n        if (lineIntersector.hasIntersection()) \n          return true\n        \n      }\n      return false\n    }\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport Envelope from '../geom/Envelope.js'\nimport Orientation from './Orientation.js'\nimport Intersection from './Intersection.js'\nimport CGAlgorithmsDD from './CGAlgorithmsDD.js'\nimport System from '../../../../java/lang/System.js'\nimport Distance from './Distance.js'\nimport LineIntersector from './LineIntersector.js'\nexport default class RobustLineIntersector extends LineIntersector {\n  constructor() {\n    super()\n  }\n  static nearestEndpoint(p1, p2, q1, q2) {\n    let nearestPt = p1\n    let minDist = Distance.pointToSegment(p1, q1, q2)\n    let dist = Distance.pointToSegment(p2, q1, q2)\n    if (dist < minDist) {\n      minDist = dist\n      nearestPt = p2\n    }\n    dist = Distance.pointToSegment(q1, p1, p2)\n    if (dist < minDist) {\n      minDist = dist\n      nearestPt = q1\n    }\n    dist = Distance.pointToSegment(q2, p1, p2)\n    if (dist < minDist) {\n      minDist = dist\n      nearestPt = q2\n    }\n    return nearestPt\n  }\n  isInSegmentEnvelopes(intPt) {\n    const env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1])\n    const env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1])\n    return env0.contains(intPt) && env1.contains(intPt)\n  }\n  computeIntersection() {\n    if (arguments.length === 3) {\n      const p = arguments[0], p1 = arguments[1], p2 = arguments[2]\n      this._isProper = false\n      if (Envelope.intersects(p1, p2, p)) \n        if (Orientation.index(p1, p2, p) === 0 && Orientation.index(p2, p1, p) === 0) {\n          this._isProper = true\n          if (p.equals(p1) || p.equals(p2)) \n            this._isProper = false\n          \n          this._result = LineIntersector.POINT_INTERSECTION\n          return null\n        }\n      \n      this._result = LineIntersector.NO_INTERSECTION\n    } else {\n      return super.computeIntersection.apply(this, arguments)\n    }\n  }\n  intersection(p1, p2, q1, q2) {\n    let intPt = this.intersectionSafe(p1, p2, q1, q2)\n    if (!this.isInSegmentEnvelopes(intPt)) \n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2))\n    \n    if (this._precisionModel !== null) \n      this._precisionModel.makePrecise(intPt)\n    \n    return intPt\n  }\n  checkDD(p1, p2, q1, q2, intPt) {\n    const intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2)\n    const isIn = this.isInSegmentEnvelopes(intPtDD)\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD)\n    if (intPt.distance(intPtDD) > 0.0001) \n      System.out.println('Distance = ' + intPt.distance(intPtDD))\n    \n  }\n  intersectionSafe(p1, p2, q1, q2) {\n    let intPt = Intersection.intersection(p1, p2, q1, q2)\n    if (intPt === null) intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2)\n    return intPt\n  }\n  computeCollinearIntersection(p1, p2, q1, q2) {\n    const p1q1p2 = Envelope.intersects(p1, p2, q1)\n    const p1q2p2 = Envelope.intersects(p1, p2, q2)\n    const q1p1q2 = Envelope.intersects(q1, q2, p1)\n    const q1p2q2 = Envelope.intersects(q1, q2, p2)\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1\n      this._intPt[1] = q2\n      return LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1\n      this._intPt[1] = p2\n      return LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1\n      this._intPt[1] = p1\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1\n      this._intPt[1] = p2\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2\n      this._intPt[1] = p1\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2\n      this._intPt[1] = p2\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector.NO_INTERSECTION\n  }\n  computeIntersect(p1, p2, q1, q2) {\n    this._isProper = false\n    if (!Envelope.intersects(p1, p2, q1, q2)) return LineIntersector.NO_INTERSECTION\n    const Pq1 = Orientation.index(p1, p2, q1)\n    const Pq2 = Orientation.index(p1, p2, q2)\n    if (Pq1 > 0 && Pq2 > 0 || Pq1 < 0 && Pq2 < 0) \n      return LineIntersector.NO_INTERSECTION\n    \n    const Qp1 = Orientation.index(q1, q2, p1)\n    const Qp2 = Orientation.index(q1, q2, p2)\n    if (Qp1 > 0 && Qp2 > 0 || Qp1 < 0 && Qp2 < 0) \n      return LineIntersector.NO_INTERSECTION\n    \n    const collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0\n    if (collinear) \n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    \n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false\n      if (p1.equals2D(q1) || p1.equals2D(q2)) \n        this._intPt[0] = p1\n      else if (p2.equals2D(q1) || p2.equals2D(q2)) \n        this._intPt[0] = p2\n      else if (Pq1 === 0) \n        this._intPt[0] = new Coordinate(q1)\n      else if (Pq2 === 0) \n        this._intPt[0] = new Coordinate(q2)\n      else if (Qp1 === 0) \n        this._intPt[0] = new Coordinate(p1)\n      else if (Qp2 === 0) \n        this._intPt[0] = new Coordinate(p2)\n      \n    } else {\n      this._isProper = true\n      this._intPt[0] = this.intersection(p1, p2, q1, q2)\n    }\n    return LineIntersector.POINT_INTERSECTION\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nexport default class Intersection {\n  static intersection(p1, p2, q1, q2) {\n    const minX0 = p1.x < p2.x ? p1.x : p2.x\n    const minY0 = p1.y < p2.y ? p1.y : p2.y\n    const maxX0 = p1.x > p2.x ? p1.x : p2.x\n    const maxY0 = p1.y > p2.y ? p1.y : p2.y\n    const minX1 = q1.x < q2.x ? q1.x : q2.x\n    const minY1 = q1.y < q2.y ? q1.y : q2.y\n    const maxX1 = q1.x > q2.x ? q1.x : q2.x\n    const maxY1 = q1.y > q2.y ? q1.y : q2.y\n    const intMinX = minX0 > minX1 ? minX0 : minX1\n    const intMaxX = maxX0 < maxX1 ? maxX0 : maxX1\n    const intMinY = minY0 > minY1 ? minY0 : minY1\n    const intMaxY = maxY0 < maxY1 ? maxY0 : maxY1\n    const midx = (intMinX + intMaxX) / 2.0\n    const midy = (intMinY + intMaxY) / 2.0\n    const p1x = p1.x - midx\n    const p1y = p1.y - midy\n    const p2x = p2.x - midx\n    const p2y = p2.y - midy\n    const q1x = q1.x - midx\n    const q1y = q1.y - midy\n    const q2x = q2.x - midx\n    const q2y = q2.y - midy\n    const px = p1y - p2y\n    const py = p2x - p1x\n    const pw = p1x * p2y - p2x * p1y\n    const qx = q1y - q2y\n    const qy = q2x - q1x\n    const qw = q1x * q2y - q2x * q1y\n    const x = py * qw - qy * pw\n    const y = qx * pw - px * qw\n    const w = px * qy - qx * py\n    const xInt = x / w\n    const yInt = y / w\n    if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) \n      return null\n    \n    return new Coordinate(xInt + midx, yInt + midy)\n  }\n}\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport MathUtil from '../math/MathUtil.js'\nimport Envelope from '../geom/Envelope.js'\nexport default class Distance {\n  static pointToSegmentString(p, line) {\n    if (line.length === 0) throw new IllegalArgumentException('Line array must contain at least one vertex')\n    let minDistance = p.distance(line[0])\n    for (let i = 0; i < line.length - 1; i++) {\n      const dist = Distance.pointToSegment(p, line[i], line[i + 1])\n      if (dist < minDistance) \n        minDistance = dist\n      \n    }\n    return minDistance\n  }\n  static segmentToSegment(A, B, C, D) {\n    if (A.equals(B)) return Distance.pointToSegment(A, C, D)\n    if (C.equals(D)) return Distance.pointToSegment(D, A, B)\n    let noIntersection = false\n    if (!Envelope.intersects(A, B, C, D)) {\n      noIntersection = true\n    } else {\n      const denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x)\n      if (denom === 0) {\n        noIntersection = true\n      } else {\n        const r_num = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y)\n        const s_num = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y)\n        const s = s_num / denom\n        const r = r_num / denom\n        if (r < 0 || r > 1 || s < 0 || s > 1) \n          noIntersection = true\n        \n      }\n    }\n    if (noIntersection) \n      return MathUtil.min(Distance.pointToSegment(A, C, D), Distance.pointToSegment(B, C, D), Distance.pointToSegment(C, A, B), Distance.pointToSegment(D, A, B))\n    \n    return 0.0\n  }\n  static pointToLinePerpendicular(p, A, B) {\n    const len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y)\n    const s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n  static pointToSegment(p, A, B) {\n    if (A.x === B.x && A.y === B.y) return p.distance(A)\n    const len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y)\n    const r = ((p.x - A.x) * (B.x - A.x) + (p.y - A.y) * (B.y - A.y)) / len2\n    if (r <= 0.0) return p.distance(A)\n    if (r >= 1.0) return p.distance(B)\n    const s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n}\n","import WKTWriter from '../io/WKTWriter.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Assert from '../util/Assert.js'\nimport StringBuilder from '../../../../java/lang/StringBuilder.js'\nexport default class LineIntersector {\n  constructor() {\n    LineIntersector.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._result = null\n    this._inputLines = Array(2).fill().map(() => Array(2))\n    this._intPt = new Array(2).fill(null)\n    this._intLineIndex = null\n    this._isProper = null\n    this._pa = null\n    this._pb = null\n    this._precisionModel = null\n    this._intPt[0] = new Coordinate()\n    this._intPt[1] = new Coordinate()\n    this._pa = this._intPt[0]\n    this._pb = this._intPt[1]\n    this._result = 0\n  }\n  static nonRobustComputeEdgeDistance(p, p1, p2) {\n    const dx = p.x - p1.x\n    const dy = p.y - p1.y\n    const dist = Math.sqrt(dx * dx + dy * dy)\n    Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation')\n    return dist\n  }\n  static computeEdgeDistance(p, p0, p1) {\n    const dx = Math.abs(p1.x - p0.x)\n    const dy = Math.abs(p1.y - p0.y)\n    let dist = -1.0\n    if (p.equals(p0)) {\n      dist = 0.0\n    } else if (p.equals(p1)) {\n      if (dx > dy) dist = dx; else dist = dy\n    } else {\n      const pdx = Math.abs(p.x - p0.x)\n      const pdy = Math.abs(p.y - p0.y)\n      if (dx > dy) dist = pdx; else dist = pdy\n      if (dist === 0.0 && !p.equals(p0)) \n        dist = Math.max(pdx, pdy)\n      \n    }\n    Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation')\n    return dist\n  }\n  computeIntersection(p1, p2, p3, p4) {\n    this._inputLines[0][0] = p1\n    this._inputLines[0][1] = p2\n    this._inputLines[1][0] = p3\n    this._inputLines[1][1] = p4\n    this._result = this.computeIntersect(p1, p2, p3, p4)\n  }\n  getIntersectionNum() {\n    return this._result\n  }\n  computeIntLineIndex() {\n    if (arguments.length === 0) {\n      if (this._intLineIndex === null) {\n        this._intLineIndex = Array(2).fill().map(() => Array(2))\n        this.computeIntLineIndex(0)\n        this.computeIntLineIndex(1)\n      }\n    } else if (arguments.length === 1) {\n      const segmentIndex = arguments[0]\n      const dist0 = this.getEdgeDistance(segmentIndex, 0)\n      const dist1 = this.getEdgeDistance(segmentIndex, 1)\n      if (dist0 > dist1) {\n        this._intLineIndex[segmentIndex][0] = 0\n        this._intLineIndex[segmentIndex][1] = 1\n      } else {\n        this._intLineIndex[segmentIndex][0] = 1\n        this._intLineIndex[segmentIndex][1] = 0\n      }\n    }\n  }\n  isInteriorIntersection() {\n    if (arguments.length === 0) {\n      if (this.isInteriorIntersection(0)) return true\n      if (this.isInteriorIntersection(1)) return true\n      return false\n    } else if (arguments.length === 1) {\n      const inputLineIndex = arguments[0]\n      for (let i = 0; i < this._result; i++) \n        if (!(this._intPt[i].equals2D(this._inputLines[inputLineIndex][0]) || this._intPt[i].equals2D(this._inputLines[inputLineIndex][1]))) \n          return true\n        \n      \n      return false\n    }\n  }\n  getIntersection(intIndex) {\n    return this._intPt[intIndex]\n  }\n  getEdgeDistance(segmentIndex, intIndex) {\n    const dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1])\n    return dist\n  }\n  isCollinear() {\n    return this._result === LineIntersector.COLLINEAR_INTERSECTION\n  }\n  toString() {\n    return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n  }\n  getEndpoint(segmentIndex, ptIndex) {\n    return this._inputLines[segmentIndex][ptIndex]\n  }\n  getIndexAlongSegment(segmentIndex, intIndex) {\n    this.computeIntLineIndex()\n    return this._intLineIndex[segmentIndex][intIndex]\n  }\n  getTopologySummary() {\n    const catBuilder = new StringBuilder()\n    if (this.isEndPoint()) catBuilder.append(' endpoint')\n    if (this._isProper) catBuilder.append(' proper')\n    if (this.isCollinear()) catBuilder.append(' collinear')\n    return catBuilder.toString()\n  }\n  isProper() {\n    return this.hasIntersection() && this._isProper\n  }\n  setPrecisionModel(precisionModel) {\n    this._precisionModel = precisionModel\n  }\n  isEndPoint() {\n    return this.hasIntersection() && !this._isProper\n  }\n  hasIntersection() {\n    return this._result !== LineIntersector.NO_INTERSECTION\n  }\n  isIntersection(pt) {\n    for (let i = 0; i < this._result; i++) \n      if (this._intPt[i].equals2D(pt)) \n        return true\n      \n    \n    return false\n  }\n  getIntersectionAlongSegment(segmentIndex, intIndex) {\n    this.computeIntLineIndex()\n    return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n  }\n}\nLineIntersector.DONT_INTERSECT = 0\nLineIntersector.DO_INTERSECT = 1\nLineIntersector.COLLINEAR = 2\nLineIntersector.NO_INTERSECTION = 0\nLineIntersector.POINT_INTERSECTION = 1\nLineIntersector.COLLINEAR_INTERSECTION = 2\n","/**\n * @module org/locationtech/jts/io/WKTWriter\n */\n\nimport WKTParser from './WKTParser.js'\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\nexport default class WKTWriter {\n  /**\n   * @param {GeometryFactory} geometryFactory\n   */\n  constructor(geometryFactory) {\n    this.parser = new WKTParser(geometryFactory)\n  }\n\n  /**\n   * Converts a <code>Geometry</code> to its Well-known Text representation.\n   *\n   * @param {Geometry} geometry a <code>Geometry</code> to process.\n   * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n   *         Features Specification).\n   * @memberof module:org/locationtech/jts/io/WKTWriter#\n   */\n  write(geometry) {\n    return this.parser.write(geometry)\n  }\n\n  /**\n   * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n   * {@link Coordinate}s.\n   *\n   * @param p0 the first coordinate.\n   * @param p1 the second coordinate.\n   *\n   * @return the WKT.\n   * @private\n   */\n  static toLineString(p0, p1) {\n    if (arguments.length !== 2) throw new Error('Not implemented')\n\n    return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport GeometryFactory from '../geom/GeometryFactory.js'\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nconst GeometryLayout = {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n}\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nconst GeometryType = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY'\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z'\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M'\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM'\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6,\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst WKTGeometryType = {}\nfor (const type in GeometryType)\n  WKTGeometryType[type] = GeometryType[type].toUpperCase()\n\n\n/**\n * Class to tokenize a WKT string.\n */\nclass Lexer {\n  /**\n   * @param {string} wkt WKT string.\n   */\n  constructor(wkt) {\n    /**\n     * @type {string}\n     */\n    this.wkt = wkt\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.index_ = -1\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is alphabetic.\n   * @private\n   */\n  isAlpha_(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')\n  }\n\n  /**\n   * @param {string} c Character.\n   * @param {boolean=} opt_decimal Whether the string number\n   *     contains a dot, i.e. is a decimal number.\n   * @return {boolean} Whether the character is numeric.\n   * @private\n   */\n  isNumeric_(c, opt_decimal) {\n    const decimal = opt_decimal !== undefined ? opt_decimal : false\n    return (c >= '0' && c <= '9') || (c == '.' && !decimal)\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is whitespace.\n   * @private\n   */\n  isWhiteSpace_(c) {\n    return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n'\n  }\n\n  /**\n   * @return {string} Next string character.\n   * @private\n   */\n  nextChar_() {\n    return this.wkt.charAt(++this.index_)\n  }\n\n  /**\n   * Fetch and return the next token.\n   * @return {!Token} Next string token.\n   */\n  nextToken() {\n    const c = this.nextChar_()\n    const position = this.index_\n    /** @type {number|string} */\n    let value = c\n    let type\n\n    if (c == '(') {\n      type = TokenType.LEFT_PAREN\n    } else if (c == ',') {\n      type = TokenType.COMMA\n    } else if (c == ')') {\n      type = TokenType.RIGHT_PAREN\n    } else if (this.isNumeric_(c) || c == '-') {\n      type = TokenType.NUMBER\n      value = this.readNumber_()\n    } else if (this.isAlpha_(c)) {\n      type = TokenType.TEXT\n      value = this.readText_()\n    } else if (this.isWhiteSpace_(c)) {\n      return this.nextToken()\n    } else if (c === '') {\n      type = TokenType.EOF\n    } else {\n      throw new Error('Unexpected character: ' + c)\n    }\n\n    return { position: position, value: value, type: type }\n  }\n\n  /**\n   * @return {number} Numeric token value.\n   * @private\n   */\n  readNumber_() {\n    let c\n    const index = this.index_\n    let decimal = false\n    let scientificNotation = false\n    do {\n      if (c == '.')\n        decimal = true\n      else if (c == 'e' || c == 'E')\n        scientificNotation = true\n      c = this.nextChar_()\n    } while (\n      this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      (!scientificNotation && (c == 'e' || c == 'E')) ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      (scientificNotation && (c == '-' || c == '+'))\n    )\n    return parseFloat(this.wkt.substring(index, this.index_--))\n  }\n\n  /**\n   * @return {string} String token value.\n   * @private\n   */\n  readText_() {\n    let c\n    const index = this.index_\n    do\n      c = this.nextChar_()\n    while (this.isAlpha_(c))\n    return this.wkt.substring(index, this.index_--).toUpperCase()\n  }\n}\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nclass Parser {\n  /**\n   * @param {Lexer} lexer The lexer.\n   */\n  constructor(lexer, factory) {\n    /**\n     * @type {Lexer}\n     * @private\n     */\n    this.lexer_ = lexer\n\n    /**\n     * @type {Token}\n     * @private\n     */\n    this.token_\n\n    /**\n     * @type {import(\"../geom/GeometryLayout.js\").default}\n     * @private\n     */\n    this.layout_ = GeometryLayout.XY\n\n    this.factory = factory\n  }\n\n  /**\n   * Fetch the next token form the lexer and replace the active token.\n   * @private\n   */\n  consume_() {\n    this.token_ = this.lexer_.nextToken()\n  }\n\n  /**\n   * Tests if the given type matches the type of the current token.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  isTokenType(type) {\n    const isMatch = this.token_.type == type\n    return isMatch\n  }\n\n  /**\n   * If the given type matches the current token, consume it.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  match(type) {\n    const isMatch = this.isTokenType(type)\n    if (isMatch) \n      this.consume_()\n    return isMatch\n  }\n\n  /**\n   * Try to parse the tokens provided by the lexer.\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   */\n  parse() {\n    this.consume_()\n    const geometry = this.parseGeometry_()\n    return geometry\n  }\n\n  /**\n   * Try to parse the dimensional info.\n   * @return {import(\"../geom/GeometryLayout.js\").default} The layout.\n   * @private\n   */\n  parseGeometryLayout_() {\n    let layout = GeometryLayout.XY\n    const dimToken = this.token_\n    if (this.isTokenType(TokenType.TEXT)) {\n      const dimInfo = dimToken.value\n      if (dimInfo === Z)\n        layout = GeometryLayout.XYZ\n      else if (dimInfo === M)\n        layout = GeometryLayout.XYM\n      else if (dimInfo === ZM)\n        layout = GeometryLayout.XYZM\n      if (layout !== GeometryLayout.XY)\n        this.consume_()\n    }\n    return layout\n  }\n\n  /**\n   * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n   * @private\n   */\n  parseGeometryCollectionText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const geometries = []\n      do\n        geometries.push(this.parseGeometry_())\n      while (this.match(TokenType.COMMA))\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return geometries\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {Array<number>} All values in a point.\n   * @private\n   */\n  parsePointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePoint_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return null\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All points in a linestring.\n   * @private\n   */\n  parseLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePointList_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n   * @private\n   */\n  parsePolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All points in a multipoint.\n   * @private\n   */\n  parseMultiPointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      let coordinates\n      if (this.token_.type == TokenType.LEFT_PAREN) \n        coordinates = this.parsePointTextList_()\n      else\n        coordinates = this.parsePointList_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} All linestring points\n   *                                          in a multilinestring.\n   * @private\n   */\n  parseMultiLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n   * @private\n   */\n  parseMultiPolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePolygonTextList_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<number>} A point.\n   * @private\n   */\n  parsePoint_() {\n    const coordinates = []\n    const dimensions = this.layout_.length\n    for (let i = 0; i < dimensions; ++i) {\n      const token = this.token_\n      if (this.match(TokenType.NUMBER)) \n        coordinates.push(/** @type {number} */(token.value))\n      else\n        break\n    }\n    if (coordinates.length == dimensions) \n      return coordinates\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parsePointList_() {\n    const coordinates = [this.parsePoint_()]\n    while (this.match(TokenType.COMMA))\n      coordinates.push(this.parsePoint_())\n    return coordinates\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parsePointTextList_() {\n    const coordinates = [this.parsePointText_()]\n    while (this.match(TokenType.COMMA))\n      coordinates.push(this.parsePointText_())\n    return coordinates\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} An array of points.\n   * @private\n   */\n  parseLineStringTextList_() {\n    const coordinates = [this.parseLineStringText_()]\n    while (this.match(TokenType.COMMA))\n      coordinates.push(this.parseLineStringText_())\n    return coordinates\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n   * @private\n   */\n  parsePolygonTextList_() {\n    const coordinates = [this.parsePolygonText_()]\n    while (this.match(TokenType.COMMA))\n      coordinates.push(this.parsePolygonText_())\n    return coordinates\n  }\n\n  /**\n   * @return {boolean} Whether the token implies an empty geometry.\n   * @private\n   */\n  isEmptyGeometry_() {\n    const isEmpty =\n      this.isTokenType(TokenType.TEXT) && this.token_.value == EMPTY\n    if (isEmpty)\n      this.consume_()\n    return isEmpty\n  }\n\n  /**\n   * Create an error message for an unexpected token error.\n   * @return {string} Error message.\n   * @private\n   */\n  formatErrorMessage_() {\n    return (\n      'Unexpected `' +\n      this.token_.value +\n      '` at position ' +\n      this.token_.position +\n      ' in `' +\n      this.lexer_.wkt +\n      '`'\n    )\n  }\n\n  /**\n   * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n   * @private\n   */\n  parseGeometry_() {\n    const factory = this.factory\n\n    const o2c = ordinates => ordinates ? new Coordinate(...ordinates) : new Coordinate()\n    const ca2p = coordinates => {\n      const rings = coordinates.map(a => factory.createLinearRing(a.map(o2c)))\n      if (rings.length > 1)\n        return factory.createPolygon(rings[0], rings.slice(1))\n      else if (rings.length === 1)\n        return factory.createPolygon(rings[0])\n      else\n        return factory.createPolygon()\n    }\n\n    const token = this.token_\n    if (this.match(TokenType.TEXT)) {\n      const geomType = token.value\n      this.layout_ = this.parseGeometryLayout_()\n      if (geomType == 'GEOMETRYCOLLECTION') {\n        const geometries = this.parseGeometryCollectionText_()\n        return factory.createGeometryCollection(geometries)\n      } else {\n        switch (geomType) {\n        case 'POINT': {\n          const ordinates = this.parsePointText_()\n          if (!ordinates)\n            return factory.createPoint()\n          return factory.createPoint(new Coordinate(...ordinates))\n        }\n        case 'LINESTRING': {\n          const coordinates = this.parseLineStringText_()\n          const components = coordinates.map(o2c)\n          return factory.createLineString(components)\n        }\n        case 'LINEARRING': {\n          const coordinates = this.parseLineStringText_()\n          const components = coordinates.map(o2c)\n          return factory.createLinearRing(components)\n        }\n        case 'POLYGON': {\n          const coordinates = this.parsePolygonText_()\n          if (!coordinates || coordinates.length === 0)\n            return factory.createPolygon()\n          return ca2p(coordinates)\n        }\n        case 'MULTIPOINT': {\n          const coordinates = this.parseMultiPointText_()\n          if (!coordinates || coordinates.length === 0)\n            return factory.createMultiPoint()\n          const components = coordinates.map(o2c).map(c => factory.createPoint(c))\n          return factory.createMultiPoint(components)\n        }\n        case 'MULTILINESTRING': {\n          const coordinates = this.parseMultiLineStringText_()\n          const components = coordinates.map(a => factory.createLineString(a.map(o2c)))\n          return factory.createMultiLineString(components)\n        }\n        case 'MULTIPOLYGON': {\n          const coordinates = this.parseMultiPolygonText_()\n          if (!coordinates || coordinates.length === 0)\n            return factory.createMultiPolygon()\n          const polygons = coordinates.map(ca2p)\n          return factory.createMultiPolygon(polygons)\n        }\n        default: {\n          throw new Error('Invalid geometry type: ' + geomType)\n        }\n        }\n      }\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n}\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  if (geom.isEmpty())\n    return ''\n  const c = geom.getCoordinate()\n  const cs = [c.x, c.y]\n  if (c.z !== undefined && !Number.isNaN(c.z))\n    cs.push(c.z)\n  if (c.m !== undefined && !Number.isNaN(c.m))\n    cs.push(c.m)\n  return cs.join(' ')\n}\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = []\n  for (let i = 0, ii = geom.getNumGeometries(); i < ii; ++i) \n    array.push('(' + encodePointGeometry(geom.getGeometryN(i)) + ')')\n  return array.join(', ')\n}\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = []\n  for (let i = 0, ii = geom.getNumGeometries(); i < ii; ++i) \n    array.push(encode(geom.getGeometryN(i)))\n  return array.join(', ')\n}\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates()\n    .map(c => {\n      const a = [c.x, c.y]\n      if (c.z !== undefined && !Number.isNaN(c.z))\n        a.push(c.z)\n      if (c.m !== undefined && !Number.isNaN(c.m))\n        a.push(c.m)\n      return a\n    })\n  const array = []\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) \n    array.push(coordinates[i].join(' '))\n  return array.join(', ')\n}\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = []\n  for (let i = 0, ii = geom.getNumGeometries(); i < ii; ++i) \n    array.push('(' + encodeLineStringGeometry(geom.getGeometryN(i)) + ')')\n  return array.join(', ')\n}\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = []\n  array.push('(' + encodeLineStringGeometry(geom.getExteriorRing()) + ')')\n  for (let i = 0, ii = geom.getNumInteriorRing(); i < ii; ++i) \n    array.push('(' + encodeLineStringGeometry(geom.getInteriorRingN(i)) + ')')\n  return array.join(', ')\n}\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = []\n  for (let i = 0, ii = geom.getNumGeometries(); i < ii; ++i) \n    array.push('(' + encodePolygonGeometry(geom.getGeometryN(i)) + ')')\n  return array.join(', ')\n}\n\n/**\n * @param {Geometry} geom Geometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  let dimInfo = ''\n  if (geom.isEmpty())\n    return dimInfo\n  const c = geom.getCoordinate()\n  if (c.z !== undefined && !Number.isNaN(c.z))\n    dimInfo += Z\n  if (c.m !== undefined && !Number.isNaN(c.m))\n    dimInfo += M\n  return dimInfo\n}\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'LinearRing': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry,\n}\n\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  let type = geom.getGeometryType()\n  const geometryEncoder = GeometryEncoder[type]\n  type = type.toUpperCase()\n  const dimInfo = encodeGeometryLayout(geom)\n  if (dimInfo.length > 0) \n    type += ' ' + dimInfo\n  if (geom.isEmpty()) \n    return type + ' ' + EMPTY\n  const enc = geometryEncoder(geom)\n  return type + ' (' + enc + ')'\n}\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers.\n */\n\nexport default class WKTParser {\n  /** Create a new parser for WKT\n   *\n   * @param {GeometryFactory} geometryFactory\n   * @return An instance of WKTParser.\n   * @private\n   */\n  constructor(geometryFactory) {\n    this.geometryFactory = geometryFactory || new GeometryFactory()\n    this.precisionModel = this.geometryFactory.getPrecisionModel()\n  }\n\n  /**\n   * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n   * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n   * and GEOMETRYCOLLECTION.\n   *\n   * @param {String} wkt A WKT string.\n   * @return {Geometry} A geometry instance.\n   * @private\n   */\n  read(wkt) {\n    const lexer = new Lexer(wkt)\n    const parser = new Parser(lexer, this.geometryFactory)\n    const geometry = parser.parse()\n    return geometry\n  }\n\n  /**\n   * Serialize a geometry into a WKT string.\n   *\n   * @param {Geometry} geometry A feature or array of features.\n   * @return {String} The WKT string representation of the input geometries.\n   * @private\n   */\n  write(geometry) {\n    return encode(geometry)\n  }\n}\n","import Location from '../geom/Location.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Orientation from './Orientation.js'\nimport CoordinateSequence from '../geom/CoordinateSequence.js'\nexport default class RayCrossingCounter {\n  constructor() {\n    RayCrossingCounter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._p = null\n    this._crossingCount = 0\n    this._isPointOnSegment = false\n    const p = arguments[0]\n    this._p = p\n  }\n  static locatePointInRing() {\n    if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n      const p = arguments[0], ring = arguments[1]\n      const counter = new RayCrossingCounter(p)\n      const p1 = new Coordinate()\n      const p2 = new Coordinate()\n      for (let i = 1; i < ring.size(); i++) {\n        ring.getCoordinate(i, p1)\n        ring.getCoordinate(i - 1, p2)\n        counter.countSegment(p1, p2)\n        if (counter.isOnSegment()) return counter.getLocation()\n      }\n      return counter.getLocation()\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n      const p = arguments[0], ring = arguments[1]\n      const counter = new RayCrossingCounter(p)\n      for (let i = 1; i < ring.length; i++) {\n        const p1 = ring[i]\n        const p2 = ring[i - 1]\n        counter.countSegment(p1, p2)\n        if (counter.isOnSegment()) return counter.getLocation()\n      }\n      return counter.getLocation()\n    }\n  }\n  getLocation() {\n    if (this._isPointOnSegment) return Location.BOUNDARY\n    if (this._crossingCount % 2 === 1) \n      return Location.INTERIOR\n    \n    return Location.EXTERIOR\n  }\n  isPointInPolygon() {\n    return this.getLocation() !== Location.EXTERIOR\n  }\n  isOnSegment() {\n    return this._isPointOnSegment\n  }\n  countSegment(p1, p2) {\n    if (p1.x < this._p.x && p2.x < this._p.x) return null\n    if (this._p.x === p2.x && this._p.y === p2.y) {\n      this._isPointOnSegment = true\n      return null\n    }\n    if (p1.y === this._p.y && p2.y === this._p.y) {\n      let minx = p1.x\n      let maxx = p2.x\n      if (minx > maxx) {\n        minx = p2.x\n        maxx = p1.x\n      }\n      if (this._p.x >= minx && this._p.x <= maxx) \n        this._isPointOnSegment = true\n      \n      return null\n    }\n    if (p1.y > this._p.y && p2.y <= this._p.y || p2.y > this._p.y && p1.y <= this._p.y) {\n      let orient = Orientation.index(p1, p2, this._p)\n      if (orient === Orientation.COLLINEAR) {\n        this._isPointOnSegment = true\n        return null\n      }\n      if (p2.y < p1.y) \n        orient = -orient\n      \n      if (orient === Orientation.LEFT) \n        this._crossingCount++\n      \n    }\n  }\n}\n","export default class PointOnGeometryLocator {\n  locate(p) {}\n}\n","import Iterator from '../../../../java/util/Iterator.js'\nimport NoSuchElementException from '../../../../java/util/NoSuchElementException.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nexport default class GeometryCollectionIterator {\n  constructor() {\n    GeometryCollectionIterator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._parent = null\n    this._atStart = null\n    this._max = null\n    this._index = null\n    this._subcollectionIterator = null\n    const parent = arguments[0]\n    this._parent = parent\n    this._atStart = true\n    this._index = 0\n    this._max = parent.getNumGeometries()\n  }\n  static isAtomic(geom) {\n    return !(geom instanceof GeometryCollection)\n  }\n  next() {\n    if (this._atStart) {\n      this._atStart = false\n      if (GeometryCollectionIterator.isAtomic(this._parent)) this._index++\n      return this._parent\n    }\n    if (this._subcollectionIterator !== null) \n      if (this._subcollectionIterator.hasNext()) \n        return this._subcollectionIterator.next()\n      else \n        this._subcollectionIterator = null\n      \n    \n    if (this._index >= this._max) \n      throw new NoSuchElementException()\n    \n    const obj = this._parent.getGeometryN(this._index++)\n    if (obj instanceof GeometryCollection) {\n      this._subcollectionIterator = new GeometryCollectionIterator(obj)\n      return this._subcollectionIterator.next()\n    }\n    return obj\n  }\n  hasNext() {\n    if (this._atStart) \n      return true\n    \n    if (this._subcollectionIterator !== null) {\n      if (this._subcollectionIterator.hasNext()) \n        return true\n      \n      this._subcollectionIterator = null\n    }\n    if (this._index >= this._max) \n      return false\n    \n    return true\n  }\n  remove() {\n    throw new UnsupportedOperationException(this.getClass().getName())\n  }\n  get interfaces_() {\n    return [Iterator]\n  }\n}\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nexport default class Iterator {\n  /**\n     * Returns true if the iteration has more elements.\n     * @return {boolean}\n     */\n  hasNext() {}\n\n  /**\n     * Returns the next element in the iteration.\n     * @return {Object}\n     */\n  next() {}\n\n  /**\n     * Removes from the underlying collection the last element returned by the\n     * iterator (optional operation).\n     */\n  remove() {}\n}\n","import LineString from '../geom/LineString.js'\nimport HashMap from '../../../../java/util/HashMap.js'\nimport Geometry from '../geom/Geometry.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport Position from './Position.js'\nimport SimpleMCSweepLineIntersector from './index/SimpleMCSweepLineIntersector.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport Label from './Label.js'\nimport CoordinateArrays from '../geom/CoordinateArrays.js'\nimport Polygonal from '../geom/Polygonal.js'\nimport MultiLineString from '../geom/MultiLineString.js'\nimport PlanarGraph from './PlanarGraph.js'\nimport PointLocator from '../algorithm/PointLocator.js'\nimport Location from '../geom/Location.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Point from '../geom/Point.js'\nimport Polygon from '../geom/Polygon.js'\nimport MultiPoint from '../geom/MultiPoint.js'\nimport LinearRing from '../geom/LinearRing.js'\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule.js'\nimport SegmentIntersector from './index/SegmentIntersector.js'\nimport MultiPolygon from '../geom/MultiPolygon.js'\nimport GeometryCollection from '../geom/GeometryCollection.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nimport IndexedPointInAreaLocator from '../algorithm/locate/IndexedPointInAreaLocator.js'\nimport Assert from '../util/Assert.js'\nimport Edge from './Edge.js'\nexport default class GeometryGraph extends PlanarGraph {\n  constructor() {\n    super()\n    GeometryGraph.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._parentGeom = null\n    this._lineEdgeMap = new HashMap()\n    this._boundaryNodeRule = null\n    this._useBoundaryDeterminationRule = true\n    this._argIndex = null\n    this._boundaryNodes = null\n    this._hasTooFewPoints = false\n    this._invalidPoint = null\n    this._areaPtLocator = null\n    this._ptLocator = new PointLocator()\n    if (arguments.length === 2) {\n      const argIndex = arguments[0], parentGeom = arguments[1]\n      GeometryGraph.constructor_.call(this, argIndex, parentGeom, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE)\n    } else if (arguments.length === 3) {\n      const argIndex = arguments[0], parentGeom = arguments[1], boundaryNodeRule = arguments[2]\n      this._argIndex = argIndex\n      this._parentGeom = parentGeom\n      this._boundaryNodeRule = boundaryNodeRule\n      if (parentGeom !== null) \n        this.add(parentGeom)\n      \n    }\n  }\n  static determineBoundary(boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  }\n  insertBoundaryPoint(argIndex, coord) {\n    const n = this._nodes.addNode(coord)\n    const lbl = n.getLabel()\n    let boundaryCount = 1\n    let loc = Location.NONE\n    loc = lbl.getLocation(argIndex, Position.ON)\n    if (loc === Location.BOUNDARY) boundaryCount++\n    const newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount)\n    lbl.setLocation(argIndex, newLoc)\n  }\n  computeSelfNodes() {\n    if (arguments.length === 2) {\n      const li = arguments[0], computeRingSelfNodes = arguments[1]\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      const li = arguments[0], computeRingSelfNodes = arguments[1], isDoneIfProperInt = arguments[2]\n      const si = new SegmentIntersector(li, true, false)\n      si.setIsDoneIfProperInt(isDoneIfProperInt)\n      const esi = this.createEdgeSetIntersector()\n      const isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon\n      const computeAllSegments = computeRingSelfNodes || !isRings\n      esi.computeIntersections(this._edges, si, computeAllSegments)\n      this.addSelfIntersectionNodes(this._argIndex)\n      return si\n    }\n  }\n  addPolygon(p) {\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR)\n    for (let i = 0; i < p.getNumInteriorRing(); i++) {\n      const hole = p.getInteriorRingN(i)\n      this.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR)\n    }\n  }\n  addEdge(e) {\n    this.insertEdge(e)\n    const coord = e.getCoordinates()\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY)\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY)\n  }\n  addLineString(line) {\n    const coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates())\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true\n      this._invalidPoint = coord[0]\n      return null\n    }\n    const e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR))\n    this._lineEdgeMap.put(line, e)\n    this.insertEdge(e)\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point')\n    this.insertBoundaryPoint(this._argIndex, coord[0])\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1])\n  }\n  getInvalidPoint() {\n    return this._invalidPoint\n  }\n  getBoundaryPoints() {\n    const coll = this.getBoundaryNodes()\n    const pts = new Array(coll.size()).fill(null)\n    let i = 0\n    for (let it = coll.iterator(); it.hasNext(); ) {\n      const node = it.next()\n      pts[i++] = node.getCoordinate().copy()\n    }\n    return pts\n  }\n  addSelfIntersectionNodes(argIndex) {\n    for (let i = this._edges.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      const eLoc = e.getLabel().getLocation(argIndex)\n      for (let eiIt = e.eiList.iterator(); eiIt.hasNext(); ) {\n        const ei = eiIt.next()\n        this.addSelfIntersectionNode(argIndex, ei.coord, eLoc)\n      }\n    }\n  }\n  add() {\n    if (arguments.length === 1 && arguments[0] instanceof Geometry) {\n      const g = arguments[0]\n      if (g.isEmpty()) return null\n      if (g instanceof MultiPolygon) this._useBoundaryDeterminationRule = false\n      if (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getGeometryType())\n    } else {\n      return super.add.apply(this, arguments)\n    }\n  }\n  addCollection(gc) {\n    for (let i = 0; i < gc.getNumGeometries(); i++) {\n      const g = gc.getGeometryN(i)\n      this.add(g)\n    }\n  }\n  locate(pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) \n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom)\n      \n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  }\n  findEdge() {\n    if (arguments.length === 1 && arguments[0] instanceof LineString) {\n      const line = arguments[0]\n      return this._lineEdgeMap.get(line)\n    } else {\n      return super.findEdge.apply(this, arguments)\n    }\n  }\n  computeSplitEdges(edgelist) {\n    for (let i = this._edges.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      e.eiList.addSplitEdges(edgelist)\n    }\n  }\n  computeEdgeIntersections(g, li, includeProper) {\n    const si = new SegmentIntersector(li, includeProper, true)\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes())\n    const esi = this.createEdgeSetIntersector()\n    esi.computeIntersections(this._edges, g._edges, si)\n    return si\n  }\n  getGeometry() {\n    return this._parentGeom\n  }\n  getBoundaryNodeRule() {\n    return this._boundaryNodeRule\n  }\n  hasTooFewPoints() {\n    return this._hasTooFewPoints\n  }\n  addPoint() {\n    if (arguments[0] instanceof Point) {\n      const p = arguments[0]\n      const coord = p.getCoordinate()\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR)\n    } else if (arguments[0] instanceof Coordinate) {\n      const pt = arguments[0]\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR)\n    }\n  }\n  getBoundaryNodes() {\n    if (this._boundaryNodes === null) this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex)\n    return this._boundaryNodes\n  }\n  addSelfIntersectionNode(argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) return null\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) this.insertBoundaryPoint(argIndex, coord); else this.insertPoint(argIndex, coord, loc)\n  }\n  addPolygonRing(lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) return null\n    const coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates())\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true\n      this._invalidPoint = coord[0]\n      return null\n    }\n    let left = cwLeft\n    let right = cwRight\n    if (Orientation.isCCW(coord)) {\n      left = cwRight\n      right = cwLeft\n    }\n    const e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right))\n    this._lineEdgeMap.put(lr, e)\n    this.insertEdge(e)\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY)\n  }\n  insertPoint(argIndex, coord, onLocation) {\n    const n = this._nodes.addNode(coord)\n    const lbl = n.getLabel()\n    if (lbl === null) \n      n._label = new Label(argIndex, onLocation)\n    else lbl.setLocation(argIndex, onLocation)\n  }\n  createEdgeSetIntersector() {\n    return new SimpleMCSweepLineIntersector()\n  }\n}\n","import hasInterface from '../../../../../hasInterface.js'\nimport EdgeSetIntersector from './EdgeSetIntersector.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport SegmentIntersector from './SegmentIntersector.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport List from '../../../../../java/util/List.js'\nimport MonotoneChain from './MonotoneChain.js'\nimport SweepLineEvent from './SweepLineEvent.js'\nexport default class SimpleMCSweepLineIntersector extends EdgeSetIntersector {\n  constructor() {\n    super()\n    SimpleMCSweepLineIntersector.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.events = new ArrayList()\n    this.nOverlaps = null\n  }\n  prepareEvents() {\n    Collections.sort(this.events)\n    for (let i = 0; i < this.events.size(); i++) {\n      const ev = this.events.get(i)\n      if (ev.isDelete()) \n        ev.getInsertEvent().setDeleteEventIndex(i)\n      \n    }\n  }\n  computeIntersections() {\n    if (arguments.length === 1) {\n      const si = arguments[0]\n      this.nOverlaps = 0\n      this.prepareEvents()\n      for (let i = 0; i < this.events.size(); i++) {\n        const ev = this.events.get(i)\n        if (ev.isInsert()) \n          this.processOverlaps(i, ev.getDeleteEventIndex(), ev, si)\n        \n        if (si.isDone()) \n          break\n        \n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        const edges0 = arguments[0], edges1 = arguments[1], si = arguments[2]\n        this.addEdges(edges0, edges0)\n        this.addEdges(edges1, edges1)\n        this.computeIntersections(si)\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector)) {\n        const edges = arguments[0], si = arguments[1], testAllSegments = arguments[2]\n        if (testAllSegments) this.addEdges(edges, null); else this.addEdges(edges)\n        this.computeIntersections(si)\n      }\n    }\n  }\n  addEdge(edge, edgeSet) {\n    const mce = edge.getMonotoneChainEdge()\n    const startIndex = mce.getStartIndexes()\n    for (let i = 0; i < startIndex.length - 1; i++) {\n      const mc = new MonotoneChain(mce, i)\n      const insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc)\n      this.events.add(insertEvent)\n      this.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent))\n    }\n  }\n  processOverlaps(start, end, ev0, si) {\n    const mc0 = ev0.getObject()\n    for (let i = start; i < end; i++) {\n      const ev1 = this.events.get(i)\n      if (ev1.isInsert()) {\n        const mc1 = ev1.getObject()\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si)\n          this.nOverlaps++\n        }\n      }\n    }\n  }\n  addEdges() {\n    if (arguments.length === 1) {\n      const edges = arguments[0]\n      for (let i = edges.iterator(); i.hasNext(); ) {\n        const edge = i.next()\n        this.addEdge(edge, edge)\n      }\n    } else if (arguments.length === 2) {\n      const edges = arguments[0], edgeSet = arguments[1]\n      for (let i = edges.iterator(); i.hasNext(); ) {\n        const edge = i.next()\n        this.addEdge(edge, edgeSet)\n      }\n    }\n  }\n}\n","export default class EdgeSetIntersector {}\n","import Arrays from './Arrays.js'\nimport ArrayList from './ArrayList.js'\n\nconst Collections = {\n  reverseOrder: function() {\n    return {\n      compare(a, b) {\n        return b.compareTo(a)\n      }\n    }\n  },\n  min: function(l) {\n    Collections.sort(l)\n    return l.get(0)\n  },\n  sort: function(l, c) {\n    const a = l.toArray()\n    if (c)\n      Arrays.sort(a, c)\n    else\n      Arrays.sort(a)\n    const i = l.iterator()\n    for (let pos = 0, alen = a.length; pos < alen; pos++) {\n      i.next()\n      i.set(a[pos])\n    }\n  },\n  singletonList: function(o) {\n    const arrayList = new ArrayList()\n    arrayList.add(o)\n    return arrayList\n  }\n}\n\nexport default Collections\n","export default class SegmentIntersector {\n  constructor() {\n    SegmentIntersector.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._hasIntersection = false\n    this._hasProper = false\n    this._hasProperInterior = false\n    this._properIntersectionPoint = null\n    this._li = null\n    this._includeProper = null\n    this._recordIsolated = null\n    this._isSelfIntersection = null\n    this._numIntersections = 0\n    this.numTests = 0\n    this._bdyNodes = null\n    this._isDone = false\n    this._isDoneWhenProperInt = false\n    const li = arguments[0], includeProper = arguments[1], recordIsolated = arguments[2]\n    this._li = li\n    this._includeProper = includeProper\n    this._recordIsolated = recordIsolated\n  }\n  static isAdjacentSegments(i1, i2) {\n    return Math.abs(i1 - i2) === 1\n  }\n  isTrivialIntersection(e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1) \n      if (this._li.getIntersectionNum() === 1) {\n        if (SegmentIntersector.isAdjacentSegments(segIndex0, segIndex1)) return true\n        if (e0.isClosed()) {\n          const maxSegIndex = e0.getNumPoints() - 1\n          if (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) \n            return true\n          \n        }\n      }\n    \n    return false\n  }\n  hasProperInteriorIntersection() {\n    return this._hasProperInterior\n  }\n  isBoundaryPointInternal(li, bdyNodes) {\n    for (let i = bdyNodes.iterator(); i.hasNext(); ) {\n      const node = i.next()\n      const pt = node.getCoordinate()\n      if (li.isIntersection(pt)) return true\n    }\n    return false\n  }\n  hasProperIntersection() {\n    return this._hasProper\n  }\n  hasIntersection() {\n    return this._hasIntersection\n  }\n  isDone() {\n    return this._isDone\n  }\n  isBoundaryPoint(li, bdyNodes) {\n    if (bdyNodes === null) return false\n    if (this.isBoundaryPointInternal(li, bdyNodes[0])) return true\n    if (this.isBoundaryPointInternal(li, bdyNodes[1])) return true\n    return false\n  }\n  setBoundaryNodes(bdyNodes0, bdyNodes1) {\n    this._bdyNodes = new Array(2).fill(null)\n    this._bdyNodes[0] = bdyNodes0\n    this._bdyNodes[1] = bdyNodes1\n  }\n  addIntersections(e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1 && segIndex0 === segIndex1) return null\n    this.numTests++\n    const p00 = e0.getCoordinates()[segIndex0]\n    const p01 = e0.getCoordinates()[segIndex0 + 1]\n    const p10 = e1.getCoordinates()[segIndex1]\n    const p11 = e1.getCoordinates()[segIndex1 + 1]\n    this._li.computeIntersection(p00, p01, p10, p11)\n    if (this._li.hasIntersection()) {\n      if (this._recordIsolated) {\n        e0.setIsolated(false)\n        e1.setIsolated(false)\n      }\n      this._numIntersections++\n      if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n        this._hasIntersection = true\n        if (this._includeProper || !this._li.isProper()) {\n          e0.addIntersections(this._li, segIndex0, 0)\n          e1.addIntersections(this._li, segIndex1, 1)\n        }\n        if (this._li.isProper()) {\n          this._properIntersectionPoint = this._li.getIntersection(0).copy()\n          this._hasProper = true\n          if (this._isDoneWhenProperInt) \n            this._isDone = true\n          \n          if (!this.isBoundaryPoint(this._li, this._bdyNodes)) this._hasProperInterior = true\n        }\n      }\n    }\n  }\n  getProperIntersectionPoint() {\n    return this._properIntersectionPoint\n  }\n  setIsDoneIfProperInt(isDoneWhenProperInt) {\n    this._isDoneWhenProperInt = isDoneWhenProperInt\n  }\n}\n","export default class MonotoneChain {\n  constructor() {\n    MonotoneChain.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.mce = null\n    this.chainIndex = null\n    const mce = arguments[0], chainIndex = arguments[1]\n    this.mce = mce\n    this.chainIndex = chainIndex\n  }\n  computeIntersections(mc, si) {\n    this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si)\n  }\n}\n","import Comparable from '../../../../../java/lang/Comparable.js'\nexport default class SweepLineEvent {\n  constructor() {\n    SweepLineEvent.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._label = null\n    this._xValue = null\n    this._eventType = null\n    this._insertEvent = null\n    this._deleteEventIndex = null\n    this._obj = null\n    if (arguments.length === 2) {\n      const x = arguments[0], insertEvent = arguments[1]\n      this._eventType = SweepLineEvent.DELETE\n      this._xValue = x\n      this._insertEvent = insertEvent\n    } else if (arguments.length === 3) {\n      const label = arguments[0], x = arguments[1], obj = arguments[2]\n      this._eventType = SweepLineEvent.INSERT\n      this._label = label\n      this._xValue = x\n      this._obj = obj\n    }\n  }\n  getObject() {\n    return this._obj\n  }\n  getDeleteEventIndex() {\n    return this._deleteEventIndex\n  }\n  isDelete() {\n    return this._eventType === SweepLineEvent.DELETE\n  }\n  setDeleteEventIndex(deleteEventIndex) {\n    this._deleteEventIndex = deleteEventIndex\n  }\n  compareTo(o) {\n    const pe = o\n    if (this._xValue < pe._xValue) return -1\n    if (this._xValue > pe._xValue) return 1\n    if (this._eventType < pe._eventType) return -1\n    if (this._eventType > pe._eventType) return 1\n    return 0\n  }\n  getInsertEvent() {\n    return this._insertEvent\n  }\n  isInsert() {\n    return this._eventType === SweepLineEvent.INSERT\n  }\n  isSameLabel(ev) {\n    if (this._label === null) return false\n    return this._label === ev._label\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\nSweepLineEvent.INSERT = 1\nSweepLineEvent.DELETE = 2\n","import Location from '../geom/Location.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Node from './Node.js'\nimport NodeMap from './NodeMap.js'\nimport System from '../../../../java/lang/System.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Quadrant from './Quadrant.js'\nimport NodeFactory from './NodeFactory.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport DirectedEdge from './DirectedEdge.js'\nexport default class PlanarGraph {\n  constructor() {\n    PlanarGraph.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edges = new ArrayList()\n    this._nodes = null\n    this._edgeEndList = new ArrayList()\n    if (arguments.length === 0) {\n      this._nodes = new NodeMap(new NodeFactory())\n    } else if (arguments.length === 1) {\n      const nodeFact = arguments[0]\n      this._nodes = new NodeMap(nodeFact)\n    }\n  }\n  static linkResultDirectedEdges(nodes) {\n    for (let nodeit = nodes.iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().linkResultDirectedEdges()\n    }\n  }\n  printEdges(out) {\n    out.println('Edges:')\n    for (let i = 0; i < this._edges.size(); i++) {\n      out.println('edge ' + i + ':')\n      const e = this._edges.get(i)\n      e.print(out)\n      e.eiList.print(out)\n    }\n  }\n  debugPrintln(o) {\n    System.out.println(o)\n  }\n  isBoundaryNode(geomIndex, coord) {\n    const node = this._nodes.find(coord)\n    if (node === null) return false\n    const label = node.getLabel()\n    if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) return true\n    return false\n  }\n  linkAllDirectedEdges() {\n    for (let nodeit = this._nodes.iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().linkAllDirectedEdges()\n    }\n  }\n  debugPrint(o) {\n    System.out.print(o)\n  }\n  findEdgeEnd(e) {\n    for (let i = this.getEdgeEnds().iterator(); i.hasNext(); ) {\n      const ee = i.next()\n      if (ee.getEdge() === e) return ee\n    }\n    return null\n  }\n  getNodes() {\n    return this._nodes.values()\n  }\n  findEdge(p0, p1) {\n    for (let i = 0; i < this._edges.size(); i++) {\n      const e = this._edges.get(i)\n      const eCoord = e.getCoordinates()\n      if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) return e\n    }\n    return null\n  }\n  find(coord) {\n    return this._nodes.find(coord)\n  }\n  addNode() {\n    if (arguments[0] instanceof Node) {\n      const node = arguments[0]\n      return this._nodes.addNode(node)\n    } else if (arguments[0] instanceof Coordinate) {\n      const coord = arguments[0]\n      return this._nodes.addNode(coord)\n    }\n  }\n  getNodeIterator() {\n    return this._nodes.iterator()\n  }\n  linkResultDirectedEdges() {\n    for (let nodeit = this._nodes.iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().linkResultDirectedEdges()\n    }\n  }\n  matchInSameDirection(p0, p1, ep0, ep1) {\n    if (!p0.equals(ep0)) return false\n    if (Orientation.index(p0, p1, ep1) === Orientation.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) return true\n    return false\n  }\n  getEdgeEnds() {\n    return this._edgeEndList\n  }\n  getEdgeIterator() {\n    return this._edges.iterator()\n  }\n  findEdgeInSameDirection(p0, p1) {\n    for (let i = 0; i < this._edges.size(); i++) {\n      const e = this._edges.get(i)\n      const eCoord = e.getCoordinates()\n      if (this.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) return e\n      if (this.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) return e\n    }\n    return null\n  }\n  insertEdge(e) {\n    this._edges.add(e)\n  }\n  addEdges(edgesToAdd) {\n    for (let it = edgesToAdd.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      this._edges.add(e)\n      const de1 = new DirectedEdge(e, true)\n      const de2 = new DirectedEdge(e, false)\n      de1.setSym(de2)\n      de2.setSym(de1)\n      this.add(de1)\n      this.add(de2)\n    }\n  }\n  add(e) {\n    this._nodes.add(e)\n    this._edgeEndList.add(e)\n  }\n}\n","import Node from './Node.js'\nexport default class NodeFactory {\n  createNode(coord) {\n    return new Node(coord, null)\n  }\n}\n","import Location from '../geom/Location.js'\nimport EdgeEnd from './EdgeEnd.js'\nimport Position from './Position.js'\nimport TopologyException from '../geom/TopologyException.js'\nimport Label from './Label.js'\nexport default class DirectedEdge extends EdgeEnd {\n  constructor() {\n    super()\n    DirectedEdge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._isForward = null\n    this._isInResult = false\n    this._isVisited = false\n    this._sym = null\n    this._next = null\n    this._nextMin = null\n    this._edgeRing = null\n    this._minEdgeRing = null\n    this._depth = [0, -999, -999]\n    const edge = arguments[0], isForward = arguments[1]\n    EdgeEnd.constructor_.call(this, edge)\n    this._isForward = isForward\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1))\n    } else {\n      const n = edge.getNumPoints() - 1\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1))\n    }\n    this.computeDirectedLabel()\n  }\n  static depthFactor(currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) return 1; else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) return -1\n    return 0\n  }\n  setVisited(isVisited) {\n    this._isVisited = isVisited\n  }\n  setDepth(position, depthVal) {\n    if (this._depth[position] !== -999) \n      if (this._depth[position] !== depthVal) throw new TopologyException('assigned depths do not match', this.getCoordinate())\n    \n    this._depth[position] = depthVal\n  }\n  isInteriorAreaEdge() {\n    let isInteriorAreaEdge = true\n    for (let i = 0; i < 2; i++) \n      if (!(this._label.isArea(i) && this._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) \n        isInteriorAreaEdge = false\n      \n    \n    return isInteriorAreaEdge\n  }\n  setNextMin(nextMin) {\n    this._nextMin = nextMin\n  }\n  print(out) {\n    super.print.call(this, out)\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT])\n    out.print(' (' + this.getDepthDelta() + ')')\n    if (this._isInResult) out.print(' inResult')\n  }\n  setMinEdgeRing(minEdgeRing) {\n    this._minEdgeRing = minEdgeRing\n  }\n  getSym() {\n    return this._sym\n  }\n  isForward() {\n    return this._isForward\n  }\n  setSym(de) {\n    this._sym = de\n  }\n  setVisitedEdge(isVisited) {\n    this.setVisited(isVisited)\n    this._sym.setVisited(isVisited)\n  }\n  getNextMin() {\n    return this._nextMin\n  }\n  getDepth(position) {\n    return this._depth[position]\n  }\n  computeDirectedLabel() {\n    this._label = new Label(this._edge.getLabel())\n    if (!this._isForward) this._label.flip()\n  }\n  getNext() {\n    return this._next\n  }\n  isLineEdge() {\n    const isLine = this._label.isLine(0) || this._label.isLine(1)\n    const isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR)\n    const isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR)\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  }\n  setEdgeRing(edgeRing) {\n    this._edgeRing = edgeRing\n  }\n  getMinEdgeRing() {\n    return this._minEdgeRing\n  }\n  getDepthDelta() {\n    let depthDelta = this._edge.getDepthDelta()\n    if (!this._isForward) depthDelta = -depthDelta\n    return depthDelta\n  }\n  setInResult(isInResult) {\n    this._isInResult = isInResult\n  }\n  getEdge() {\n    return this._edge\n  }\n  printEdge(out) {\n    this.print(out)\n    out.print(' ')\n    if (this._isForward) this._edge.print(out); else this._edge.printReverse(out)\n  }\n  setEdgeDepths(position, depth) {\n    let depthDelta = this.getEdge().getDepthDelta()\n    if (!this._isForward) depthDelta = -depthDelta\n    let directionFactor = 1\n    if (position === Position.LEFT) directionFactor = -1\n    const oppositePos = Position.opposite(position)\n    const delta = depthDelta * directionFactor\n    const oppositeDepth = depth + delta\n    this.setDepth(position, depth)\n    this.setDepth(oppositePos, oppositeDepth)\n  }\n  getEdgeRing() {\n    return this._edgeRing\n  }\n  isInResult() {\n    return this._isInResult\n  }\n  setNext(next) {\n    this._next = next\n  }\n  isVisited() {\n    return this._isVisited\n  }\n}\n","import Location from '../geom/Location.js'\nimport LineString from '../geom/LineString.js'\nimport Polygon from '../geom/Polygon.js'\nimport PointLocation from './PointLocation.js'\nimport BoundaryNodeRule from './BoundaryNodeRule.js'\nimport MultiPolygon from '../geom/MultiPolygon.js'\nimport GeometryCollectionIterator from '../geom/GeometryCollectionIterator.js'\nimport GeometryCollection from '../geom/GeometryCollection.js'\nimport MultiLineString from '../geom/MultiLineString.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Point from '../geom/Point.js'\nexport default class PointLocator {\n  constructor() {\n    PointLocator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE\n    this._isIn = null\n    this._numBoundaries = null\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const boundaryRule = arguments[0]\n      if (boundaryRule === null) throw new IllegalArgumentException('Rule must be non-null')\n      this._boundaryRule = boundaryRule\n    }\n  }\n  locateInPolygonRing(p, ring) {\n    if (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR\n    return PointLocation.locateInRing(p, ring.getCoordinates())\n  }\n  intersects(p, geom) {\n    return this.locate(p, geom) !== Location.EXTERIOR\n  }\n  updateLocationInfo(loc) {\n    if (loc === Location.INTERIOR) this._isIn = true\n    if (loc === Location.BOUNDARY) this._numBoundaries++\n  }\n  computeLocation(p, geom) {\n    if (geom instanceof Point) \n      this.updateLocationInfo(this.locateOnPoint(p, geom))\n    \n    if (geom instanceof LineString) {\n      this.updateLocationInfo(this.locateOnLineString(p, geom))\n    } else if (geom instanceof Polygon) {\n      this.updateLocationInfo(this.locateInPolygon(p, geom))\n    } else if (geom instanceof MultiLineString) {\n      const ml = geom\n      for (let i = 0; i < ml.getNumGeometries(); i++) {\n        const l = ml.getGeometryN(i)\n        this.updateLocationInfo(this.locateOnLineString(p, l))\n      }\n    } else if (geom instanceof MultiPolygon) {\n      const mpoly = geom\n      for (let i = 0; i < mpoly.getNumGeometries(); i++) {\n        const poly = mpoly.getGeometryN(i)\n        this.updateLocationInfo(this.locateInPolygon(p, poly))\n      }\n    } else if (geom instanceof GeometryCollection) {\n      const geomi = new GeometryCollectionIterator(geom)\n      while (geomi.hasNext()) {\n        const g2 = geomi.next()\n        if (g2 !== geom) this.computeLocation(p, g2)\n      }\n    }\n  }\n  locateOnPoint(p, pt) {\n    const ptCoord = pt.getCoordinate()\n    if (ptCoord.equals2D(p)) return Location.INTERIOR\n    return Location.EXTERIOR\n  }\n  locateOnLineString(p, l) {\n    if (!l.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR\n    const seq = l.getCoordinateSequence()\n    if (!l.isClosed()) \n      if (p.equals(seq.getCoordinate(0)) || p.equals(seq.getCoordinate(seq.size() - 1))) \n        return Location.BOUNDARY\n      \n    \n    if (PointLocation.isOnLine(p, seq)) \n      return Location.INTERIOR\n    \n    return Location.EXTERIOR\n  }\n  locateInPolygon(p, poly) {\n    if (poly.isEmpty()) return Location.EXTERIOR\n    const shell = poly.getExteriorRing()\n    const shellLoc = this.locateInPolygonRing(p, shell)\n    if (shellLoc === Location.EXTERIOR) return Location.EXTERIOR\n    if (shellLoc === Location.BOUNDARY) return Location.BOUNDARY\n    for (let i = 0; i < poly.getNumInteriorRing(); i++) {\n      const hole = poly.getInteriorRingN(i)\n      const holeLoc = this.locateInPolygonRing(p, hole)\n      if (holeLoc === Location.INTERIOR) return Location.EXTERIOR\n      if (holeLoc === Location.BOUNDARY) return Location.BOUNDARY\n    }\n    return Location.INTERIOR\n  }\n  locate(p, geom) {\n    if (geom.isEmpty()) return Location.EXTERIOR\n    if (geom instanceof LineString) \n      return this.locateOnLineString(p, geom)\n    else if (geom instanceof Polygon) \n      return this.locateInPolygon(p, geom)\n    \n    this._isIn = false\n    this._numBoundaries = 0\n    this.computeLocation(p, geom)\n    if (this._boundaryRule.isInBoundary(this._numBoundaries)) return Location.BOUNDARY\n    if (this._numBoundaries > 0 || this._isIn) return Location.INTERIOR\n    return Location.EXTERIOR\n  }\n}\n","export default class BoundaryNodeRule {\n  isInBoundary(boundaryCount) {}\n}\nclass Mod2BoundaryNodeRule {\n  isInBoundary(boundaryCount) {\n    return boundaryCount % 2 === 1\n  }\n  get interfaces_() {\n    return [BoundaryNodeRule]\n  }\n}\nclass EndPointBoundaryNodeRule {\n  isInBoundary(boundaryCount) {\n    return boundaryCount > 0\n  }\n  get interfaces_() {\n    return [BoundaryNodeRule]\n  }\n}\nclass MultiValentEndPointBoundaryNodeRule {\n  isInBoundary(boundaryCount) {\n    return boundaryCount > 1\n  }\n  get interfaces_() {\n    return [BoundaryNodeRule]\n  }\n}\nclass MonoValentEndPointBoundaryNodeRule {\n  isInBoundary(boundaryCount) {\n    return boundaryCount === 1\n  }\n  get interfaces_() {\n    return [BoundaryNodeRule]\n  }\n}\nBoundaryNodeRule.Mod2BoundaryNodeRule = Mod2BoundaryNodeRule\nBoundaryNodeRule.EndPointBoundaryNodeRule = EndPointBoundaryNodeRule\nBoundaryNodeRule.MultiValentEndPointBoundaryNodeRule = MultiValentEndPointBoundaryNodeRule\nBoundaryNodeRule.MonoValentEndPointBoundaryNodeRule = MonoValentEndPointBoundaryNodeRule\nBoundaryNodeRule.MOD2_BOUNDARY_RULE = new Mod2BoundaryNodeRule()\nBoundaryNodeRule.ENDPOINT_BOUNDARY_RULE = new EndPointBoundaryNodeRule()\nBoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE = new MultiValentEndPointBoundaryNodeRule()\nBoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE = new MonoValentEndPointBoundaryNodeRule()\nBoundaryNodeRule.OGC_SFS_BOUNDARY_RULE = BoundaryNodeRule.MOD2_BOUNDARY_RULE\n","import hasInterface from '../../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport ItemVisitor from '../../index/ItemVisitor.js'\nimport PointOnGeometryLocator from './PointOnGeometryLocator.js'\nimport LinearRing from '../../geom/LinearRing.js'\nimport SortedPackedIntervalRTree from '../../index/intervalrtree/SortedPackedIntervalRTree.js'\nimport LineSegment from '../../geom/LineSegment.js'\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter.js'\nimport ArrayListVisitor from '../../index/ArrayListVisitor.js'\nimport RayCrossingCounter from '../RayCrossingCounter.js'\nimport Polygonal from '../../geom/Polygonal.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class IndexedPointInAreaLocator {\n  constructor() {\n    IndexedPointInAreaLocator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geom = null\n    this._index = null\n    const g = arguments[0]\n    if (!(hasInterface(g, Polygonal) || g instanceof LinearRing)) throw new IllegalArgumentException('Argument must be Polygonal or LinearRing')\n    this._geom = g\n  }\n  locate(p) {\n    if (this._index === null) {\n      this._index = new IntervalIndexedGeometry(this._geom)\n      this._geom = null\n    }\n    const rcc = new RayCrossingCounter(p)\n    const visitor = new SegmentVisitor(rcc)\n    this._index.query(p.y, p.y, visitor)\n    return rcc.getLocation()\n  }\n  get interfaces_() {\n    return [PointOnGeometryLocator]\n  }\n}\nclass SegmentVisitor {\n  constructor() {\n    SegmentVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._counter = null\n    const counter = arguments[0]\n    this._counter = counter\n  }\n  visitItem(item) {\n    const seg = item\n    this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1))\n  }\n  get interfaces_() {\n    return [ItemVisitor]\n  }\n}\nclass IntervalIndexedGeometry {\n  constructor() {\n    IntervalIndexedGeometry.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._isEmpty = false\n    this._index = new SortedPackedIntervalRTree()\n    const geom = arguments[0]\n    if (geom.isEmpty()) this._isEmpty = true; else this.init(geom)\n  }\n  init(geom) {\n    const lines = LinearComponentExtracter.getLines(geom)\n    for (let i = lines.iterator(); i.hasNext(); ) {\n      const line = i.next()\n      const pts = line.getCoordinates()\n      this.addLine(pts)\n    }\n  }\n  addLine(pts) {\n    for (let i = 1; i < pts.length; i++) {\n      const seg = new LineSegment(pts[i - 1], pts[i])\n      const min = Math.min(seg.p0.y, seg.p1.y)\n      const max = Math.max(seg.p0.y, seg.p1.y)\n      this._index.insert(min, max, seg)\n    }\n  }\n  query() {\n    if (arguments.length === 2) {\n      const min = arguments[0], max = arguments[1]\n      if (this._isEmpty) return new ArrayList()\n      const visitor = new ArrayListVisitor()\n      this._index.query(min, max, visitor)\n      return visitor.getItems()\n    } else if (arguments.length === 3) {\n      const min = arguments[0], max = arguments[1], visitor = arguments[2]\n      if (this._isEmpty) return null\n      this._index.query(min, max, visitor)\n    }\n  }\n}\nIndexedPointInAreaLocator.SegmentVisitor = SegmentVisitor\nIndexedPointInAreaLocator.IntervalIndexedGeometry = IntervalIndexedGeometry\n","export default class ItemVisitor {\n  visitItem(item) {}\n}\n","import WKTWriter from '../../io/WKTWriter.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport IntervalRTreeLeafNode from './IntervalRTreeLeafNode.js'\nimport IntervalRTreeNode from './IntervalRTreeNode.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport System from '../../../../../java/lang/System.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport IllegalStateException from '../../../../../java/lang/IllegalStateException.js'\nimport IntervalRTreeBranchNode from './IntervalRTreeBranchNode.js'\nexport default class SortedPackedIntervalRTree {\n  constructor() {\n    SortedPackedIntervalRTree.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._leaves = new ArrayList()\n    this._root = null\n    this._level = 0\n  }\n  buildTree() {\n    Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator())\n    let src = this._leaves\n    let temp = null\n    let dest = new ArrayList()\n    while (true) {\n      this.buildLevel(src, dest)\n      if (dest.size() === 1) return dest.get(0)\n      temp = src\n      src = dest\n      dest = temp\n    }\n  }\n  insert(min, max, item) {\n    if (this._root !== null) throw new IllegalStateException('Index cannot be added to once it has been queried')\n    this._leaves.add(new IntervalRTreeLeafNode(min, max, item))\n  }\n  query(min, max, visitor) {\n    this.init()\n    if (this._root === null) return null\n    this._root.query(min, max, visitor)\n  }\n  buildRoot() {\n    if (this._root !== null) return null\n    this._root = this.buildTree()\n  }\n  printNode(node) {\n    System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)))\n  }\n  init() {\n    if (this._root !== null) return null\n    if (this._leaves.size() === 0) return null\n    this.buildRoot()\n  }\n  buildLevel(src, dest) {\n    this._level++\n    dest.clear()\n    for (let i = 0; i < src.size(); i += 2) {\n      const n1 = src.get(i)\n      const n2 = i + 1 < src.size() ? src.get(i) : null\n      if (n2 === null) {\n        dest.add(n1)\n      } else {\n        const node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1))\n        dest.add(node)\n      }\n    }\n  }\n}\n","import IntervalRTreeNode from './IntervalRTreeNode.js'\nexport default class IntervalRTreeLeafNode extends IntervalRTreeNode {\n  constructor() {\n    super()\n    IntervalRTreeLeafNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._item = null\n    const min = arguments[0], max = arguments[1], item = arguments[2]\n    this._min = min\n    this._max = max\n    this._item = item\n  }\n  query(queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) return null\n    visitor.visitItem(this._item)\n  }\n}\n","import WKTWriter from '../../io/WKTWriter.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport Double from '../../../../../java/lang/Double.js'\nimport Comparator from '../../../../../java/util/Comparator.js'\nexport default class IntervalRTreeNode {\n  constructor() {\n    IntervalRTreeNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._min = Double.POSITIVE_INFINITY\n    this._max = Double.NEGATIVE_INFINITY\n  }\n  getMin() {\n    return this._min\n  }\n  intersects(queryMin, queryMax) {\n    if (this._min > queryMax || this._max < queryMin) return false\n    return true\n  }\n  getMax() {\n    return this._max\n  }\n  toString() {\n    return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n  }\n}\nclass NodeComparator {\n  compare(o1, o2) {\n    const n1 = o1\n    const n2 = o2\n    const mid1 = (n1._min + n1._max) / 2\n    const mid2 = (n2._min + n2._max) / 2\n    if (mid1 < mid2) return -1\n    if (mid1 > mid2) return 1\n    return 0\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nIntervalRTreeNode.NodeComparator = NodeComparator\n","import IntervalRTreeNode from './IntervalRTreeNode.js'\nexport default class IntervalRTreeBranchNode extends IntervalRTreeNode {\n  constructor() {\n    super()\n    IntervalRTreeBranchNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._node1 = null\n    this._node2 = null\n    const n1 = arguments[0], n2 = arguments[1]\n    this._node1 = n1\n    this._node2 = n2\n    this.buildExtent(this._node1, this._node2)\n  }\n  buildExtent(n1, n2) {\n    this._min = Math.min(n1._min, n2._min)\n    this._max = Math.max(n1._max, n2._max)\n  }\n  query(queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) \n      return null\n    \n    if (this._node1 !== null) this._node1.query(queryMin, queryMax, visitor)\n    if (this._node2 !== null) this._node2.query(queryMin, queryMax, visitor)\n  }\n}\n","import Coordinate from './Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport IllegalStateException from '../../../../java/lang/IllegalStateException.js'\nimport Distance from '../algorithm/Distance.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport Intersection from '../algorithm/Intersection.js'\nexport default class LineSegment {\n  constructor() {\n    LineSegment.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.p0 = null\n    this.p1 = null\n    if (arguments.length === 0) {\n      LineSegment.constructor_.call(this, new Coordinate(), new Coordinate())\n    } else if (arguments.length === 1) {\n      const ls = arguments[0]\n      LineSegment.constructor_.call(this, ls.p0, ls.p1)\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0], p1 = arguments[1]\n      this.p0 = p0\n      this.p1 = p1\n    } else if (arguments.length === 4) {\n      const x0 = arguments[0], y0 = arguments[1], x1 = arguments[2], y1 = arguments[3]\n      LineSegment.constructor_.call(this, new Coordinate(x0, y0), new Coordinate(x1, y1))\n    }\n  }\n  static midPoint(p0, p1) {\n    return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n  }\n  minX() {\n    return Math.min(this.p0.x, this.p1.x)\n  }\n  orientationIndex() {\n    if (arguments[0] instanceof LineSegment) {\n      const seg = arguments[0]\n      const orient0 = Orientation.index(this.p0, this.p1, seg.p0)\n      const orient1 = Orientation.index(this.p0, this.p1, seg.p1)\n      if (orient0 >= 0 && orient1 >= 0) return Math.max(orient0, orient1)\n      if (orient0 <= 0 && orient1 <= 0) return Math.max(orient0, orient1)\n      return 0\n    } else if (arguments[0] instanceof Coordinate) {\n      const p = arguments[0]\n      return Orientation.index(this.p0, this.p1, p)\n    }\n  }\n  toGeometry(geomFactory) {\n    return geomFactory.createLineString([this.p0, this.p1])\n  }\n  isVertical() {\n    return this.p0.x === this.p1.x\n  }\n  minY() {\n    return Math.min(this.p0.y, this.p1.y)\n  }\n  midPoint() {\n    return LineSegment.midPoint(this.p0, this.p1)\n  }\n  maxY() {\n    return Math.max(this.p0.y, this.p1.y)\n  }\n  pointAlongOffset(segmentLengthFraction, offsetDistance) {\n    const segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x)\n    const segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y)\n    const dx = this.p1.x - this.p0.x\n    const dy = this.p1.y - this.p0.y\n    const len = Math.sqrt(dx * dx + dy * dy)\n    let ux = 0.0\n    let uy = 0.0\n    if (offsetDistance !== 0.0) {\n      if (len <= 0.0) throw new IllegalStateException('Cannot compute offset from zero-length line segment')\n      ux = offsetDistance * dx / len\n      uy = offsetDistance * dy / len\n    }\n    const offsetx = segx - uy\n    const offsety = segy + ux\n    const coord = new Coordinate(offsetx, offsety)\n    return coord\n  }\n  setCoordinates() {\n    if (arguments.length === 1) {\n      const ls = arguments[0]\n      this.setCoordinates(ls.p0, ls.p1)\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0], p1 = arguments[1]\n      this.p0.x = p0.x\n      this.p0.y = p0.y\n      this.p1.x = p1.x\n      this.p1.y = p1.y\n    }\n  }\n  segmentFraction(inputPt) {\n    let segFrac = this.projectionFactor(inputPt)\n    if (segFrac < 0.0) segFrac = 0.0; else if (segFrac > 1.0 || Double.isNaN(segFrac)) segFrac = 1.0\n    return segFrac\n  }\n  toString() {\n    return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n  }\n  distance() {\n    if (arguments[0] instanceof LineSegment) {\n      const ls = arguments[0]\n      return Distance.segmentToSegment(this.p0, this.p1, ls.p0, ls.p1)\n    } else if (arguments[0] instanceof Coordinate) {\n      const p = arguments[0]\n      return Distance.pointToSegment(p, this.p0, this.p1)\n    }\n  }\n  equals(o) {\n    if (!(o instanceof LineSegment)) \n      return false\n    \n    const other = o\n    return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n  }\n  intersection(line) {\n    const li = new RobustLineIntersector()\n    li.computeIntersection(this.p0, this.p1, line.p0, line.p1)\n    if (li.hasIntersection()) return li.getIntersection(0)\n    return null\n  }\n  project() {\n    if (arguments[0] instanceof Coordinate) {\n      const p = arguments[0]\n      if (p.equals(this.p0) || p.equals(this.p1)) return new Coordinate(p)\n      const r = this.projectionFactor(p)\n      const coord = new Coordinate()\n      coord.x = this.p0.x + r * (this.p1.x - this.p0.x)\n      coord.y = this.p0.y + r * (this.p1.y - this.p0.y)\n      return coord\n    } else if (arguments[0] instanceof LineSegment) {\n      const seg = arguments[0]\n      const pf0 = this.projectionFactor(seg.p0)\n      const pf1 = this.projectionFactor(seg.p1)\n      if (pf0 >= 1.0 && pf1 >= 1.0) return null\n      if (pf0 <= 0.0 && pf1 <= 0.0) return null\n      let newp0 = this.project(seg.p0)\n      if (pf0 < 0.0) newp0 = this.p0\n      if (pf0 > 1.0) newp0 = this.p1\n      let newp1 = this.project(seg.p1)\n      if (pf1 < 0.0) newp1 = this.p0\n      if (pf1 > 1.0) newp1 = this.p1\n      return new LineSegment(newp0, newp1)\n    }\n  }\n  normalize() {\n    if (this.p1.compareTo(this.p0) < 0) this.reverse()\n  }\n  angle() {\n    return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n  }\n  getCoordinate(i) {\n    if (i === 0) return this.p0\n    return this.p1\n  }\n  distancePerpendicular(p) {\n    return Distance.pointToLinePerpendicular(p, this.p0, this.p1)\n  }\n  closestPoint(p) {\n    const factor = this.projectionFactor(p)\n    if (factor > 0 && factor < 1) \n      return this.project(p)\n    \n    const dist0 = this.p0.distance(p)\n    const dist1 = this.p1.distance(p)\n    if (dist0 < dist1) return this.p0\n    return this.p1\n  }\n  projectionFactor(p) {\n    if (p.equals(this.p0)) return 0.0\n    if (p.equals(this.p1)) return 1.0\n    const dx = this.p1.x - this.p0.x\n    const dy = this.p1.y - this.p0.y\n    const len = dx * dx + dy * dy\n    if (len <= 0.0) return Double.NaN\n    const r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len\n    return r\n  }\n  closestPoints(line) {\n    const intPt = this.intersection(line)\n    if (intPt !== null) \n      return [intPt, intPt]\n    \n    const closestPt = new Array(2).fill(null)\n    let minDistance = Double.MAX_VALUE\n    let dist = null\n    const close00 = this.closestPoint(line.p0)\n    minDistance = close00.distance(line.p0)\n    closestPt[0] = close00\n    closestPt[1] = line.p0\n    const close01 = this.closestPoint(line.p1)\n    dist = close01.distance(line.p1)\n    if (dist < minDistance) {\n      minDistance = dist\n      closestPt[0] = close01\n      closestPt[1] = line.p1\n    }\n    const close10 = line.closestPoint(this.p0)\n    dist = close10.distance(this.p0)\n    if (dist < minDistance) {\n      minDistance = dist\n      closestPt[0] = this.p0\n      closestPt[1] = close10\n    }\n    const close11 = line.closestPoint(this.p1)\n    dist = close11.distance(this.p1)\n    if (dist < minDistance) {\n      minDistance = dist\n      closestPt[0] = this.p1\n      closestPt[1] = close11\n    }\n    return closestPt\n  }\n  maxX() {\n    return Math.max(this.p0.x, this.p1.x)\n  }\n  getLength() {\n    return this.p0.distance(this.p1)\n  }\n  compareTo(o) {\n    const other = o\n    const comp0 = this.p0.compareTo(other.p0)\n    if (comp0 !== 0) return comp0\n    return this.p1.compareTo(other.p1)\n  }\n  reverse() {\n    const temp = this.p0\n    this.p0 = this.p1\n    this.p1 = temp\n  }\n  equalsTopo(other) {\n    return this.p0.equals(other.p0) && this.p1.equals(other.p1) || this.p0.equals(other.p1) && this.p1.equals(other.p0)\n  }\n  lineIntersection(line) {\n    const intPt = Intersection.intersection(this.p0, this.p1, line.p0, line.p1)\n    return intPt\n  }\n  isHorizontal() {\n    return this.p0.y === this.p1.y\n  }\n  reflect(p) {\n    const A = this.p1.getY() - this.p0.getY()\n    const B = this.p0.getX() - this.p1.getX()\n    const C = this.p0.getY() * (this.p1.getX() - this.p0.getX()) - this.p0.getX() * (this.p1.getY() - this.p0.getY())\n    const A2plusB2 = A * A + B * B\n    const A2subB2 = A * A - B * B\n    const x = p.getX()\n    const y = p.getY()\n    const rx = (-A2subB2 * x - 2 * A * B * y - 2 * A * C) / A2plusB2\n    const ry = (A2subB2 * y - 2 * A * B * x - 2 * B * C) / A2plusB2\n    return new Coordinate(rx, ry)\n  }\n  pointAlong(segmentLengthFraction) {\n    const coord = new Coordinate()\n    coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x)\n    coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y)\n    return coord\n  }\n  hashCode() {\n    let bits0 = Double.doubleToLongBits(this.p0.x)\n    bits0 ^= Double.doubleToLongBits(this.p0.y) * 31\n    const hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32)\n    let bits1 = Double.doubleToLongBits(this.p1.x)\n    bits1 ^= Double.doubleToLongBits(this.p1.y) * 31\n    const hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32)\n    return hash0 ^ hash1\n  }\n  get interfaces_() {\n    return [Comparable, Serializable]\n  }\n}\n","import LineString from '../LineString.js'\nimport Geometry from '../Geometry.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport Collection from '../../../../../java/util/Collection.js'\nimport LinearRing from '../LinearRing.js'\nimport GeometryComponentFilter from '../GeometryComponentFilter.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class LinearComponentExtracter {\n  constructor() {\n    LinearComponentExtracter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._lines = null\n    this._isForcedToLineString = false\n    if (arguments.length === 1) {\n      const lines = arguments[0]\n      this._lines = lines\n    } else if (arguments.length === 2) {\n      const lines = arguments[0], isForcedToLineString = arguments[1]\n      this._lines = lines\n      this._isForcedToLineString = isForcedToLineString\n    }\n  }\n  static getLines() {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      return LinearComponentExtracter.getLines(geom, false)\n    } else if (arguments.length === 2) {\n      if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n        const geoms = arguments[0], lines = arguments[1]\n        for (let i = geoms.iterator(); i.hasNext(); ) {\n          const g = i.next()\n          LinearComponentExtracter.getLines(g, lines)\n        }\n        return lines\n      } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n        const geom = arguments[0], forceToLineString = arguments[1]\n        const lines = new ArrayList()\n        geom.apply(new LinearComponentExtracter(lines, forceToLineString))\n        return lines\n      } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n        const geom = arguments[0], lines = arguments[1]\n        if (geom instanceof LineString) \n          lines.add(geom)\n        else \n          geom.apply(new LinearComponentExtracter(lines))\n        \n        return lines\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n        const geoms = arguments[0], lines = arguments[1], forceToLineString = arguments[2]\n        for (let i = geoms.iterator(); i.hasNext(); ) {\n          const g = i.next()\n          LinearComponentExtracter.getLines(g, lines, forceToLineString)\n        }\n        return lines\n      } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n        const geom = arguments[0], lines = arguments[1], forceToLineString = arguments[2]\n        geom.apply(new LinearComponentExtracter(lines, forceToLineString))\n        return lines\n      }\n    }\n  }\n  static getGeometry() {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n    } else if (arguments.length === 2) {\n      const geom = arguments[0], forceToLineString = arguments[1]\n      return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom, forceToLineString))\n    }\n  }\n  filter(geom) {\n    if (this._isForcedToLineString && geom instanceof LinearRing) {\n      const line = geom.getFactory().createLineString(geom.getCoordinateSequence())\n      this._lines.add(line)\n      return null\n    }\n    if (geom instanceof LineString) this._lines.add(geom)\n  }\n  setForceToLineString(isForcedToLineString) {\n    this._isForcedToLineString = isForcedToLineString\n  }\n  get interfaces_() {\n    return [GeometryComponentFilter]\n  }\n}\n","import ItemVisitor from './ItemVisitor.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class ArrayListVisitor {\n  constructor() {\n    ArrayListVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._items = new ArrayList()\n  }\n  getItems() {\n    return this._items\n  }\n  visitItem(item) {\n    this._items.add(item)\n  }\n  get interfaces_() {\n    return [ItemVisitor]\n  }\n}\n","import EdgeIntersectionList from './EdgeIntersectionList.js'\nimport IntersectionMatrix from '../geom/IntersectionMatrix.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Label from './Label.js'\nimport Envelope from '../geom/Envelope.js'\nimport StringBuilder from '../../../../java/lang/StringBuilder.js'\nimport Depth from './Depth.js'\nimport GraphComponent from './GraphComponent.js'\nimport MonotoneChainEdge from './index/MonotoneChainEdge.js'\nimport Position from './Position.js'\nexport default class Edge extends GraphComponent {\n  constructor() {\n    super()\n    Edge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.pts = null\n    this._env = null\n    this.eiList = new EdgeIntersectionList(this)\n    this._name = null\n    this._mce = null\n    this._isIsolated = true\n    this._depth = new Depth()\n    this._depthDelta = 0\n    if (arguments.length === 1) {\n      const pts = arguments[0]\n      Edge.constructor_.call(this, pts, null)\n    } else if (arguments.length === 2) {\n      const pts = arguments[0], label = arguments[1]\n      this.pts = pts\n      this._label = label\n    }\n  }\n  static updateIM() {\n    if (arguments.length === 2 && (arguments[1] instanceof IntersectionMatrix && arguments[0] instanceof Label)) {\n      const label = arguments[0], im = arguments[1]\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1)\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2)\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2)\n      }\n    } else {\n      return super.updateIM.apply(this, arguments)\n    }\n  }\n  getDepth() {\n    return this._depth\n  }\n  getCollapsedEdge() {\n    const newPts = new Array(2).fill(null)\n    newPts[0] = this.pts[0]\n    newPts[1] = this.pts[1]\n    const newe = new Edge(newPts, Label.toLineLabel(this._label))\n    return newe\n  }\n  setIsolated(isIsolated) {\n    this._isIsolated = isIsolated\n  }\n  setName(name) {\n    this._name = name\n  }\n  equals(o) {\n    if (!(o instanceof Edge)) return false\n    const e = o\n    if (this.pts.length !== e.pts.length) return false\n    let isEqualForward = true\n    let isEqualReverse = true\n    let iRev = this.pts.length\n    for (let i = 0; i < this.pts.length; i++) {\n      if (!this.pts[i].equals2D(e.pts[i])) \n        isEqualForward = false\n      \n      if (!this.pts[i].equals2D(e.pts[-- iRev])) \n        isEqualReverse = false\n      \n      if (!isEqualForward && !isEqualReverse) return false\n    }\n    return true\n  }\n  getCoordinate() {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) return this.pts[0]\n      return null\n    } else if (arguments.length === 1) {\n      const i = arguments[0]\n      return this.pts[i]\n    }\n  }\n  isClosed() {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  }\n  getMaximumSegmentIndex() {\n    return this.pts.length - 1\n  }\n  setDepthDelta(depthDelta) {\n    this._depthDelta = depthDelta\n  }\n  getEdgeIntersectionList() {\n    return this.eiList\n  }\n  addIntersections(li, segmentIndex, geomIndex) {\n    for (let i = 0; i < li.getIntersectionNum(); i++) \n      this.addIntersection(li, segmentIndex, geomIndex, i)\n    \n  }\n  isIsolated() {\n    return this._isIsolated\n  }\n  getCoordinates() {\n    return this.pts\n  }\n  print(out) {\n    out.print('edge ' + this._name + ': ')\n    out.print('LINESTRING (')\n    for (let i = 0; i < this.pts.length; i++) {\n      if (i > 0) out.print(',')\n      out.print(this.pts[i].x + ' ' + this.pts[i].y)\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta)\n  }\n  computeIM(im) {\n    Edge.updateIM(this._label, im)\n  }\n  isCollapsed() {\n    if (!this._label.isArea()) return false\n    if (this.pts.length !== 3) return false\n    if (this.pts[0].equals(this.pts[2])) return true\n    return false\n  }\n  getDepthDelta() {\n    return this._depthDelta\n  }\n  getNumPoints() {\n    return this.pts.length\n  }\n  printReverse(out) {\n    out.print('edge ' + this._name + ': ')\n    for (let i = this.pts.length - 1; i >= 0; i--) \n      out.print(this.pts[i] + ' ')\n    \n    out.println('')\n  }\n  getMonotoneChainEdge() {\n    if (this._mce === null) this._mce = new MonotoneChainEdge(this)\n    return this._mce\n  }\n  getEnvelope() {\n    if (this._env === null) {\n      this._env = new Envelope()\n      for (let i = 0; i < this.pts.length; i++) \n        this._env.expandToInclude(this.pts[i])\n      \n    }\n    return this._env\n  }\n  addIntersection(li, segmentIndex, geomIndex, intIndex) {\n    const intPt = new Coordinate(li.getIntersection(intIndex))\n    let normalizedSegmentIndex = segmentIndex\n    let dist = li.getEdgeDistance(geomIndex, intIndex)\n    const nextSegIndex = normalizedSegmentIndex + 1\n    if (nextSegIndex < this.pts.length) {\n      const nextPt = this.pts[nextSegIndex]\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex\n        dist = 0.0\n      }\n    }\n    const ei = this.eiList.add(intPt, normalizedSegmentIndex, dist)\n  }\n  toString() {\n    const builder = new StringBuilder()\n    builder.append('edge ' + this._name + ': ')\n    builder.append('LINESTRING (')\n    for (let i = 0; i < this.pts.length; i++) {\n      if (i > 0) builder.append(',')\n      builder.append(this.pts[i].x + ' ' + this.pts[i].y)\n    }\n    builder.append(')  ' + this._label + ' ' + this._depthDelta)\n    return builder.toString()\n  }\n  isPointwiseEqual(e) {\n    if (this.pts.length !== e.pts.length) return false\n    for (let i = 0; i < this.pts.length; i++) \n      if (!this.pts[i].equals2D(e.pts[i])) \n        return false\n      \n    \n    return true\n  }\n}\n","import EdgeIntersection from './EdgeIntersection.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Label from './Label.js'\nimport Edge from './Edge.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nexport default class EdgeIntersectionList {\n  constructor() {\n    EdgeIntersectionList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nodeMap = new TreeMap()\n    this.edge = null\n    const edge = arguments[0]\n    this.edge = edge\n  }\n  print(out) {\n    out.println('Intersections:')\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ei = it.next()\n      ei.print(out)\n    }\n  }\n  addEndpoints() {\n    const maxSegIndex = this.edge.pts.length - 1\n    this.add(this.edge.pts[0], 0, 0.0)\n    this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0)\n  }\n  createSplitEdge(ei0, ei1) {\n    let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n    const lastSegStartPt = this.edge.pts[ei1.segmentIndex]\n    const useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt)\n    if (!useIntPt1) \n      npts--\n    \n    const pts = new Array(npts).fill(null)\n    let ipt = 0\n    pts[ipt++] = new Coordinate(ei0.coord)\n    for (let i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) \n      pts[ipt++] = this.edge.pts[i]\n    \n    if (useIntPt1) pts[ipt] = ei1.coord\n    return new Edge(pts, new Label(this.edge._label))\n  }\n  add(intPt, segmentIndex, dist) {\n    const eiNew = new EdgeIntersection(intPt, segmentIndex, dist)\n    const ei = this._nodeMap.get(eiNew)\n    if (ei !== null) \n      return ei\n    \n    this._nodeMap.put(eiNew, eiNew)\n    return eiNew\n  }\n  isIntersection(pt) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ei = it.next()\n      if (ei.coord.equals(pt)) return true\n    }\n    return false\n  }\n  iterator() {\n    return this._nodeMap.values().iterator()\n  }\n  addSplitEdges(edgeList) {\n    this.addEndpoints()\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      const newEdge = this.createSplitEdge(eiPrev, ei)\n      edgeList.add(newEdge)\n      eiPrev = ei\n    }\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nexport default class EdgeIntersection {\n  constructor() {\n    EdgeIntersection.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.coord = null\n    this.segmentIndex = null\n    this.dist = null\n    const coord = arguments[0], segmentIndex = arguments[1], dist = arguments[2]\n    this.coord = new Coordinate(coord)\n    this.segmentIndex = segmentIndex\n    this.dist = dist\n  }\n  getSegmentIndex() {\n    return this.segmentIndex\n  }\n  getCoordinate() {\n    return this.coord\n  }\n  print(out) {\n    out.print(this.coord)\n    out.print(' seg # = ' + this.segmentIndex)\n    out.println(' dist = ' + this.dist)\n  }\n  compareTo(obj) {\n    const other = obj\n    return this.compare(other.segmentIndex, other.dist)\n  }\n  isEndPoint(maxSegmentIndex) {\n    if (this.segmentIndex === 0 && this.dist === 0.0) return true\n    if (this.segmentIndex === maxSegmentIndex) return true\n    return false\n  }\n  toString() {\n    return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n  }\n  getDistance() {\n    return this.dist\n  }\n  compare(segmentIndex, dist) {\n    if (this.segmentIndex < segmentIndex) return -1\n    if (this.segmentIndex > segmentIndex) return 1\n    if (this.dist < dist) return -1\n    if (this.dist > dist) return 1\n    return 0\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import Location from '../geom/Location.js'\nimport Position from './Position.js'\nexport default class Depth {\n  constructor() {\n    Depth.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._depth = Array(2).fill().map(() => Array(3))\n    for (let i = 0; i < 2; i++) \n      for (let j = 0; j < 3; j++) \n        this._depth[i][j] = Depth.NULL_VALUE\n      \n    \n  }\n  static depthAtLocation(location) {\n    if (location === Location.EXTERIOR) return 0\n    if (location === Location.INTERIOR) return 1\n    return Depth.NULL_VALUE\n  }\n  getDepth(geomIndex, posIndex) {\n    return this._depth[geomIndex][posIndex]\n  }\n  setDepth(geomIndex, posIndex, depthValue) {\n    this._depth[geomIndex][posIndex] = depthValue\n  }\n  isNull() {\n    if (arguments.length === 0) {\n      for (let i = 0; i < 2; i++) \n        for (let j = 0; j < 3; j++) \n          if (this._depth[i][j] !== Depth.NULL_VALUE) return false\n        \n      \n      return true\n    } else if (arguments.length === 1) {\n      const geomIndex = arguments[0]\n      return this._depth[geomIndex][1] === Depth.NULL_VALUE\n    } else if (arguments.length === 2) {\n      const geomIndex = arguments[0], posIndex = arguments[1]\n      return this._depth[geomIndex][posIndex] === Depth.NULL_VALUE\n    }\n  }\n  normalize() {\n    for (let i = 0; i < 2; i++) \n      if (!this.isNull(i)) {\n        let minDepth = this._depth[i][1]\n        if (this._depth[i][2] < minDepth) minDepth = this._depth[i][2]\n        if (minDepth < 0) minDepth = 0\n        for (let j = 1; j < 3; j++) {\n          let newValue = 0\n          if (this._depth[i][j] > minDepth) newValue = 1\n          this._depth[i][j] = newValue\n        }\n      }\n    \n  }\n  getDelta(geomIndex) {\n    return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n  }\n  getLocation(geomIndex, posIndex) {\n    if (this._depth[geomIndex][posIndex] <= 0) return Location.EXTERIOR\n    return Location.INTERIOR\n  }\n  toString() {\n    return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n  }\n  add() {\n    if (arguments.length === 1) {\n      const lbl = arguments[0]\n      for (let i = 0; i < 2; i++) \n        for (let j = 1; j < 3; j++) {\n          const loc = lbl.getLocation(i, j)\n          if (loc === Location.EXTERIOR || loc === Location.INTERIOR) \n            if (this.isNull(i, j)) \n              this._depth[i][j] = Depth.depthAtLocation(loc)\n            else this._depth[i][j] += Depth.depthAtLocation(loc)\n          \n        }\n      \n    } else if (arguments.length === 3) {\n      const geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2]\n      if (location === Location.INTERIOR) this._depth[geomIndex][posIndex]++\n    }\n  }\n}\nDepth.NULL_VALUE = -1\n","import MonotoneChainIndexer from './MonotoneChainIndexer.js'\nimport Envelope from '../../geom/Envelope.js'\nexport default class MonotoneChainEdge {\n  constructor() {\n    MonotoneChainEdge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.e = null\n    this.pts = null\n    this.startIndex = null\n    const e = arguments[0]\n    this.e = e\n    this.pts = e.getCoordinates()\n    const mcb = new MonotoneChainIndexer()\n    this.startIndex = mcb.getChainStartIndices(this.pts)\n  }\n  getCoordinates() {\n    return this.pts\n  }\n  getMaxX(chainIndex) {\n    const x1 = this.pts[this.startIndex[chainIndex]].x\n    const x2 = this.pts[this.startIndex[chainIndex + 1]].x\n    return x1 > x2 ? x1 : x2\n  }\n  getMinX(chainIndex) {\n    const x1 = this.pts[this.startIndex[chainIndex]].x\n    const x2 = this.pts[this.startIndex[chainIndex + 1]].x\n    return x1 < x2 ? x1 : x2\n  }\n  computeIntersectsForChain() {\n    if (arguments.length === 4) {\n      const chainIndex0 = arguments[0], mce = arguments[1], chainIndex1 = arguments[2], si = arguments[3]\n      this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si)\n    } else if (arguments.length === 6) {\n      const start0 = arguments[0], end0 = arguments[1], mce = arguments[2], start1 = arguments[3], end1 = arguments[4], ei = arguments[5]\n      if (end0 - start0 === 1 && end1 - start1 === 1) {\n        ei.addIntersections(this.e, start0, mce.e, start1)\n        return null\n      }\n      if (!this.overlaps(start0, end0, mce, start1, end1)) return null\n      const mid0 = Math.trunc((start0 + end0) / 2)\n      const mid1 = Math.trunc((start1 + end1) / 2)\n      if (start0 < mid0) {\n        if (start1 < mid1) this.computeIntersectsForChain(start0, mid0, mce, start1, mid1, ei)\n        if (mid1 < end1) this.computeIntersectsForChain(start0, mid0, mce, mid1, end1, ei)\n      }\n      if (mid0 < end0) {\n        if (start1 < mid1) this.computeIntersectsForChain(mid0, end0, mce, start1, mid1, ei)\n        if (mid1 < end1) this.computeIntersectsForChain(mid0, end0, mce, mid1, end1, ei)\n      }\n    }\n  }\n  overlaps(start0, end0, mce, start1, end1) {\n    return Envelope.intersects(this.pts[start0], this.pts[end0], mce.pts[start1], mce.pts[end1])\n  }\n  getStartIndexes() {\n    return this.startIndex\n  }\n  computeIntersects(mce, si) {\n    for (let i = 0; i < this.startIndex.length - 1; i++) \n      for (let j = 0; j < mce.startIndex.length - 1; j++) \n        this.computeIntersectsForChain(i, mce, j, si)\n      \n    \n  }\n}\n","import IntArrayList from '../../util/IntArrayList.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Quadrant from '../Quadrant.js'\nexport default class MonotoneChainIndexer {\n  static toIntArray(list) {\n    const array = new Array(list.size()).fill(null)\n    for (let i = 0; i < array.length; i++) \n      array[i] = list.get(i).intValue()\n    \n    return array\n  }\n  findChainEnd(pts, start) {\n    const chainQuad = Quadrant.quadrant(pts[start], pts[start + 1])\n    let last = start + 1\n    while (last < pts.length) {\n      const quad = Quadrant.quadrant(pts[last - 1], pts[last])\n      if (quad !== chainQuad) break\n      last++\n    }\n    return last - 1\n  }\n  OLDgetChainStartIndices(pts) {\n    let start = 0\n    const startIndexList = new ArrayList()\n    startIndexList.add(start)\n    do {\n      const last = this.findChainEnd(pts, start)\n      startIndexList.add(last)\n      start = last\n    } while (start < pts.length - 1)\n    const startIndex = MonotoneChainIndexer.toIntArray(startIndexList)\n    return startIndex\n  }\n  getChainStartIndices(pts) {\n    let start = 0\n    const startIndexList = new IntArrayList(Math.trunc(pts.length / 2))\n    startIndexList.add(start)\n    do {\n      const last = this.findChainEnd(pts, start)\n      startIndexList.add(last)\n      start = last\n    } while (start < pts.length - 1)\n    return startIndexList.toArray()\n  }\n}\n","import Arrays from '../../../../java/util/Arrays.js'\nimport System from '../../../../java/lang/System.js'\nexport default class IntArrayList {\n  constructor() {\n    IntArrayList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._data = null\n    this._size = 0\n    if (arguments.length === 0) {\n      IntArrayList.constructor_.call(this, 10)\n    } else if (arguments.length === 1) {\n      const initialCapacity = arguments[0]\n      this._data = new Array(initialCapacity).fill(null)\n    }\n  }\n  size() {\n    return this._size\n  }\n  addAll(values) {\n    if (values === null) return null\n    if (values.length === 0) return null\n    this.ensureCapacity(this._size + values.length)\n    System.arraycopy(values, 0, this._data, this._size, values.length)\n    this._size += values.length\n  }\n  ensureCapacity(capacity) {\n    if (capacity <= this._data.length) return null\n    const newLength = Math.max(capacity, this._data.length * 2)\n    this._data = Arrays.copyOf(this._data, newLength)\n  }\n  toArray() {\n    const array = new Array(this._size).fill(null)\n    System.arraycopy(this._data, 0, array, 0, this._size)\n    return array\n  }\n  add(value) {\n    this.ensureCapacity(this._size + 1)\n    this._data[this._size] = value\n    ++ this._size\n  }\n}\n","import BoundaryNodeRule from '../algorithm/BoundaryNodeRule.js'\nimport GeometryGraph from '../geomgraph/GeometryGraph.js'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector.js'\nexport default class GeometryGraphOperation {\n  constructor() {\n    GeometryGraphOperation.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._resultPrecisionModel = null\n    this._arg = null\n    if (arguments.length === 1) {\n      const g0 = arguments[0]\n      this.setComputationPrecision(g0.getPrecisionModel())\n      this._arg = new Array(1).fill(null)\n      this._arg[0] = new GeometryGraph(0, g0)\n      \n    } else if (arguments.length === 2) {\n      const g0 = arguments[0], g1 = arguments[1]\n      GeometryGraphOperation.constructor_.call(this, g0, g1, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE)\n    } else if (arguments.length === 3) {\n      const g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2]\n      if (g0.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) this.setComputationPrecision(g0.getPrecisionModel()); else this.setComputationPrecision(g1.getPrecisionModel())\n      this._arg = new Array(2).fill(null)\n      this._arg[0] = new GeometryGraph(0, g0, boundaryNodeRule)\n      this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule)\n    }\n  }\n  setComputationPrecision(pm) {\n    this._resultPrecisionModel = pm\n    this._li.setPrecisionModel(this._resultPrecisionModel)\n  }\n  getArgGeometry(i) {\n    return this._arg[i].getGeometry()\n  }\n}\n","import UnaryUnionOp from './union/UnaryUnionOp.js'\n\nexport {\n  UnaryUnionOp\n}\n","import hasInterface from '../../../../../hasInterface.js'\nimport Collection from '../../../../../java/util/Collection.js'\nimport SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp.js'\nimport InputExtracter from './InputExtracter.js'\nimport Geometry from '../../geom/Geometry.js'\nimport PointGeometryUnion from './PointGeometryUnion.js'\nimport OverlayOp from '../overlay/OverlayOp.js'\nimport CascadedPolygonUnion from './CascadedPolygonUnion.js'\nexport default class UnaryUnionOp {\n  constructor() {\n    UnaryUnionOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geomFact = null\n    this._extracter = null\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], Collection)) {\n        const geoms = arguments[0]\n        this.extract(geoms)\n      } else if (arguments[0] instanceof Geometry) {\n        const geom = arguments[0]\n        this.extract(geom)\n      }\n    } else if (arguments.length === 2) {\n      const geoms = arguments[0], geomFact = arguments[1]\n      this._geomFact = geomFact\n      this.extract(geoms)\n    }\n  }\n  static union() {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], Collection)) {\n        const geoms = arguments[0]\n        const op = new UnaryUnionOp(geoms)\n        return op.union()\n      } else if (arguments[0] instanceof Geometry) {\n        const geom = arguments[0]\n        const op = new UnaryUnionOp(geom)\n        return op.union()\n      }\n    } else if (arguments.length === 2) {\n      const geoms = arguments[0], geomFact = arguments[1]\n      const op = new UnaryUnionOp(geoms, geomFact)\n      return op.union()\n    }\n  }\n  extract() {\n    if (hasInterface(arguments[0], Collection)) {\n      const geoms = arguments[0]\n      this._extracter = InputExtracter.extract(geoms)\n    } else if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      this._extracter = InputExtracter.extract(geom)\n    }\n  }\n  unionWithNull(g0, g1) {\n    if (g0 === null && g1 === null) return null\n    if (g1 === null) return g0\n    if (g0 === null) return g1\n    return OverlayOp.union(g0, g1)\n  }\n  unionNoOpt(g0) {\n    const empty = this._geomFact.createPoint()\n    return SnapIfNeededOverlayOp.overlayOp(g0, empty, OverlayOp.UNION)\n  }\n  union() {\n    if (this._geomFact === null) this._geomFact = this._extracter.getFactory()\n    if (this._geomFact === null) \n      return null\n    \n    if (this._extracter.isEmpty()) \n      return this._geomFact.createEmpty(this._extracter.getDimension())\n    \n    const points = this._extracter.getExtract(0)\n    const lines = this._extracter.getExtract(1)\n    const polygons = this._extracter.getExtract(2)\n    let unionPoints = null\n    if (points.size() > 0) {\n      const ptGeom = this._geomFact.buildGeometry(points)\n      unionPoints = this.unionNoOpt(ptGeom)\n    }\n    let unionLines = null\n    if (lines.size() > 0) {\n      const lineGeom = this._geomFact.buildGeometry(lines)\n      unionLines = this.unionNoOpt(lineGeom)\n    }\n    let unionPolygons = null\n    if (polygons.size() > 0) \n      unionPolygons = CascadedPolygonUnion.union(polygons)\n    \n    const unionLA = this.unionWithNull(unionLines, unionPolygons)\n    let union = null\n    if (unionPoints === null) union = unionLA; else if (unionLA === null) union = unionPoints; else union = PointGeometryUnion.union(unionPoints, unionLA)\n    if (union === null) return this._geomFact.createGeometryCollection()\n    return union\n  }\n}\n","import SnapOverlayOp from './SnapOverlayOp.js'\nimport RuntimeException from '../../../../../../java/lang/RuntimeException.js'\nimport OverlayOp from '../OverlayOp.js'\nexport default class SnapIfNeededOverlayOp {\n  constructor() {\n    SnapIfNeededOverlayOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geom = new Array(2).fill(null)\n    const g1 = arguments[0], g2 = arguments[1]\n    this._geom[0] = g1\n    this._geom[1] = g2\n  }\n  static overlayOp(g0, g1, opCode) {\n    const op = new SnapIfNeededOverlayOp(g0, g1)\n    return op.getResultGeometry(opCode)\n  }\n  static union(g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n  }\n  static intersection(g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n  }\n  static symDifference(g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n  }\n  static difference(g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n  }\n  getResultGeometry(opCode) {\n    let result = null\n    let isSuccess = false\n    let savedException = null\n    try {\n      result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode)\n      const isValid = true\n      if (isValid) isSuccess = true\n    } catch (ex) {\n      if (ex instanceof RuntimeException) \n        savedException = ex\n      else throw ex\n    } finally {}\n    if (!isSuccess) \n      try {\n        result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode)\n      } catch (ex) {\n        if (ex instanceof RuntimeException) \n          throw savedException\n        else throw ex\n      } finally {}\n    \n    return result\n  }\n}\n","import GeometrySnapper from './GeometrySnapper.js'\nimport System from '../../../../../../java/lang/System.js'\nimport CommonBitsRemover from '../../../precision/CommonBitsRemover.js'\nimport OverlayOp from '../OverlayOp.js'\nexport default class SnapOverlayOp {\n  constructor() {\n    SnapOverlayOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geom = new Array(2).fill(null)\n    this._snapTolerance = null\n    this._cbr = null\n    const g1 = arguments[0], g2 = arguments[1]\n    this._geom[0] = g1\n    this._geom[1] = g2\n    this.computeSnapTolerance()\n  }\n  static overlayOp(g0, g1, opCode) {\n    const op = new SnapOverlayOp(g0, g1)\n    return op.getResultGeometry(opCode)\n  }\n  static union(g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n  }\n  static intersection(g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n  }\n  static symDifference(g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n  }\n  static difference(g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n  }\n  selfSnap(geom) {\n    const snapper0 = new GeometrySnapper(geom)\n    const snapGeom = snapper0.snapTo(geom, this._snapTolerance)\n    return snapGeom\n  }\n  removeCommonBits(geom) {\n    this._cbr = new CommonBitsRemover()\n    this._cbr.add(geom[0])\n    this._cbr.add(geom[1])\n    const remGeom = new Array(2).fill(null)\n    remGeom[0] = this._cbr.removeCommonBits(geom[0].copy())\n    remGeom[1] = this._cbr.removeCommonBits(geom[1].copy())\n    return remGeom\n  }\n  prepareResult(geom) {\n    this._cbr.addCommonBits(geom)\n    return geom\n  }\n  getResultGeometry(opCode) {\n    const prepGeom = this.snap(this._geom)\n    const result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode)\n    return this.prepareResult(result)\n  }\n  checkValid(g) {\n    if (!g.isValid()) \n      System.out.println('Snapped geometry is invalid')\n    \n  }\n  computeSnapTolerance() {\n    this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1])\n  }\n  snap(geom) {\n    const remGeom = this.removeCommonBits(geom)\n    const snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance)\n    return snapGeom\n  }\n}\n","import TreeSet from '../../../../../../java/util/TreeSet.js'\nimport Double from '../../../../../../java/lang/Double.js'\nimport BufferOp from '../../buffer/BufferOp.js'\nimport LineStringSnapper from './LineStringSnapper.js'\nimport PrecisionModel from '../../../geom/PrecisionModel.js'\nimport Polygonal from '../../../geom/Polygonal.js'\nimport GeometryTransformer from '../../../geom/util/GeometryTransformer.js'\nimport hasInterface from '../../../../../../hasInterface.js'\nexport default class GeometrySnapper {\n  constructor() {\n    GeometrySnapper.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._srcGeom = null\n    const srcGeom = arguments[0]\n    this._srcGeom = srcGeom\n  }\n  static computeSizeBasedSnapTolerance(g) {\n    const env = g.getEnvelopeInternal()\n    const minDimension = Math.min(env.getHeight(), env.getWidth())\n    const snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR\n    return snapTol\n  }\n  static computeOverlaySnapTolerance() {\n    if (arguments.length === 1) {\n      const g = arguments[0]\n      let snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g)\n      const pm = g.getPrecisionModel()\n      if (pm.getType() === PrecisionModel.FIXED) {\n        const fixedSnapTol = 1 / pm.getScale() * 2 / 1.415\n        if (fixedSnapTol > snapTolerance) snapTolerance = fixedSnapTol\n      }\n      return snapTolerance\n    } else if (arguments.length === 2) {\n      const g0 = arguments[0], g1 = arguments[1]\n      return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n    }\n  }\n  static snapToSelf(geom, snapTolerance, cleanResult) {\n    const snapper0 = new GeometrySnapper(geom)\n    return snapper0.snapToSelf(snapTolerance, cleanResult)\n  }\n  static snap(g0, g1, snapTolerance) {\n    const snapGeom = new Array(2).fill(null)\n    const snapper0 = new GeometrySnapper(g0)\n    snapGeom[0] = snapper0.snapTo(g1, snapTolerance)\n    const snapper1 = new GeometrySnapper(g1)\n    snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance)\n    return snapGeom\n  }\n  computeSnapTolerance(ringPts) {\n    const minSegLen = this.computeMinimumSegmentLength(ringPts)\n    const snapTol = minSegLen / 10\n    return snapTol\n  }\n  snapTo(snapGeom, snapTolerance) {\n    const snapPts = this.extractTargetCoordinates(snapGeom)\n    const snapTrans = new SnapTransformer(snapTolerance, snapPts)\n    return snapTrans.transform(this._srcGeom)\n  }\n  snapToSelf(snapTolerance, cleanResult) {\n    const snapPts = this.extractTargetCoordinates(this._srcGeom)\n    const snapTrans = new SnapTransformer(snapTolerance, snapPts, true)\n    const snappedGeom = snapTrans.transform(this._srcGeom)\n    let result = snappedGeom\n    if (cleanResult && hasInterface(result, Polygonal)) \n      result = BufferOp.bufferOp(snappedGeom, 0)\n    \n    return result\n  }\n  extractTargetCoordinates(g) {\n    const ptSet = new TreeSet()\n    const pts = g.getCoordinates()\n    for (let i = 0; i < pts.length; i++) \n      ptSet.add(pts[i])\n    \n    return ptSet.toArray(new Array(0).fill(null))\n  }\n  computeMinimumSegmentLength(pts) {\n    let minSegLen = Double.MAX_VALUE\n    for (let i = 0; i < pts.length - 1; i++) {\n      const segLen = pts[i].distance(pts[i + 1])\n      if (segLen < minSegLen) minSegLen = segLen\n    }\n    return minSegLen\n  }\n}\nGeometrySnapper.SNAP_PRECISION_FACTOR = 1e-9\nclass SnapTransformer extends GeometryTransformer {\n  constructor() {\n    super()\n    SnapTransformer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._snapTolerance = null\n    this._snapPts = null\n    this._isSelfSnap = false\n    if (arguments.length === 2) {\n      const snapTolerance = arguments[0], snapPts = arguments[1]\n      this._snapTolerance = snapTolerance\n      this._snapPts = snapPts\n    } else if (arguments.length === 3) {\n      const snapTolerance = arguments[0], snapPts = arguments[1], isSelfSnap = arguments[2]\n      this._snapTolerance = snapTolerance\n      this._snapPts = snapPts\n      this._isSelfSnap = isSelfSnap\n    }\n  }\n  transformCoordinates(coords, parent) {\n    const srcPts = coords.toCoordinateArray()\n    const newPts = this.snapLine(srcPts, this._snapPts)\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  }\n  snapLine(srcPts, snapPts) {\n    const snapper = new LineStringSnapper(srcPts, this._snapTolerance)\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap)\n    return snapper.snapTo(snapPts)\n  }\n}\n","import BufferParameters from './BufferParameters.js'\nimport ScaledNoder from '../../noding/ScaledNoder.js'\nimport TopologyException from '../../geom/TopologyException.js'\nimport MathUtil from '../../math/MathUtil.js'\nimport PrecisionModel from '../../geom/PrecisionModel.js'\nimport RuntimeException from '../../../../../java/lang/RuntimeException.js'\nimport MCIndexSnapRounder from '../../noding/snapround/MCIndexSnapRounder.js'\nimport Geometry from '../../geom/Geometry.js'\nimport BufferBuilder from './BufferBuilder.js'\nexport default class BufferOp {\n  constructor() {\n    BufferOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._argGeom = null\n    this._distance = null\n    this._bufParams = new BufferParameters()\n    this._resultGeometry = null\n    this._saveException = null\n    if (arguments.length === 1) {\n      const g = arguments[0]\n      this._argGeom = g\n    } else if (arguments.length === 2) {\n      const g = arguments[0], bufParams = arguments[1]\n      this._argGeom = g\n      this._bufParams = bufParams\n    }\n  }\n  static bufferOp() {\n    if (arguments.length === 2) {\n      const g = arguments[0], distance = arguments[1]\n      const gBuf = new BufferOp(g)\n      const geomBuf = gBuf.getResultGeometry(distance)\n      return geomBuf\n    } else if (arguments.length === 3) {\n      if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n        const g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2]\n        const bufOp = new BufferOp(g)\n        bufOp.setQuadrantSegments(quadrantSegments)\n        const geomBuf = bufOp.getResultGeometry(distance)\n        return geomBuf\n      } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n        const g = arguments[0], distance = arguments[1], params = arguments[2]\n        const bufOp = new BufferOp(g, params)\n        const geomBuf = bufOp.getResultGeometry(distance)\n        return geomBuf\n      }\n    } else if (arguments.length === 4) {\n      const g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2], endCapStyle = arguments[3]\n      const bufOp = new BufferOp(g)\n      bufOp.setQuadrantSegments(quadrantSegments)\n      bufOp.setEndCapStyle(endCapStyle)\n      const geomBuf = bufOp.getResultGeometry(distance)\n      return geomBuf\n    }\n  }\n  static precisionScaleFactor(g, distance, maxPrecisionDigits) {\n    const env = g.getEnvelopeInternal()\n    const envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()))\n    const expandByDistance = distance > 0.0 ? distance : 0.0\n    const bufEnvMax = envMax + 2 * expandByDistance\n    const bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0)\n    const minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits\n    const scaleFactor = Math.pow(10.0, minUnitLog10)\n    return scaleFactor\n  }\n  bufferFixedPrecision(fixedPM) {\n    const noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale())\n    const bufBuilder = new BufferBuilder(this._bufParams)\n    bufBuilder.setWorkingPrecisionModel(fixedPM)\n    bufBuilder.setNoder(noder)\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance)\n  }\n  bufferReducedPrecision() {\n    if (arguments.length === 0) {\n      for (let precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n        try {\n          this.bufferReducedPrecision(precDigits)\n        } catch (ex) {\n          if (ex instanceof TopologyException) \n            this._saveException = ex\n          else throw ex\n        } finally {}\n        if (this._resultGeometry !== null) return null\n      }\n      throw this._saveException\n    } else if (arguments.length === 1) {\n      const precisionDigits = arguments[0]\n      const sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits)\n      const fixedPM = new PrecisionModel(sizeBasedScaleFactor)\n      this.bufferFixedPrecision(fixedPM)\n    }\n  }\n  bufferOriginalPrecision() {\n    try {\n      const bufBuilder = new BufferBuilder(this._bufParams)\n      this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance)\n    } catch (ex) {\n      if (ex instanceof RuntimeException) \n        this._saveException = ex\n      else throw ex\n    } finally {}\n  }\n  getResultGeometry(distance) {\n    this._distance = distance\n    this.computeGeometry()\n    return this._resultGeometry\n  }\n  setEndCapStyle(endCapStyle) {\n    this._bufParams.setEndCapStyle(endCapStyle)\n  }\n  computeGeometry() {\n    this.bufferOriginalPrecision()\n    if (this._resultGeometry !== null) return null\n    const argPM = this._argGeom.getFactory().getPrecisionModel()\n    if (argPM.getType() === PrecisionModel.FIXED) this.bufferFixedPrecision(argPM); else this.bufferReducedPrecision()\n  }\n  setQuadrantSegments(quadrantSegments) {\n    this._bufParams.setQuadrantSegments(quadrantSegments)\n  }\n}\nBufferOp.CAP_ROUND = BufferParameters.CAP_ROUND\nBufferOp.CAP_BUTT = BufferParameters.CAP_FLAT\nBufferOp.CAP_FLAT = BufferParameters.CAP_FLAT\nBufferOp.CAP_SQUARE = BufferParameters.CAP_SQUARE\nBufferOp.MAX_PRECISION_DIGITS = 12\n","export default class BufferParameters {\n  constructor() {\n    BufferParameters.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS\n    this._endCapStyle = BufferParameters.CAP_ROUND\n    this._joinStyle = BufferParameters.JOIN_ROUND\n    this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT\n    this._isSingleSided = false\n    this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const quadrantSegments = arguments[0]\n      this.setQuadrantSegments(quadrantSegments)\n    } else if (arguments.length === 2) {\n      const quadrantSegments = arguments[0], endCapStyle = arguments[1]\n      this.setQuadrantSegments(quadrantSegments)\n      this.setEndCapStyle(endCapStyle)\n    } else if (arguments.length === 4) {\n      const quadrantSegments = arguments[0], endCapStyle = arguments[1], joinStyle = arguments[2], mitreLimit = arguments[3]\n      this.setQuadrantSegments(quadrantSegments)\n      this.setEndCapStyle(endCapStyle)\n      this.setJoinStyle(joinStyle)\n      this.setMitreLimit(mitreLimit)\n    }\n  }\n  static bufferDistanceError(quadSegs) {\n    const alpha = Math.PI / 2.0 / quadSegs\n    return 1 - Math.cos(alpha / 2.0)\n  }\n  getEndCapStyle() {\n    return this._endCapStyle\n  }\n  isSingleSided() {\n    return this._isSingleSided\n  }\n  setQuadrantSegments(quadSegs) {\n    this._quadrantSegments = quadSegs\n    if (this._quadrantSegments === 0) this._joinStyle = BufferParameters.JOIN_BEVEL\n    if (this._quadrantSegments < 0) {\n      this._joinStyle = BufferParameters.JOIN_MITRE\n      this._mitreLimit = Math.abs(this._quadrantSegments)\n    }\n    if (quadSegs <= 0) \n      this._quadrantSegments = 1\n    \n    if (this._joinStyle !== BufferParameters.JOIN_ROUND) \n      this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS\n    \n  }\n  getJoinStyle() {\n    return this._joinStyle\n  }\n  setJoinStyle(joinStyle) {\n    this._joinStyle = joinStyle\n  }\n  setSimplifyFactor(simplifyFactor) {\n    this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor\n  }\n  getSimplifyFactor() {\n    return this._simplifyFactor\n  }\n  getQuadrantSegments() {\n    return this._quadrantSegments\n  }\n  setEndCapStyle(endCapStyle) {\n    this._endCapStyle = endCapStyle\n  }\n  getMitreLimit() {\n    return this._mitreLimit\n  }\n  setMitreLimit(mitreLimit) {\n    this._mitreLimit = mitreLimit\n  }\n  setSingleSided(isSingleSided) {\n    this._isSingleSided = isSingleSided\n  }\n}\nBufferParameters.CAP_ROUND = 1\nBufferParameters.CAP_FLAT = 2\nBufferParameters.CAP_SQUARE = 3\nBufferParameters.JOIN_ROUND = 1\nBufferParameters.JOIN_MITRE = 2\nBufferParameters.JOIN_BEVEL = 3\nBufferParameters.DEFAULT_QUADRANT_SEGMENTS = 8\nBufferParameters.DEFAULT_MITRE_LIMIT = 5.0\nBufferParameters.DEFAULT_SIMPLIFY_FACTOR = 0.01\n","import hasInterface from '../../../../hasInterface.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport NodedSegmentString from './NodedSegmentString.js'\nimport System from '../../../../java/lang/System.js'\nimport CoordinateArrays from '../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Collection from '../../../../java/util/Collection.js'\nimport Noder from './Noder.js'\nexport default class ScaledNoder {\n  constructor() {\n    ScaledNoder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._noder = null\n    this._scaleFactor = null\n    this._offsetX = null\n    this._offsetY = null\n    this._isScaled = false\n    if (arguments.length === 2) {\n      const noder = arguments[0], scaleFactor = arguments[1]\n      ScaledNoder.constructor_.call(this, noder, scaleFactor, 0, 0)\n    } else if (arguments.length === 4) {\n      const noder = arguments[0], scaleFactor = arguments[1], offsetX = arguments[2], offsetY = arguments[3]\n      this._noder = noder\n      this._scaleFactor = scaleFactor\n      this._isScaled = !this.isIntegerPrecision()\n    }\n  }\n  rescale() {\n    if (hasInterface(arguments[0], Collection)) {\n      const segStrings = arguments[0]\n      for (let i = segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        this.rescale(ss.getCoordinates())\n      }\n    } else if (arguments[0] instanceof Array) {\n      const pts = arguments[0]\n      for (let i = 0; i < pts.length; i++) {\n        pts[i].x = pts[i].x / this._scaleFactor + this._offsetX\n        pts[i].y = pts[i].y / this._scaleFactor + this._offsetY\n      }\n      if (pts.length === 2 && pts[0].equals2D(pts[1])) \n        System.out.println(pts)\n      \n    }\n  }\n  scale() {\n    if (hasInterface(arguments[0], Collection)) {\n      const segStrings = arguments[0]\n      const nodedSegmentStrings = new ArrayList(segStrings.size())\n      for (let i = segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        nodedSegmentStrings.add(new NodedSegmentString(this.scale(ss.getCoordinates()), ss.getData()))\n      }\n      return nodedSegmentStrings\n    } else if (arguments[0] instanceof Array) {\n      const pts = arguments[0]\n      const roundPts = new Array(pts.length).fill(null)\n      for (let i = 0; i < pts.length; i++) \n        roundPts[i] = new Coordinate(Math.round((pts[i].x - this._offsetX) * this._scaleFactor), Math.round((pts[i].y - this._offsetY) * this._scaleFactor), pts[i].getZ())\n      \n      const roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts)\n      return roundPtsNoDup\n    }\n  }\n  isIntegerPrecision() {\n    return this._scaleFactor === 1.0\n  }\n  getNodedSubstrings() {\n    const splitSS = this._noder.getNodedSubstrings()\n    if (this._isScaled) this.rescale(splitSS)\n    return splitSS\n  }\n  computeNodes(inputSegStrings) {\n    let intSegStrings = inputSegStrings\n    if (this._isScaled) intSegStrings = this.scale(inputSegStrings)\n    this._noder.computeNodes(intSegStrings)\n  }\n  get interfaces_() {\n    return [Noder]\n  }\n}\n","import SegmentNodeList from './SegmentNodeList.js'\nimport WKTWriter from '../io/WKTWriter.js'\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Octant from './Octant.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport NodableSegmentString from './NodableSegmentString.js'\nexport default class NodedSegmentString {\n  constructor() {\n    NodedSegmentString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nodeList = new SegmentNodeList(this)\n    this._pts = null\n    this._data = null\n    const pts = arguments[0], data = arguments[1]\n    this._pts = pts\n    this._data = data\n  }\n  static getNodedSubstrings() {\n    if (arguments.length === 1) {\n      const segStrings = arguments[0]\n      const resultEdgelist = new ArrayList()\n      NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist)\n      return resultEdgelist\n    } else if (arguments.length === 2) {\n      const segStrings = arguments[0], resultEdgelist = arguments[1]\n      for (let i = segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        ss.getNodeList().addSplitEdges(resultEdgelist)\n      }\n    }\n  }\n  getCoordinates() {\n    return this._pts\n  }\n  size() {\n    return this._pts.length\n  }\n  getCoordinate(i) {\n    return this._pts[i]\n  }\n  isClosed() {\n    return this._pts[0].equals(this._pts[this._pts.length - 1])\n  }\n  getSegmentOctant(index) {\n    if (index === this._pts.length - 1) return -1\n    return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n  }\n  toString() {\n    return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n  }\n  getNodeList() {\n    return this._nodeList\n  }\n  addIntersectionNode(intPt, segmentIndex) {\n    let normalizedSegmentIndex = segmentIndex\n    const nextSegIndex = normalizedSegmentIndex + 1\n    if (nextSegIndex < this._pts.length) {\n      const nextPt = this._pts[nextSegIndex]\n      if (intPt.equals2D(nextPt)) \n        normalizedSegmentIndex = nextSegIndex\n      \n    }\n    const ei = this._nodeList.add(intPt, normalizedSegmentIndex)\n    return ei\n  }\n  addIntersections(li, segmentIndex, geomIndex) {\n    for (let i = 0; i < li.getIntersectionNum(); i++) \n      this.addIntersection(li, segmentIndex, geomIndex, i)\n    \n  }\n  setData(data) {\n    this._data = data\n  }\n  safeOctant(p0, p1) {\n    if (p0.equals2D(p1)) return 0\n    return Octant.octant(p0, p1)\n  }\n  getData() {\n    return this._data\n  }\n  addIntersection() {\n    if (arguments.length === 2) {\n      const intPt = arguments[0], segmentIndex = arguments[1]\n      this.addIntersectionNode(intPt, segmentIndex)\n    } else if (arguments.length === 4) {\n      const li = arguments[0], segmentIndex = arguments[1], geomIndex = arguments[2], intIndex = arguments[3]\n      const intPt = new Coordinate(li.getIntersection(intIndex))\n      this.addIntersection(intPt, segmentIndex)\n    }\n  }\n  get interfaces_() {\n    return [NodableSegmentString]\n  }\n}\n","import CoordinateList from '../geom/CoordinateList.js'\nimport SegmentNode from './SegmentNode.js'\nimport Iterator from '../../../../java/util/Iterator.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport NodedSegmentString from './NodedSegmentString.js'\nimport Integer from '../../../../java/lang/Integer.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nimport RuntimeException from '../../../../java/lang/RuntimeException.js'\nimport Assert from '../util/Assert.js'\nexport default class SegmentNodeList {\n  constructor() {\n    SegmentNodeList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nodeMap = new TreeMap()\n    this._edge = null\n    const edge = arguments[0]\n    this._edge = edge\n  }\n  getSplitCoordinates() {\n    const coordList = new CoordinateList()\n    this.addEndpoints()\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      this.addEdgeCoordinates(eiPrev, ei, coordList)\n      eiPrev = ei\n    }\n    return coordList.toCoordinateArray()\n  }\n  print(out) {\n    out.println('Intersections:')\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ei = it.next()\n      ei.print(out)\n    }\n  }\n  findCollapsesFromExistingVertices(collapsedVertexIndexes) {\n    for (let i = 0; i < this._edge.size() - 2; i++) {\n      const p0 = this._edge.getCoordinate(i)\n      const p1 = this._edge.getCoordinate(i + 1)\n      const p2 = this._edge.getCoordinate(i + 2)\n      if (p0.equals2D(p2)) \n        collapsedVertexIndexes.add(Integer.valueOf(i + 1))\n      \n    }\n  }\n  addEdgeCoordinates(ei0, ei1, coordList) {\n    const pts = this.createSplitEdgePts(ei0, ei1)\n    coordList.add(pts, false)\n  }\n  findCollapseIndex(ei0, ei1, collapsedVertexIndex) {\n    if (!ei0.coord.equals2D(ei1.coord)) return false\n    let numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex\n    if (!ei1.isInterior()) \n      numVerticesBetween--\n    \n    if (numVerticesBetween === 1) {\n      collapsedVertexIndex[0] = ei0.segmentIndex + 1\n      return true\n    }\n    return false\n  }\n  findCollapsesFromInsertedNodes(collapsedVertexIndexes) {\n    const collapsedVertexIndex = new Array(1).fill(null)\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      const isCollapsed = this.findCollapseIndex(eiPrev, ei, collapsedVertexIndex)\n      if (isCollapsed) collapsedVertexIndexes.add(Integer.valueOf(collapsedVertexIndex[0]))\n      eiPrev = ei\n    }\n  }\n  getEdge() {\n    return this._edge\n  }\n  addEndpoints() {\n    const maxSegIndex = this._edge.size() - 1\n    this.add(this._edge.getCoordinate(0), 0)\n    this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex)\n  }\n  createSplitEdge(ei0, ei1) {\n    const pts = this.createSplitEdgePts(ei0, ei1)\n    return new NodedSegmentString(pts, this._edge.getData())\n  }\n  add(intPt, segmentIndex) {\n    const eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex))\n    const ei = this._nodeMap.get(eiNew)\n    if (ei !== null) {\n      Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates')\n      return ei\n    }\n    this._nodeMap.put(eiNew, eiNew)\n    return eiNew\n  }\n  checkSplitEdgesCorrectness(splitEdges) {\n    const edgePts = this._edge.getCoordinates()\n    const split0 = splitEdges.get(0)\n    const pt0 = split0.getCoordinate(0)\n    if (!pt0.equals2D(edgePts[0])) throw new RuntimeException('bad split edge start point at ' + pt0)\n    const splitn = splitEdges.get(splitEdges.size() - 1)\n    const splitnPts = splitn.getCoordinates()\n    const ptn = splitnPts[splitnPts.length - 1]\n    if (!ptn.equals2D(edgePts[edgePts.length - 1])) throw new RuntimeException('bad split edge end point at ' + ptn)\n  }\n  addCollapsedNodes() {\n    const collapsedVertexIndexes = new ArrayList()\n    this.findCollapsesFromInsertedNodes(collapsedVertexIndexes)\n    this.findCollapsesFromExistingVertices(collapsedVertexIndexes)\n    for (let it = collapsedVertexIndexes.iterator(); it.hasNext(); ) {\n      const vertexIndex = it.next().intValue()\n      this.add(this._edge.getCoordinate(vertexIndex), vertexIndex)\n    }\n  }\n  createSplitEdgePts(ei0, ei1) {\n    let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n    if (npts === 2) return [new Coordinate(ei0.coord), new Coordinate(ei1.coord)]\n    const lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex)\n    const useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt)\n    if (!useIntPt1) \n      npts--\n    \n    const pts = new Array(npts).fill(null)\n    let ipt = 0\n    pts[ipt++] = new Coordinate(ei0.coord)\n    for (let i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) \n      pts[ipt++] = this._edge.getCoordinate(i)\n    \n    if (useIntPt1) pts[ipt] = new Coordinate(ei1.coord)\n    return pts\n  }\n  iterator() {\n    return this._nodeMap.values().iterator()\n  }\n  addSplitEdges(edgeList) {\n    this.addEndpoints()\n    this.addCollapsedNodes()\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      const newEdge = this.createSplitEdge(eiPrev, ei)\n      edgeList.add(newEdge)\n      eiPrev = ei\n    }\n  }\n}\nclass NodeVertexIterator {\n  constructor() {\n    NodeVertexIterator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nodeList = null\n    this._edge = null\n    this._nodeIt = null\n    this._currNode = null\n    this._nextNode = null\n    this._currSegIndex = 0\n    const nodeList = arguments[0]\n    this._nodeList = nodeList\n    this._edge = nodeList.getEdge()\n    this._nodeIt = nodeList.iterator()\n    this.readNextNode()\n  }\n  next() {\n    if (this._currNode === null) {\n      this._currNode = this._nextNode\n      this._currSegIndex = this._currNode.segmentIndex\n      this.readNextNode()\n      return this._currNode\n    }\n    if (this._nextNode === null) return null\n    if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n      this._currNode = this._nextNode\n      this._currSegIndex = this._currNode.segmentIndex\n      this.readNextNode()\n      return this._currNode\n    }\n    if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n    return null\n  }\n  readNextNode() {\n    if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n  }\n  hasNext() {\n    if (this._nextNode === null) return false\n    return true\n  }\n  remove() {\n    throw new UnsupportedOperationException(this.getClass().getName())\n  }\n  get interfaces_() {\n    return [Iterator]\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport SegmentPointComparator from './SegmentPointComparator.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nexport default class SegmentNode {\n  constructor() {\n    SegmentNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._segString = null\n    this.coord = null\n    this.segmentIndex = null\n    this._segmentOctant = null\n    this._isInterior = null\n    const segString = arguments[0], coord = arguments[1], segmentIndex = arguments[2], segmentOctant = arguments[3]\n    this._segString = segString\n    this.coord = new Coordinate(coord)\n    this.segmentIndex = segmentIndex\n    this._segmentOctant = segmentOctant\n    this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex))\n  }\n  getCoordinate() {\n    return this.coord\n  }\n  print(out) {\n    out.print(this.coord)\n    out.print(' seg # = ' + this.segmentIndex)\n  }\n  compareTo(obj) {\n    const other = obj\n    if (this.segmentIndex < other.segmentIndex) return -1\n    if (this.segmentIndex > other.segmentIndex) return 1\n    if (this.coord.equals2D(other.coord)) return 0\n    if (!this._isInterior) return -1\n    if (!other._isInterior) return 1\n    return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n  }\n  isEndPoint(maxSegmentIndex) {\n    if (this.segmentIndex === 0 && !this._isInterior) return true\n    if (this.segmentIndex === maxSegmentIndex) return true\n    return false\n  }\n  toString() {\n    return this.segmentIndex + ':' + this.coord.toString()\n  }\n  isInterior() {\n    return this._isInterior\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import Assert from '../util/Assert.js'\nexport default class SegmentPointComparator {\n  static relativeSign(x0, x1) {\n    if (x0 < x1) return -1\n    if (x0 > x1) return 1\n    return 0\n  }\n  static compareValue(compareSign0, compareSign1) {\n    if (compareSign0 < 0) return -1\n    if (compareSign0 > 0) return 1\n    if (compareSign1 < 0) return -1\n    if (compareSign1 > 0) return 1\n    return 0\n  }\n  static compare(octant, p0, p1) {\n    if (p0.equals2D(p1)) return 0\n    const xSign = SegmentPointComparator.relativeSign(p0.x, p1.x)\n    const ySign = SegmentPointComparator.relativeSign(p0.y, p1.y)\n    switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    }\n    Assert.shouldNeverReachHere('invalid octant value')\n    return 0\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class Octant {\n  static octant() {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      const dx = arguments[0], dy = arguments[1]\n      if (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )')\n      const adx = Math.abs(dx)\n      const ady = Math.abs(dy)\n      if (dx >= 0) \n        if (dy >= 0) \n          if (adx >= ady) return 0; else return 1\n        else \n          if (adx >= ady) return 7; else return 6\n        \n      else \n        if (dy >= 0) \n          if (adx >= ady) return 3; else return 2\n        else \n          if (adx >= ady) return 4; else return 5\n        \n      \n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      const p0 = arguments[0], p1 = arguments[1]\n      const dx = p1.x - p0.x\n      const dy = p1.y - p0.y\n      if (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0)\n      return Octant.octant(dx, dy)\n    }\n  }\n}\n","import SegmentString from './SegmentString.js'\nexport default class NodableSegmentString {\n  addIntersection(intPt, segmentIndex) {}\n  get interfaces_() {\n    return [SegmentString]\n  }\n}\n","export default class SegmentString {\n  getCoordinates() {}\n  size() {}\n  getCoordinate(i) {}\n  isClosed() {}\n  setData(data) {}\n  getData() {}\n}\n","export default class Noder {\n  getNodedSubstrings() {}\n  computeNodes(segStrings) {}\n}\n","import NodingValidator from '../NodingValidator.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport MCIndexNoder from '../MCIndexNoder.js'\nimport NodedSegmentString from '../NodedSegmentString.js'\nimport HotPixel from './HotPixel.js'\nimport Exception from '../../../../../java/lang/Exception.js'\nimport MCIndexPointSnapper from './MCIndexPointSnapper.js'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector.js'\nimport InteriorIntersectionFinderAdder from '../InteriorIntersectionFinderAdder.js'\nimport Collection from '../../../../../java/util/Collection.js'\nimport Noder from '../Noder.js'\nexport default class MCIndexSnapRounder {\n  constructor() {\n    MCIndexSnapRounder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pm = null\n    this._li = null\n    this._scaleFactor = null\n    this._noder = null\n    this._pointSnapper = null\n    this._nodedSegStrings = null\n    const pm = arguments[0]\n    this._pm = pm\n    this._li = new RobustLineIntersector()\n    this._li.setPrecisionModel(pm)\n    this._scaleFactor = pm.getScale()\n  }\n  checkCorrectness(inputSegmentStrings) {\n    const resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings)\n    const nv = new NodingValidator(resultSegStrings)\n    try {\n      nv.checkValid()\n    } catch (ex) {\n      if (ex instanceof Exception) \n        ex.printStackTrace()\n      else throw ex\n    } finally {}\n  }\n  getNodedSubstrings() {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  }\n  snapRound(segStrings, li) {\n    const intersections = this.findInteriorIntersections(segStrings, li)\n    this.computeIntersectionSnaps(intersections)\n    this.computeVertexSnaps(segStrings)\n  }\n  findInteriorIntersections(segStrings, li) {\n    const intFinderAdder = new InteriorIntersectionFinderAdder(li)\n    this._noder.setSegmentIntersector(intFinderAdder)\n    this._noder.computeNodes(segStrings)\n    return intFinderAdder.getInteriorIntersections()\n  }\n  computeVertexSnaps() {\n    if (hasInterface(arguments[0], Collection)) {\n      const edges = arguments[0]\n      for (let i0 = edges.iterator(); i0.hasNext(); ) {\n        const edge0 = i0.next()\n        this.computeVertexSnaps(edge0)\n      }\n    } else if (arguments[0] instanceof NodedSegmentString) {\n      const e = arguments[0]\n      const pts0 = e.getCoordinates()\n      for (let i = 0; i < pts0.length; i++) {\n        const hotPixel = new HotPixel(pts0[i], this._scaleFactor, this._li)\n        const isNodeAdded = this._pointSnapper.snap(hotPixel, e, i)\n        if (isNodeAdded) \n          e.addIntersection(pts0[i], i)\n        \n      }\n    }\n  }\n  computeNodes(inputSegmentStrings) {\n    this._nodedSegStrings = inputSegmentStrings\n    this._noder = new MCIndexNoder()\n    this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex())\n    this.snapRound(inputSegmentStrings, this._li)\n  }\n  computeIntersectionSnaps(snapPts) {\n    for (let it = snapPts.iterator(); it.hasNext(); ) {\n      const snapPt = it.next()\n      const hotPixel = new HotPixel(snapPt, this._scaleFactor, this._li)\n      this._pointSnapper.snap(hotPixel)\n    }\n  }\n  get interfaces_() {\n    return [Noder]\n  }\n}\n","import GeometryFactory from '../geom/GeometryFactory.js'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector.js'\nimport RuntimeException from '../../../../java/lang/RuntimeException.js'\nexport default class NodingValidator {\n  constructor() {\n    NodingValidator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._segStrings = null\n    const segStrings = arguments[0]\n    this._segStrings = segStrings\n  }\n  checkEndPtVertexIntersections() {\n    if (arguments.length === 0) {\n      for (let i = this._segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        const pts = ss.getCoordinates()\n        this.checkEndPtVertexIntersections(pts[0], this._segStrings)\n        this.checkEndPtVertexIntersections(pts[pts.length - 1], this._segStrings)\n      }\n    } else if (arguments.length === 2) {\n      const testPt = arguments[0], segStrings = arguments[1]\n      for (let i = segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        const pts = ss.getCoordinates()\n        for (let j = 1; j < pts.length - 1; j++) \n          if (pts[j].equals(testPt)) throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt)\n        \n      }\n    }\n  }\n  checkInteriorIntersections() {\n    if (arguments.length === 0) {\n      for (let i = this._segStrings.iterator(); i.hasNext(); ) {\n        const ss0 = i.next()\n        for (let j = this._segStrings.iterator(); j.hasNext(); ) {\n          const ss1 = j.next()\n          this.checkInteriorIntersections(ss0, ss1)\n        }\n      }\n    } else if (arguments.length === 2) {\n      const ss0 = arguments[0], ss1 = arguments[1]\n      const pts0 = ss0.getCoordinates()\n      const pts1 = ss1.getCoordinates()\n      for (let i0 = 0; i0 < pts0.length - 1; i0++) \n        for (let i1 = 0; i1 < pts1.length - 1; i1++) \n          this.checkInteriorIntersections(ss0, i0, ss1, i1)\n        \n      \n    } else if (arguments.length === 4) {\n      const e0 = arguments[0], segIndex0 = arguments[1], e1 = arguments[2], segIndex1 = arguments[3]\n      if (e0 === e1 && segIndex0 === segIndex1) return null\n      const p00 = e0.getCoordinates()[segIndex0]\n      const p01 = e0.getCoordinates()[segIndex0 + 1]\n      const p10 = e1.getCoordinates()[segIndex1]\n      const p11 = e1.getCoordinates()[segIndex1 + 1]\n      this._li.computeIntersection(p00, p01, p10, p11)\n      if (this._li.hasIntersection()) \n        if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) \n          throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n        \n      \n    }\n  }\n  checkValid() {\n    this.checkEndPtVertexIntersections()\n    this.checkInteriorIntersections()\n    this.checkCollapses()\n  }\n  checkCollapses() {\n    if (arguments.length === 0) {\n      for (let i = this._segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        this.checkCollapses(ss)\n      }\n    } else if (arguments.length === 1) {\n      const ss = arguments[0]\n      const pts = ss.getCoordinates()\n      for (let i = 0; i < pts.length - 2; i++) \n        this.checkCollapse(pts[i], pts[i + 1], pts[i + 2])\n      \n    }\n  }\n  hasInteriorIntersection(li, p0, p1) {\n    for (let i = 0; i < li.getIntersectionNum(); i++) {\n      const intPt = li.getIntersection(i)\n      if (!(intPt.equals(p0) || intPt.equals(p1))) return true\n    }\n    return false\n  }\n  checkCollapse(p0, p1, p2) {\n    if (p0.equals(p2)) throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2]))\n  }\n}\nNodingValidator.fact = new GeometryFactory()\n","import STRtree from '../index/strtree/STRtree.js'\nimport NodedSegmentString from './NodedSegmentString.js'\nimport MonotoneChainOverlapAction from '../index/chain/MonotoneChainOverlapAction.js'\nimport MonotoneChainBuilder from '../index/chain/MonotoneChainBuilder.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport SinglePassNoder from './SinglePassNoder.js'\nexport default class MCIndexNoder extends SinglePassNoder {\n  constructor() {\n    super()\n    MCIndexNoder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._monoChains = new ArrayList()\n    this._index = new STRtree()\n    this._idCounter = 0\n    this._nodedSegStrings = null\n    this._nOverlaps = 0\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const si = arguments[0]\n      SinglePassNoder.constructor_.call(this, si)\n    }\n  }\n  getMonotoneChains() {\n    return this._monoChains\n  }\n  getNodedSubstrings() {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  }\n  getIndex() {\n    return this._index\n  }\n  add(segStr) {\n    const segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr)\n    for (let i = segChains.iterator(); i.hasNext(); ) {\n      const mc = i.next()\n      mc.setId(this._idCounter++)\n      this._index.insert(mc.getEnvelope(), mc)\n      this._monoChains.add(mc)\n    }\n  }\n  computeNodes(inputSegStrings) {\n    this._nodedSegStrings = inputSegStrings\n    for (let i = inputSegStrings.iterator(); i.hasNext(); ) \n      this.add(i.next())\n    \n    this.intersectChains()\n  }\n  intersectChains() {\n    const overlapAction = new SegmentOverlapAction(this._segInt)\n    for (let i = this._monoChains.iterator(); i.hasNext(); ) {\n      const queryChain = i.next()\n      const overlapChains = this._index.query(queryChain.getEnvelope())\n      for (let j = overlapChains.iterator(); j.hasNext(); ) {\n        const testChain = j.next()\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction)\n          this._nOverlaps++\n        }\n        if (this._segInt.isDone()) return null\n      }\n    }\n  }\n}\nclass SegmentOverlapAction extends MonotoneChainOverlapAction {\n  constructor() {\n    super()\n    SegmentOverlapAction.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._si = null\n    const si = arguments[0]\n    this._si = si\n  }\n  overlap() {\n    if (arguments.length === 4) {\n      const mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3]\n      const ss1 = mc1.getContext()\n      const ss2 = mc2.getContext()\n      this._si.processIntersections(ss1, start1, ss2, start2)\n    } else {\n      return super.overlap.apply(this, arguments)\n    }\n  }\n}\nMCIndexNoder.SegmentOverlapAction = SegmentOverlapAction\n","import ItemBoundable from './ItemBoundable.js'\nimport PriorityQueue from '../../../../../java/util/PriorityQueue.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport Double from '../../../../../java/lang/Double.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport SpatialIndex from '../SpatialIndex.js'\nimport AbstractNode from './AbstractNode.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport BoundablePair from './BoundablePair.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Comparator from '../../../../../java/util/Comparator.js'\nimport Envelope from '../../geom/Envelope.js'\nimport Assert from '../../util/Assert.js'\nimport AbstractSTRtree from './AbstractSTRtree.js'\nimport ItemDistance from './ItemDistance.js'\nexport default class STRtree extends AbstractSTRtree {\n  constructor() {\n    super()\n    STRtree.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {\n      STRtree.constructor_.call(this, STRtree.DEFAULT_NODE_CAPACITY)\n    } else if (arguments.length === 1) {\n      const nodeCapacity = arguments[0]\n      AbstractSTRtree.constructor_.call(this, nodeCapacity)\n    }\n  }\n  static getItems(kNearestNeighbors) {\n    const items = new Array(kNearestNeighbors.size()).fill(null)\n    let count = 0\n    while (!kNearestNeighbors.isEmpty()) {\n      const bp = kNearestNeighbors.poll()\n      items[count] = bp.getBoundable(0).getItem()\n      count++\n    }\n    return items\n  }\n  static avg(a, b) {\n    return (a + b) / 2\n  }\n  static centreY(e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  }\n  static centreX(e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  }\n  size() {\n    if (arguments.length === 0) \n      return super.size.call(this)\n    else return super.size.apply(this, arguments)\n  }\n  insert() {\n    if (arguments.length === 2 && (arguments[1] instanceof Object && arguments[0] instanceof Envelope)) {\n      const itemEnv = arguments[0], item = arguments[1]\n      if (itemEnv.isNull()) \n        return null\n      \n      super.insert.call(this, itemEnv, item)\n    } else {\n      return super.insert.apply(this, arguments)\n    }\n  }\n  getIntersectsOp() {\n    return STRtree.intersectsOp\n  }\n  verticalSlices(childBoundables, sliceCount) {\n    const sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount))\n    const slices = new Array(sliceCount).fill(null)\n    const i = childBoundables.iterator()\n    for (let j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList()\n      let boundablesAddedToSlice = 0\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        const childBoundable = i.next()\n        slices[j].add(childBoundable)\n        boundablesAddedToSlice++\n      }\n    }\n    return slices\n  }\n  query() {\n    if (arguments.length === 1) {\n      const searchEnv = arguments[0]\n      return super.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      const searchEnv = arguments[0], visitor = arguments[1]\n      super.query.call(this, searchEnv, visitor)\n    }\n  }\n  getComparator() {\n    return STRtree.yComparator\n  }\n  createParentBoundablesFromVerticalSlice(childBoundables, newLevel) {\n    return super.createParentBoundables.call(this, childBoundables, newLevel)\n  }\n  remove() {\n    if (arguments.length === 2 && (arguments[1] instanceof Object && arguments[0] instanceof Envelope)) {\n      const itemEnv = arguments[0], item = arguments[1]\n      return super.remove.call(this, itemEnv, item)\n    } else {\n      return super.remove.apply(this, arguments)\n    }\n  }\n  depth() {\n    if (arguments.length === 0) \n      return super.depth.call(this)\n    else return super.depth.apply(this, arguments)\n  }\n  createParentBoundables(childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty())\n    const minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()))\n    const sortedChildBoundables = new ArrayList(childBoundables)\n    Collections.sort(sortedChildBoundables, STRtree.xComparator)\n    const verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))))\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  }\n  nearestNeighbour() {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        const itemDist = arguments[0]\n        if (this.isEmpty()) return null\n        const bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist)\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        const initBndPair = arguments[0]\n        let distanceLowerBound = Double.POSITIVE_INFINITY\n        let minPair = null\n        const priQ = new PriorityQueue()\n        priQ.add(initBndPair)\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          const bndPair = priQ.poll()\n          const pairDistance = bndPair.getDistance()\n          if (pairDistance >= distanceLowerBound) break\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = pairDistance\n            minPair = bndPair\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound)\n          }\n        }\n        if (minPair === null) return null\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 2) {\n      const tree = arguments[0], itemDist = arguments[1]\n      if (this.isEmpty() || tree.isEmpty()) return null\n      const bp = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist)\n      return this.nearestNeighbour(bp)\n    } else if (arguments.length === 3) {\n      const env = arguments[0], item = arguments[1], itemDist = arguments[2]\n      const bnd = new ItemBoundable(env, item)\n      const bp = new BoundablePair(this.getRoot(), bnd, itemDist)\n      return this.nearestNeighbour(bp)[0]\n    } else if (arguments.length === 4) {\n      const env = arguments[0], item = arguments[1], itemDist = arguments[2], k = arguments[3]\n      const bnd = new ItemBoundable(env, item)\n      const bp = new BoundablePair(this.getRoot(), bnd, itemDist)\n      return this.nearestNeighbourK(bp, k)\n    }\n  }\n  isWithinDistance() {\n    if (arguments.length === 2) {\n      const initBndPair = arguments[0], maxDistance = arguments[1]\n      let distanceUpperBound = Double.POSITIVE_INFINITY\n      const priQ = new PriorityQueue()\n      priQ.add(initBndPair)\n      while (!priQ.isEmpty()) {\n        const bndPair = priQ.poll()\n        const pairDistance = bndPair.getDistance()\n        if (pairDistance > maxDistance) return false\n        if (bndPair.maximumDistance() <= maxDistance) return true\n        if (bndPair.isLeaves()) {\n          distanceUpperBound = pairDistance\n          if (distanceUpperBound <= maxDistance) return true\n        } else {\n          bndPair.expandToQueue(priQ, distanceUpperBound)\n        }\n      }\n      return false\n    } else if (arguments.length === 3) {\n      const tree = arguments[0], itemDist = arguments[1], maxDistance = arguments[2]\n      const bp = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist)\n      return this.isWithinDistance(bp, maxDistance)\n    }\n  }\n  createParentBoundablesFromVerticalSlices(verticalSlices, newLevel) {\n    Assert.isTrue(verticalSlices.length > 0)\n    const parentBoundables = new ArrayList()\n    for (let i = 0; i < verticalSlices.length; i++) \n      parentBoundables.addAll(this.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel))\n    \n    return parentBoundables\n  }\n  nearestNeighbourK() {\n    if (arguments.length === 2) {\n      const initBndPair = arguments[0], k = arguments[1]\n      return this.nearestNeighbourK(initBndPair, Double.POSITIVE_INFINITY, k)\n    } else if (arguments.length === 3) {\n      const initBndPair = arguments[0], maxDistance = arguments[1], k = arguments[2]\n      let distanceLowerBound = maxDistance\n      const priQ = new PriorityQueue()\n      priQ.add(initBndPair)\n      const kNearestNeighbors = new PriorityQueue()\n      while (!priQ.isEmpty() && distanceLowerBound >= 0.0) {\n        const bndPair = priQ.poll()\n        const pairDistance = bndPair.getDistance()\n        if (pairDistance >= distanceLowerBound) \n          break\n        \n        if (bndPair.isLeaves()) \n          if (kNearestNeighbors.size() < k) {\n            kNearestNeighbors.add(bndPair)\n          } else {\n            const bp1 = kNearestNeighbors.peek()\n            if (bp1.getDistance() > pairDistance) {\n              kNearestNeighbors.poll()\n              kNearestNeighbors.add(bndPair)\n            }\n            const bp2 = kNearestNeighbors.peek()\n            distanceLowerBound = bp2.getDistance()\n          }\n        else \n          bndPair.expandToQueue(priQ, distanceLowerBound)\n        \n      }\n      return STRtree.getItems(kNearestNeighbors)\n    }\n  }\n  createNode(level) {\n    return new STRtreeNode(level)\n  }\n  get interfaces_() {\n    return [SpatialIndex, Serializable]\n  }\n}\nclass STRtreeNode extends AbstractNode {\n  constructor() {\n    super()\n    STRtreeNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const level = arguments[0]\n    AbstractNode.constructor_.call(this, level)\n  }\n  computeBounds() {\n    let bounds = null\n    for (let i = this.getChildBoundables().iterator(); i.hasNext(); ) {\n      const childBoundable = i.next()\n      if (bounds === null) \n        bounds = new Envelope(childBoundable.getBounds())\n      else \n        bounds.expandToInclude(childBoundable.getBounds())\n      \n    }\n    return bounds\n  }\n}\nSTRtree.STRtreeNode = STRtreeNode\nSTRtree.xComparator = new (class {\n  get interfaces_() {\n    return [Comparator]\n  }\n  compare(o1, o2) {\n    return AbstractSTRtree.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n  }\n})()\nSTRtree.yComparator = new (class {\n  get interfaces_() {\n    return [Comparator]\n  }\n  compare(o1, o2) {\n    return AbstractSTRtree.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n  }\n})()\nSTRtree.intersectsOp = new (class {\n  get interfaces_() {\n    return [IntersectsOp]\n  }\n  intersects(aBounds, bBounds) {\n    return aBounds.intersects(bBounds)\n  }\n})()\nSTRtree.DEFAULT_NODE_CAPACITY = 10\n","import Boundable from './Boundable.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nexport default class ItemBoundable {\n  constructor() {\n    ItemBoundable.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._bounds = null\n    this._item = null\n    const bounds = arguments[0], item = arguments[1]\n    this._bounds = bounds\n    this._item = item\n  }\n  getItem() {\n    return this._item\n  }\n  getBounds() {\n    return this._bounds\n  }\n  get interfaces_() {\n    return [Boundable, Serializable]\n  }\n}\n","export default class Boundable {\n  getBounds() {}\n}\n","import FastPriorityQueue from 'fastpriorityqueue'\n\nexport default class PriorityQueue {\n\n  constructor() {\n    this._fpQueue = new FastPriorityQueue((a,b) => a.compareTo(b) < 0)\n  }\n\n  poll() {\n    return this._fpQueue.poll()\n  }\n  size() {\n    return this._fpQueue.size\n  }\n  clear() {\n    this._fpQueue = new FastPriorityQueue()\n  }\n  peek() {\n    return this._fpQueue.peek()\n  }\n  remove() {\n    return this._fpQueue.poll()\n  }\n  isEmpty() {\n    return this._fpQueue.isEmpty()\n  }\n  add(x) {\n    this._fpQueue.add(x)\n  }\n}\n","/**\n * FastPriorityQueue.js : a fast heap-based priority queue  in JavaScript.\n * (c) the authors\n * Licensed under the Apache License, Version 2.0.\n *\n * Speed-optimized heap-based priority queue for modern browsers and JavaScript engines.\n *\n * Usage :\n         Installation (in shell, if you use node):\n         $ npm install fastpriorityqueue\n\n         Running test program (in JavaScript):\n\n         // var FastPriorityQueue = require(\"fastpriorityqueue\");// in node\n         var x = new FastPriorityQueue();\n         x.add(1);\n         x.add(0);\n         x.add(5);\n         x.add(4);\n         x.add(3);\n         x.peek(); // should return 0, leaves x unchanged\n         x.size; // should return 5, leaves x unchanged\n         while(!x.isEmpty()) {\n           console.log(x.poll());\n         } // will print 0 1 3 4 5\n         x.trim(); // (optional) optimizes memory usage\n */\n'use strict';\n\nvar defaultcomparator = function(a, b) {\n  return a < b;\n};\n\n\n// construct a new priority queue\n// the provided comparator function should take a, b and return *true* when a < b\nfunction FastPriorityQueue(comparator) {\n  if (!(this instanceof FastPriorityQueue)) return new FastPriorityQueue(comparator);\n  this.array = [];\n  this.size = 0;\n  this.compare = comparator || defaultcomparator;\n}\n\n// copy the priority queue into another, and return it. Queue items are shallow-copied.\n// Runs in `O(n)` time.\nFastPriorityQueue.prototype.clone = function() {\n  var fpq = new FastPriorityQueue(this.compare);\n  fpq.size = this.size;\n  fpq.array = this.array.slice(0, this.size);\n  return fpq;\n};\n\n// add an element into the queue\n// runs in `O(log n)` time\nFastPriorityQueue.prototype.add = function(myval) {\n  var i = this.size;\n  this.array[this.size] = myval;\n  this.size += 1;\n  var p;\n  var ap;\n  while (i > 0) {\n    p = (i - 1) >> 1;\n    ap = this.array[p];\n    if (!this.compare(myval, ap)) {\n      break;\n    }\n    this.array[i] = ap;\n    i = p;\n  }\n  this.array[i] = myval;\n};\n\n// replace the content of the heap by provided array and \"heapify it\"\nFastPriorityQueue.prototype.heapify = function(arr) {\n  this.array = arr;\n  this.size = arr.length;\n  var i;\n  for (i = this.size >> 1; i >= 0; i--) {\n    this._percolateDown(i);\n  }\n};\n\n// for internal use\nFastPriorityQueue.prototype._percolateUp = function(i, force) {\n  var myval = this.array[i];\n  var p;\n  var ap;\n  while (i > 0) {\n    p = (i - 1) >> 1;\n    ap = this.array[p];\n    // force will skip the compare\n    if (!force && !this.compare(myval, ap)) {\n      break;\n    }\n    this.array[i] = ap;\n    i = p;\n  }\n  this.array[i] = myval;\n};\n\n// for internal use\nFastPriorityQueue.prototype._percolateDown = function(i) {\n  var size = this.size;\n  var hsize = this.size >>> 1;\n  var ai = this.array[i];\n  var l;\n  var r;\n  var bestc;\n  while (i < hsize) {\n    l = (i << 1) + 1;\n    r = l + 1;\n    bestc = this.array[l];\n    if (r < size) {\n      if (this.compare(this.array[r], bestc)) {\n        l = r;\n        bestc = this.array[r];\n      }\n    }\n    if (!this.compare(bestc, ai)) {\n      break;\n    }\n    this.array[i] = bestc;\n    i = l;\n  }\n  this.array[i] = ai;\n};\n\n// internal\n// _removeAt(index) will remove the item at the given index from the queue,\n// retaining balance. returns the removed item, or undefined if nothing is removed.\nFastPriorityQueue.prototype._removeAt = function(index) {\n  if (index > this.size - 1 || index < 0) return undefined;\n\n  // impl1:\n  //this.array.splice(index, 1);\n  //this.heapify(this.array);\n  // impl2:\n  this._percolateUp(index, true);\n  return this.poll();\n};\n\n// remove(myval) will remove an item matching the provided value from the\n// queue, checked for equality by using the queue's comparator.\n// return true if removed, false otherwise.\nFastPriorityQueue.prototype.remove = function(myval) {\n  for (var i = 0; i < this.size; i++) {\n    if (!this.compare(this.array[i], myval) && !this.compare(myval, this.array[i])) {\n      // items match, comparator returns false both ways, remove item\n      this._removeAt(i);\n      return true;\n    }\n  }\n  return false;\n};\n\n// removeOne(callback) will execute the callback function for each item of the queue\n// and will remove the first item for which the callback will return true.\n// return the removed item, or undefined if nothing is removed.\nFastPriorityQueue.prototype.removeOne = function(callback) {\n  if (typeof callback !== \"function\") {\n    return undefined;\n  }\n  for (var i = 0; i < this.size; i++) {\n    if (callback(this.array[i])) {\n      return this._removeAt(i);\n    }\n  }\n};\n\n// remove(callback[, limit]) will execute the callback function for each item of\n// the queue and will remove each item for which the callback returns true, up to\n// a max limit of removed items if specified or no limit if unspecified.\n// return an array containing the removed items.\n// The callback function should be a pure function.\nFastPriorityQueue.prototype.removeMany = function(callback, limit) {\n  // Skip unnecessary processing for edge cases\n  if (typeof callback !== \"function\" || this.size < 1) {\n    return [];\n  }\n  limit = limit ? Math.min(limit, this.size) : this.size;\n\n  // Prepare the results container to hold up to the results limit\n  var resultSize = 0;\n  var result = new Array(limit);\n\n  // Prepare a temporary array to hold items we'll traverse through and need to keep\n  var tmpSize = 0;\n  var tmp = new Array(this.size);\n\n  while (resultSize < limit && !this.isEmpty()) {\n    // Dequeue items into either the results or our temporary array\n    var item = this.poll();\n    if (callback(item)) {\n      result[resultSize++] = item;\n    } else {\n      tmp[tmpSize++] = item;\n    }\n  }\n  // Update the result array with the exact number of results\n  result.length = resultSize;\n\n  // Re-add all the items we can keep\n  var i = 0;\n  while (i < tmpSize) {\n    this.add(tmp[i++]);\n  }\n\n  return result;\n};\n\n// Look at the top of the queue (one of the smallest elements) without removing it\n// executes in constant time\n//\n// Calling peek on an empty priority queue returns\n// the \"undefined\" value.\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/undefined\n//\nFastPriorityQueue.prototype.peek = function() {\n  if (this.size == 0) return undefined;\n  return this.array[0];\n};\n\n// remove the element on top of the heap (one of the smallest elements)\n// runs in logarithmic time\n//\n// If the priority queue is empty, the function returns the\n// \"undefined\" value.\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/undefined\n//\n// For long-running and large priority queues, or priority queues\n// storing large objects, you may  want to call the trim function\n// at strategic times to recover allocated memory.\nFastPriorityQueue.prototype.poll = function() {\n  if (this.size == 0) return undefined;\n  var ans = this.array[0];\n  if (this.size > 1) {\n    this.array[0] = this.array[--this.size];\n    this._percolateDown(0);\n  } else {\n    this.size -= 1;\n  }\n  return ans;\n};\n\n// This function adds the provided value to the heap, while removing\n// and returning one of the smallest elements (like poll). The size of the queue\n// thus remains unchanged.\nFastPriorityQueue.prototype.replaceTop = function(myval) {\n  if (this.size == 0) return undefined;\n  var ans = this.array[0];\n  this.array[0] = myval;\n  this._percolateDown(0);\n  return ans;\n};\n\n// recover unused memory (for long-running priority queues)\nFastPriorityQueue.prototype.trim = function() {\n  this.array = this.array.slice(0, this.size);\n};\n\n// Check whether the heap is empty\nFastPriorityQueue.prototype.isEmpty = function() {\n  return this.size === 0;\n};\n\n// iterate over the items in order, pass a callback that receives (item, index) as args.\n// TODO once we transpile, uncomment\n// if (Symbol && Symbol.iterator) {\n//   FastPriorityQueue.prototype[Symbol.iterator] = function*() {\n//     if (this.isEmpty()) return;\n//     var fpq = this.clone();\n//     while (!fpq.isEmpty()) {\n//       yield fpq.poll();\n//     }\n//   };\n// }\nFastPriorityQueue.prototype.forEach = function(callback) {\n  if (this.isEmpty() || typeof callback != 'function') return;\n  var i = 0;\n  var fpq = this.clone();\n  while (!fpq.isEmpty()) {\n    callback(fpq.poll(), i++);\n  }\n};\n\n// return the k 'smallest' elements of the queue as an array,\n// runs in O(k log k) time, the elements are not removed\n// from the priority queue.\nFastPriorityQueue.prototype.kSmallest = function(k) {\n  if ((this.size == 0) || (k<=0)) return [];\n  k = Math.min(this.size, k);\n  const newSize = Math.min(this.size, (2 ** (k - 1)) + 1);\n  if (newSize < 2) { return [this.peek()] }\n\n  const fpq = new FastPriorityQueue(this.compare);\n  fpq.size = newSize;\n  fpq.array = this.array.slice(0, newSize);\n\n  const smallest = new Array(k);\n  for (let i = 0; i < k; i++) {\n    smallest[i] = fpq.poll();\n  }\n  return smallest;\n}\n\nmodule.exports = FastPriorityQueue;\n","export default class SpatialIndex {\n  query() {\n    if (arguments.length === 1) {\n      const searchEnv = arguments[0]\n    } else if (arguments.length === 2) {\n      const searchEnv = arguments[0], visitor = arguments[1]\n    }\n  }\n  insert(itemEnv, item) {}\n  remove(itemEnv, item) {}\n}\n","import Boundable from './Boundable.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport Assert from '../../util/Assert.js'\nexport default class AbstractNode {\n  constructor() {\n    AbstractNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._childBoundables = new ArrayList()\n    this._bounds = null\n    this._level = null\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const level = arguments[0]\n      this._level = level\n    }\n  }\n  getLevel() {\n    return this._level\n  }\n  addChildBoundable(childBoundable) {\n    Assert.isTrue(this._bounds === null)\n    this._childBoundables.add(childBoundable)\n  }\n  isEmpty() {\n    return this._childBoundables.isEmpty()\n  }\n  getBounds() {\n    if (this._bounds === null) \n      this._bounds = this.computeBounds()\n    \n    return this._bounds\n  }\n  size() {\n    return this._childBoundables.size()\n  }\n  getChildBoundables() {\n    return this._childBoundables\n  }\n  get interfaces_() {\n    return [Boundable, Serializable]\n  }\n}\n","import IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport AbstractNode from './AbstractNode.js'\nimport EnvelopeDistance from './EnvelopeDistance.js'\nimport Comparable from '../../../../../java/lang/Comparable.js'\nexport default class BoundablePair {\n  constructor() {\n    BoundablePair.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._boundable1 = null\n    this._boundable2 = null\n    this._distance = null\n    this._itemDistance = null\n    const boundable1 = arguments[0], boundable2 = arguments[1], itemDistance = arguments[2]\n    this._boundable1 = boundable1\n    this._boundable2 = boundable2\n    this._itemDistance = itemDistance\n    this._distance = this.distance()\n  }\n  static area(b) {\n    return b.getBounds().getArea()\n  }\n  static isComposite(item) {\n    return item instanceof AbstractNode\n  }\n  maximumDistance() {\n    return EnvelopeDistance.maximumDistance(this._boundable1.getBounds(), this._boundable2.getBounds())\n  }\n  expandToQueue(priQ, minDistance) {\n    const isComp1 = BoundablePair.isComposite(this._boundable1)\n    const isComp2 = BoundablePair.isComposite(this._boundable2)\n    if (isComp1 && isComp2) {\n      if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n        this.expand(this._boundable1, this._boundable2, false, priQ, minDistance)\n        return null\n      } else {\n        this.expand(this._boundable2, this._boundable1, true, priQ, minDistance)\n        return null\n      }\n    } else if (isComp1) {\n      this.expand(this._boundable1, this._boundable2, false, priQ, minDistance)\n      return null\n    } else if (isComp2) {\n      this.expand(this._boundable2, this._boundable1, true, priQ, minDistance)\n      return null\n    }\n    throw new IllegalArgumentException('neither boundable is composite')\n  }\n  isLeaves() {\n    return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n  }\n  getBoundable(i) {\n    if (i === 0) return this._boundable1\n    return this._boundable2\n  }\n  getDistance() {\n    return this._distance\n  }\n  distance() {\n    if (this.isLeaves()) \n      return this._itemDistance.distance(this._boundable1, this._boundable2)\n    \n    return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n  }\n  compareTo(o) {\n    const nd = o\n    if (this._distance < nd._distance) return -1\n    if (this._distance > nd._distance) return 1\n    return 0\n  }\n  expand(bndComposite, bndOther, isFlipped, priQ, minDistance) {\n    const children = bndComposite.getChildBoundables()\n    for (let i = children.iterator(); i.hasNext(); ) {\n      const child = i.next()\n      let bp = null\n      if (isFlipped) \n        bp = new BoundablePair(bndOther, child, this._itemDistance)\n      else \n        bp = new BoundablePair(child, bndOther, this._itemDistance)\n      \n      if (bp.getDistance() < minDistance) \n        priQ.add(bp)\n      \n    }\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","export default class EnvelopeDistance {\n  static distance(x1, y1, x2, y2) {\n    const dx = x2 - x1\n    const dy = y2 - y1\n    return Math.sqrt(dx * dx + dy * dy)\n  }\n  static maximumDistance(env1, env2) {\n    const minx = Math.min(env1.getMinX(), env2.getMinX())\n    const miny = Math.min(env1.getMinY(), env2.getMinY())\n    const maxx = Math.max(env1.getMaxX(), env2.getMaxX())\n    const maxy = Math.max(env1.getMaxY(), env2.getMaxY())\n    return EnvelopeDistance.distance(minx, miny, maxx, maxy)\n  }\n  static minMaxDistance(a, b) {\n    const aminx = a.getMinX()\n    const aminy = a.getMinY()\n    const amaxx = a.getMaxX()\n    const amaxy = a.getMaxY()\n    const bminx = b.getMinX()\n    const bminy = b.getMinY()\n    const bmaxx = b.getMaxX()\n    const bmaxy = b.getMaxY()\n    let dist = EnvelopeDistance.maxDistance(aminx, aminy, aminx, amaxy, bminx, bminy, bminx, bmaxy)\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, aminx, amaxy, bminx, bminy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, aminx, amaxy, bmaxx, bmaxy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, aminx, amaxy, bmaxx, bmaxy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, amaxx, aminy, bminx, bminy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, amaxx, aminy, bminx, bminy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, amaxx, aminy, bmaxx, bmaxy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, amaxx, aminy, bmaxx, bmaxy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, aminx, amaxy, bminx, bminy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, aminx, amaxy, bminx, bminy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, aminx, amaxy, bmaxx, bmaxy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, aminx, amaxy, bmaxx, bmaxy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, amaxx, aminy, bminx, bminy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, amaxx, aminy, bminx, bminy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, amaxx, aminy, bmaxx, bmaxy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, amaxx, aminy, bmaxx, bmaxy, bmaxx, bminy))\n    return dist\n  }\n  static maxDistance(ax1, ay1, ax2, ay2, bx1, by1, bx2, by2) {\n    let dist = EnvelopeDistance.distance(ax1, ay1, bx1, by1)\n    dist = Math.max(dist, EnvelopeDistance.distance(ax1, ay1, bx2, by2))\n    dist = Math.max(dist, EnvelopeDistance.distance(ax2, ay2, bx1, by1))\n    dist = Math.max(dist, EnvelopeDistance.distance(ax2, ay2, bx2, by2))\n    return dist\n  }\n}\n","import ItemBoundable from './ItemBoundable.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport ItemVisitor from '../ItemVisitor.js'\nimport AbstractNode from './AbstractNode.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport Assert from '../../util/Assert.js'\nimport List from '../../../../../java/util/List.js'\nexport default class AbstractSTRtree {\n  constructor() {\n    AbstractSTRtree.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._root = null\n    this._built = false\n    this._itemBoundables = new ArrayList()\n    this._nodeCapacity = null\n    if (arguments.length === 0) {\n      AbstractSTRtree.constructor_.call(this, AbstractSTRtree.DEFAULT_NODE_CAPACITY)\n    } else if (arguments.length === 1) {\n      const nodeCapacity = arguments[0]\n      Assert.isTrue(nodeCapacity > 1, 'Node capacity must be greater than 1')\n      this._nodeCapacity = nodeCapacity\n    }\n  }\n  static compareDoubles(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0\n  }\n  queryInternal() {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      const searchBounds = arguments[0], node = arguments[1], visitor = arguments[2]\n      const childBoundables = node.getChildBoundables()\n      for (let i = 0; i < childBoundables.size(); i++) {\n        const childBoundable = childBoundables.get(i)\n        if (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) \n          continue\n        \n        if (childBoundable instanceof AbstractNode) \n          this.queryInternal(searchBounds, childBoundable, visitor)\n        else if (childBoundable instanceof ItemBoundable) \n          visitor.visitItem(childBoundable.getItem())\n        else \n          Assert.shouldNeverReachHere()\n        \n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      const searchBounds = arguments[0], node = arguments[1], matches = arguments[2]\n      const childBoundables = node.getChildBoundables()\n      for (let i = 0; i < childBoundables.size(); i++) {\n        const childBoundable = childBoundables.get(i)\n        if (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) \n          continue\n        \n        if (childBoundable instanceof AbstractNode) \n          this.queryInternal(searchBounds, childBoundable, matches)\n        else if (childBoundable instanceof ItemBoundable) \n          matches.add(childBoundable.getItem())\n        else \n          Assert.shouldNeverReachHere()\n        \n      }\n    }\n  }\n  insert(bounds, item) {\n    Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.')\n    this._itemBoundables.add(new ItemBoundable(bounds, item))\n  }\n  boundablesAtLevel() {\n    if (arguments.length === 1) {\n      const level = arguments[0]\n      const boundables = new ArrayList()\n      this.boundablesAtLevel(level, this._root, boundables)\n      return boundables\n    } else if (arguments.length === 3) {\n      const level = arguments[0], top = arguments[1], boundables = arguments[2]\n      Assert.isTrue(level > -2)\n      if (top.getLevel() === level) {\n        boundables.add(top)\n        return null\n      }\n      for (let i = top.getChildBoundables().iterator(); i.hasNext(); ) {\n        const boundable = i.next()\n        if (boundable instanceof AbstractNode) {\n          this.boundablesAtLevel(level, boundable, boundables)\n        } else {\n          Assert.isTrue(boundable instanceof ItemBoundable)\n          if (level === -1) \n            boundables.add(boundable)\n          \n        }\n      }\n      return null\n    }\n  }\n  getRoot() {\n    this.build()\n    return this._root\n  }\n  remove() {\n    if (arguments.length === 2) {\n      const searchBounds = arguments[0], item = arguments[1]\n      this.build()\n      if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) \n        return this.remove(searchBounds, this._root, item)\n      \n      return false\n    } else if (arguments.length === 3) {\n      const searchBounds = arguments[0], node = arguments[1], item = arguments[2]\n      let found = this.removeItem(node, item)\n      if (found) return true\n      let childToPrune = null\n      for (let i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n        const childBoundable = i.next()\n        if (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) \n          continue\n        \n        if (childBoundable instanceof AbstractNode) {\n          found = this.remove(searchBounds, childBoundable, item)\n          if (found) {\n            childToPrune = childBoundable\n            break\n          }\n        }\n      }\n      if (childToPrune !== null) \n        if (childToPrune.getChildBoundables().isEmpty()) \n          node.getChildBoundables().remove(childToPrune)\n        \n      \n      return found\n    }\n  }\n  createHigherLevels(boundablesOfALevel, level) {\n    Assert.isTrue(!boundablesOfALevel.isEmpty())\n    const parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1)\n    if (parentBoundables.size() === 1) \n      return parentBoundables.get(0)\n    \n    return this.createHigherLevels(parentBoundables, level + 1)\n  }\n  depth() {\n    if (arguments.length === 0) {\n      if (this.isEmpty()) \n        return 0\n      \n      this.build()\n      return this.depth(this._root)\n    } else if (arguments.length === 1) {\n      const node = arguments[0]\n      let maxChildDepth = 0\n      for (let i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n        const childBoundable = i.next()\n        if (childBoundable instanceof AbstractNode) {\n          const childDepth = this.depth(childBoundable)\n          if (childDepth > maxChildDepth) maxChildDepth = childDepth\n        }\n      }\n      return maxChildDepth + 1\n    }\n  }\n  createParentBoundables(childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty())\n    const parentBoundables = new ArrayList()\n    parentBoundables.add(this.createNode(newLevel))\n    const sortedChildBoundables = new ArrayList(childBoundables)\n    Collections.sort(sortedChildBoundables, this.getComparator())\n    for (let i = sortedChildBoundables.iterator(); i.hasNext(); ) {\n      const childBoundable = i.next()\n      if (this.lastNode(parentBoundables).getChildBoundables().size() === this.getNodeCapacity()) \n        parentBoundables.add(this.createNode(newLevel))\n      \n      this.lastNode(parentBoundables).addChildBoundable(childBoundable)\n    }\n    return parentBoundables\n  }\n  isEmpty() {\n    if (!this._built) return this._itemBoundables.isEmpty()\n    return this._root.isEmpty()\n  }\n  getNodeCapacity() {\n    return this._nodeCapacity\n  }\n  lastNode(nodes) {\n    return nodes.get(nodes.size() - 1)\n  }\n  size() {\n    if (arguments.length === 0) {\n      if (this.isEmpty()) \n        return 0\n      \n      this.build()\n      return this.size(this._root)\n    } else if (arguments.length === 1) {\n      const node = arguments[0]\n      let size = 0\n      for (let i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n        const childBoundable = i.next()\n        if (childBoundable instanceof AbstractNode) \n          size += this.size(childBoundable)\n        else if (childBoundable instanceof ItemBoundable) \n          size += 1\n        \n      }\n      return size\n    }\n  }\n  removeItem(node, item) {\n    let childToRemove = null\n    for (let i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n      const childBoundable = i.next()\n      if (childBoundable instanceof ItemBoundable) \n        if (childBoundable.getItem() === item) childToRemove = childBoundable\n      \n    }\n    if (childToRemove !== null) {\n      node.getChildBoundables().remove(childToRemove)\n      return true\n    }\n    return false\n  }\n  itemsTree() {\n    if (arguments.length === 0) {\n      this.build()\n      const valuesTree = this.itemsTree(this._root)\n      if (valuesTree === null) return new ArrayList()\n      return valuesTree\n    } else if (arguments.length === 1) {\n      const node = arguments[0]\n      const valuesTreeForNode = new ArrayList()\n      for (let i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n        const childBoundable = i.next()\n        if (childBoundable instanceof AbstractNode) {\n          const valuesTreeForChild = this.itemsTree(childBoundable)\n          if (valuesTreeForChild !== null) valuesTreeForNode.add(valuesTreeForChild)\n        } else if (childBoundable instanceof ItemBoundable) {\n          valuesTreeForNode.add(childBoundable.getItem())\n        } else {\n          Assert.shouldNeverReachHere()\n        }\n      }\n      if (valuesTreeForNode.size() <= 0) return null\n      return valuesTreeForNode\n    }\n  }\n  query() {\n    if (arguments.length === 1) {\n      const searchBounds = arguments[0]\n      this.build()\n      const matches = new ArrayList()\n      if (this.isEmpty()) \n        return matches\n      \n      if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) \n        this.queryInternal(searchBounds, this._root, matches)\n      \n      return matches\n    } else if (arguments.length === 2) {\n      const searchBounds = arguments[0], visitor = arguments[1]\n      this.build()\n      if (this.isEmpty()) \n        return null\n      \n      if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) \n        this.queryInternal(searchBounds, this._root, visitor)\n      \n    }\n  }\n  build() {\n    if (this._built) return null\n    this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1)\n    this._itemBoundables = null\n    this._built = true\n  }\n  get interfaces_() {\n    return [Serializable]\n  }\n}\nfunction IntersectsOp() {}\nAbstractSTRtree.IntersectsOp = IntersectsOp\nAbstractSTRtree.DEFAULT_NODE_CAPACITY = 10\n","export default class ItemDistance {\n  distance(item1, item2) {}\n}\n","import LineSegment from '../../geom/LineSegment.js'\nexport default class MonotoneChainOverlapAction {\n  constructor() {\n    MonotoneChainOverlapAction.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._overlapSeg1 = new LineSegment()\n    this._overlapSeg2 = new LineSegment()\n  }\n  overlap() {\n    if (arguments.length === 2) {\n      const seg1 = arguments[0], seg2 = arguments[1]\n    } else if (arguments.length === 4) {\n      const mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3]\n      mc1.getLineSegment(start1, this._overlapSeg1)\n      mc2.getLineSegment(start2, this._overlapSeg2)\n      this.overlap(this._overlapSeg1, this._overlapSeg2)\n    }\n  }\n}\n","import MonotoneChain from './MonotoneChain.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Quadrant from '../../geomgraph/Quadrant.js'\nexport default class MonotoneChainBuilder {\n  static findChainEnd(pts, start) {\n    let safeStart = start\n    while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) \n      safeStart++\n    \n    if (safeStart >= pts.length - 1) \n      return pts.length - 1\n    \n    const chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1])\n    let last = start + 1\n    while (last < pts.length) {\n      if (!pts[last - 1].equals2D(pts[last])) {\n        const quad = Quadrant.quadrant(pts[last - 1], pts[last])\n        if (quad !== chainQuad) break\n      }\n      last++\n    }\n    return last - 1\n  }\n  static getChains() {\n    if (arguments.length === 1) {\n      const pts = arguments[0]\n      return MonotoneChainBuilder.getChains(pts, null)\n    } else if (arguments.length === 2) {\n      const pts = arguments[0], context = arguments[1]\n      const mcList = new ArrayList()\n      let chainStart = 0\n      do {\n        const chainEnd = MonotoneChainBuilder.findChainEnd(pts, chainStart)\n        const mc = new MonotoneChain(pts, chainStart, chainEnd, context)\n        mcList.add(mc)\n        chainStart = chainEnd\n      } while (chainStart < pts.length - 1)\n      return mcList\n    }\n  }\n}\n","import Envelope from '../../geom/Envelope.js'\nexport default class MonotoneChain {\n  constructor() {\n    MonotoneChain.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pts = null\n    this._start = null\n    this._end = null\n    this._env = null\n    this._context = null\n    this._id = null\n    const pts = arguments[0], start = arguments[1], end = arguments[2], context = arguments[3]\n    this._pts = pts\n    this._start = start\n    this._end = end\n    this._context = context\n  }\n  computeOverlaps() {\n    if (arguments.length === 2) {\n      const mc = arguments[0], mco = arguments[1]\n      this.computeOverlaps(this._start, this._end, mc, mc._start, mc._end, mco)\n    } else if (arguments.length === 6) {\n      const start0 = arguments[0], end0 = arguments[1], mc = arguments[2], start1 = arguments[3], end1 = arguments[4], mco = arguments[5]\n      if (end0 - start0 === 1 && end1 - start1 === 1) {\n        mco.overlap(this, start0, mc, start1)\n        return null\n      }\n      if (!this.overlaps(start0, end0, mc, start1, end1)) return null\n      const mid0 = Math.trunc((start0 + end0) / 2)\n      const mid1 = Math.trunc((start1 + end1) / 2)\n      if (start0 < mid0) {\n        if (start1 < mid1) this.computeOverlaps(start0, mid0, mc, start1, mid1, mco)\n        if (mid1 < end1) this.computeOverlaps(start0, mid0, mc, mid1, end1, mco)\n      }\n      if (mid0 < end0) {\n        if (start1 < mid1) this.computeOverlaps(mid0, end0, mc, start1, mid1, mco)\n        if (mid1 < end1) this.computeOverlaps(mid0, end0, mc, mid1, end1, mco)\n      }\n    }\n  }\n  setId(id) {\n    this._id = id\n  }\n  select(searchEnv, mcs) {\n    this.computeSelect(searchEnv, this._start, this._end, mcs)\n  }\n  getEnvelope() {\n    if (this._env === null) {\n      const p0 = this._pts[this._start]\n      const p1 = this._pts[this._end]\n      this._env = new Envelope(p0, p1)\n    }\n    return this._env\n  }\n  overlaps(start0, end0, mc, start1, end1) {\n    return Envelope.intersects(this._pts[start0], this._pts[end0], mc._pts[start1], mc._pts[end1])\n  }\n  getEndIndex() {\n    return this._end\n  }\n  getStartIndex() {\n    return this._start\n  }\n  getContext() {\n    return this._context\n  }\n  getId() {\n    return this._id\n  }\n  getLineSegment(index, ls) {\n    ls.p0 = this._pts[index]\n    ls.p1 = this._pts[index + 1]\n  }\n  computeSelect(searchEnv, start0, end0, mcs) {\n    const p0 = this._pts[start0]\n    const p1 = this._pts[end0]\n    if (end0 - start0 === 1) {\n      mcs.select(this, start0)\n      return null\n    }\n    if (!searchEnv.intersects(p0, p1)) return null\n    const mid = Math.trunc((start0 + end0) / 2)\n    if (start0 < mid) \n      this.computeSelect(searchEnv, start0, mid, mcs)\n    \n    if (mid < end0) \n      this.computeSelect(searchEnv, mid, end0, mcs)\n    \n  }\n  getCoordinates() {\n    const coord = new Array(this._end - this._start + 1).fill(null)\n    let index = 0\n    for (let i = this._start; i <= this._end; i++) \n      coord[index++] = this._pts[i]\n    \n    return coord\n  }\n}\n","import Noder from './Noder.js'\nexport default class SinglePassNoder {\n  constructor() {\n    SinglePassNoder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._segInt = null\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const segInt = arguments[0]\n      this.setSegmentIntersector(segInt)\n    }\n  }\n  setSegmentIntersector(segInt) {\n    this._segInt = segInt\n  }\n  get interfaces_() {\n    return [Noder]\n  }\n}\n","import Coordinate from '../../geom/Coordinate.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport Envelope from '../../geom/Envelope.js'\nimport Assert from '../../util/Assert.js'\nexport default class HotPixel {\n  constructor() {\n    HotPixel.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = null\n    this._pt = null\n    this._originalPt = null\n    this._ptScaled = null\n    this._p0Scaled = null\n    this._p1Scaled = null\n    this._scaleFactor = null\n    this._minx = null\n    this._maxx = null\n    this._miny = null\n    this._maxy = null\n    this._corner = new Array(4).fill(null)\n    this._safeEnv = null\n    const pt = arguments[0], scaleFactor = arguments[1], li = arguments[2]\n    this._originalPt = pt\n    this._pt = pt\n    this._scaleFactor = scaleFactor\n    this._li = li\n    if (scaleFactor <= 0) throw new IllegalArgumentException('Scale factor must be non-zero')\n    if (scaleFactor !== 1.0) {\n      this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y))\n      this._p0Scaled = new Coordinate()\n      this._p1Scaled = new Coordinate()\n    }\n    this.initCorners(this._pt)\n  }\n  intersectsScaled(p0, p1) {\n    const segMinx = Math.min(p0.x, p1.x)\n    const segMaxx = Math.max(p0.x, p1.x)\n    const segMiny = Math.min(p0.y, p1.y)\n    const segMaxy = Math.max(p0.y, p1.y)\n    const isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy\n    if (isOutsidePixelEnv) return false\n    const intersects = this.intersectsToleranceSquare(p0, p1)\n    Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test')\n    return intersects\n  }\n  copyScaled(p, pScaled) {\n    pScaled.x = this.scale(p.x)\n    pScaled.y = this.scale(p.y)\n  }\n  getSafeEnvelope() {\n    if (this._safeEnv === null) {\n      const safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor\n      this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance)\n    }\n    return this._safeEnv\n  }\n  intersectsPixelClosure(p0, p1) {\n    this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1])\n    if (this._li.hasIntersection()) return true\n    this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2])\n    if (this._li.hasIntersection()) return true\n    this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3])\n    if (this._li.hasIntersection()) return true\n    this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0])\n    if (this._li.hasIntersection()) return true\n    return false\n  }\n  intersectsToleranceSquare(p0, p1) {\n    let intersectsLeft = false\n    let intersectsBottom = false\n    this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1])\n    if (this._li.isProper()) return true\n    this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2])\n    if (this._li.isProper()) return true\n    if (this._li.hasIntersection()) intersectsLeft = true\n    this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3])\n    if (this._li.isProper()) return true\n    if (this._li.hasIntersection()) intersectsBottom = true\n    this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0])\n    if (this._li.isProper()) return true\n    if (intersectsLeft && intersectsBottom) return true\n    if (p0.equals(this._pt)) return true\n    if (p1.equals(this._pt)) return true\n    return false\n  }\n  addSnappedNode(segStr, segIndex) {\n    const p0 = segStr.getCoordinate(segIndex)\n    const p1 = segStr.getCoordinate(segIndex + 1)\n    if (this.intersects(p0, p1)) {\n      segStr.addIntersection(this.getCoordinate(), segIndex)\n      return true\n    }\n    return false\n  }\n  initCorners(pt) {\n    const tolerance = 0.5\n    this._minx = pt.x - tolerance\n    this._maxx = pt.x + tolerance\n    this._miny = pt.y - tolerance\n    this._maxy = pt.y + tolerance\n    this._corner[0] = new Coordinate(this._maxx, this._maxy)\n    this._corner[1] = new Coordinate(this._minx, this._maxy)\n    this._corner[2] = new Coordinate(this._minx, this._miny)\n    this._corner[3] = new Coordinate(this._maxx, this._miny)\n  }\n  intersects(p0, p1) {\n    if (this._scaleFactor === 1.0) return this.intersectsScaled(p0, p1)\n    this.copyScaled(p0, this._p0Scaled)\n    this.copyScaled(p1, this._p1Scaled)\n    return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n  }\n  scale(val) {\n    return Math.round(val * this._scaleFactor)\n  }\n  getCoordinate() {\n    return this._originalPt\n  }\n}\nHotPixel.SAFE_ENV_EXPANSION_FACTOR = 0.75\n","import MonotoneChainSelectAction from '../../index/chain/MonotoneChainSelectAction.js'\nimport MonotoneChain from '../../index/chain/MonotoneChain.js'\nimport ItemVisitor from '../../index/ItemVisitor.js'\nexport default class MCIndexPointSnapper {\n  constructor() {\n    MCIndexPointSnapper.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._index = null\n    const index = arguments[0]\n    this._index = index\n  }\n  snap() {\n    if (arguments.length === 1) {\n      const hotPixel = arguments[0]\n      return this.snap(hotPixel, null, -1)\n    } else if (arguments.length === 3) {\n      const hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2]\n      const pixelEnv = hotPixel.getSafeEnvelope()\n      const hotPixelSnapAction = new HotPixelSnapAction(hotPixel, parentEdge, hotPixelVertexIndex)\n      this._index.query(pixelEnv, new (class {\n        get interfaces_() {\n          return [ItemVisitor]\n        }\n        visitItem(item) {\n          const testChain = item\n          testChain.select(pixelEnv, hotPixelSnapAction)\n        }\n      })())\n      return hotPixelSnapAction.isNodeAdded()\n    }\n  }\n}\nclass HotPixelSnapAction extends MonotoneChainSelectAction {\n  constructor() {\n    super()\n    HotPixelSnapAction.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._hotPixel = null\n    this._parentEdge = null\n    this._hotPixelVertexIndex = null\n    this._isNodeAdded = false\n    const hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2]\n    this._hotPixel = hotPixel\n    this._parentEdge = parentEdge\n    this._hotPixelVertexIndex = hotPixelVertexIndex\n  }\n  select() {\n    if (arguments.length === 2 && (Number.isInteger(arguments[1]) && arguments[0] instanceof MonotoneChain)) {\n      const mc = arguments[0], startIndex = arguments[1]\n      const ss = mc.getContext()\n      if (this._parentEdge === ss) \n        if (startIndex === this._hotPixelVertexIndex || startIndex + 1 === this._hotPixelVertexIndex) return null\n      \n      this._isNodeAdded |= this._hotPixel.addSnappedNode(ss, startIndex)\n    } else {\n      return super.select.apply(this, arguments)\n    }\n  }\n  isNodeAdded() {\n    return this._isNodeAdded\n  }\n}\nMCIndexPointSnapper.HotPixelSnapAction = HotPixelSnapAction\n","import LineSegment from '../../geom/LineSegment.js'\nexport default class MonotoneChainSelectAction {\n  constructor() {\n    MonotoneChainSelectAction.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.selectedSegment = new LineSegment()\n  }\n  select() {\n    if (arguments.length === 1) {\n      const seg = arguments[0]\n    } else if (arguments.length === 2) {\n      const mc = arguments[0], startIndex = arguments[1]\n      mc.getLineSegment(startIndex, this.selectedSegment)\n      this.select(this.selectedSegment)\n    }\n  }\n}\n","import SegmentIntersector from './SegmentIntersector.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class InteriorIntersectionFinderAdder {\n  constructor() {\n    InteriorIntersectionFinderAdder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = null\n    this._interiorIntersections = null\n    const li = arguments[0]\n    this._li = li\n    this._interiorIntersections = new ArrayList()\n  }\n  isDone() {\n    return false\n  }\n  processIntersections(e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1 && segIndex0 === segIndex1) return null\n    const p00 = e0.getCoordinates()[segIndex0]\n    const p01 = e0.getCoordinates()[segIndex0 + 1]\n    const p10 = e1.getCoordinates()[segIndex1]\n    const p11 = e1.getCoordinates()[segIndex1 + 1]\n    this._li.computeIntersection(p00, p01, p10, p11)\n    if (this._li.hasIntersection()) \n      if (this._li.isInteriorIntersection()) {\n        for (let intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) \n          this._interiorIntersections.add(this._li.getIntersection(intIndex))\n        \n        e0.addIntersections(this._li, segIndex0, 0)\n        e1.addIntersections(this._li, segIndex1, 1)\n      }\n    \n  }\n  getInteriorIntersections() {\n    return this._interiorIntersections\n  }\n  get interfaces_() {\n    return [SegmentIntersector]\n  }\n}\n","export default class SegmentIntersector {\n  isDone() {}\n  processIntersections(e0, segIndex0, e1, segIndex1) {}\n}\n","import Location from '../../geom/Location.js'\nimport BufferSubgraph from './BufferSubgraph.js'\nimport Position from '../../geomgraph/Position.js'\nimport MCIndexNoder from '../../noding/MCIndexNoder.js'\nimport OffsetCurveBuilder from './OffsetCurveBuilder.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport Label from '../../geomgraph/Label.js'\nimport PlanarGraph from '../../geomgraph/PlanarGraph.js'\nimport PolygonBuilder from '../overlay/PolygonBuilder.js'\nimport GeometryFactory from '../../geom/GeometryFactory.js'\nimport SubgraphDepthLocater from './SubgraphDepthLocater.js'\nimport OffsetCurveSetBuilder from './OffsetCurveSetBuilder.js'\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory.js'\nimport EdgeList from '../../geomgraph/EdgeList.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector.js'\nimport IntersectionAdder from '../../noding/IntersectionAdder.js'\nimport Edge from '../../geomgraph/Edge.js'\nexport default class BufferBuilder {\n  constructor() {\n    BufferBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._bufParams = null\n    this._workingPrecisionModel = null\n    this._workingNoder = null\n    this._geomFact = null\n    this._graph = null\n    this._edgeList = new EdgeList()\n    const bufParams = arguments[0]\n    this._bufParams = bufParams\n  }\n  static convertSegStrings(it) {\n    const fact = new GeometryFactory()\n    const lines = new ArrayList()\n    while (it.hasNext()) {\n      const ss = it.next()\n      const line = fact.createLineString(ss.getCoordinates())\n      lines.add(line)\n    }\n    return fact.buildGeometry(lines)\n  }\n  static depthDelta(label) {\n    const lLoc = label.getLocation(0, Position.LEFT)\n    const rLoc = label.getLocation(0, Position.RIGHT)\n    if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) return 1; else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) return -1\n    return 0\n  }\n  createEmptyResultGeometry() {\n    const emptyGeom = this._geomFact.createPolygon()\n    return emptyGeom\n  }\n  getNoder(precisionModel) {\n    if (this._workingNoder !== null) return this._workingNoder\n    const noder = new MCIndexNoder()\n    const li = new RobustLineIntersector()\n    li.setPrecisionModel(precisionModel)\n    noder.setSegmentIntersector(new IntersectionAdder(li))\n    return noder\n  }\n  buffer(g, distance) {\n    let precisionModel = this._workingPrecisionModel\n    if (precisionModel === null) precisionModel = g.getPrecisionModel()\n    this._geomFact = g.getFactory()\n    const curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams)\n    const curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder)\n    const bufferSegStrList = curveSetBuilder.getCurves()\n    if (bufferSegStrList.size() <= 0) \n      return this.createEmptyResultGeometry()\n    \n    this.computeNodedEdges(bufferSegStrList, precisionModel)\n    this._graph = new PlanarGraph(new OverlayNodeFactory())\n    this._graph.addEdges(this._edgeList.getEdges())\n    const subgraphList = this.createSubgraphs(this._graph)\n    const polyBuilder = new PolygonBuilder(this._geomFact)\n    this.buildSubgraphs(subgraphList, polyBuilder)\n    const resultPolyList = polyBuilder.getPolygons()\n    if (resultPolyList.size() <= 0) \n      return this.createEmptyResultGeometry()\n    \n    const resultGeom = this._geomFact.buildGeometry(resultPolyList)\n    return resultGeom\n  }\n  computeNodedEdges(bufferSegStrList, precisionModel) {\n    const noder = this.getNoder(precisionModel)\n    noder.computeNodes(bufferSegStrList)\n    const nodedSegStrings = noder.getNodedSubstrings()\n    for (let i = nodedSegStrings.iterator(); i.hasNext(); ) {\n      const segStr = i.next()\n      const pts = segStr.getCoordinates()\n      if (pts.length === 2 && pts[0].equals2D(pts[1])) continue\n      const oldLabel = segStr.getData()\n      const edge = new Edge(segStr.getCoordinates(), new Label(oldLabel))\n      this.insertUniqueEdge(edge)\n    }\n  }\n  setNoder(noder) {\n    this._workingNoder = noder\n  }\n  setWorkingPrecisionModel(pm) {\n    this._workingPrecisionModel = pm\n  }\n  insertUniqueEdge(e) {\n    const existingEdge = this._edgeList.findEqualEdge(e)\n    if (existingEdge !== null) {\n      const existingLabel = existingEdge.getLabel()\n      let labelToMerge = e.getLabel()\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel())\n        labelToMerge.flip()\n      }\n      existingLabel.merge(labelToMerge)\n      const mergeDelta = BufferBuilder.depthDelta(labelToMerge)\n      const existingDelta = existingEdge.getDepthDelta()\n      const newDelta = existingDelta + mergeDelta\n      existingEdge.setDepthDelta(newDelta)\n    } else {\n      this._edgeList.add(e)\n      e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()))\n    }\n  }\n  buildSubgraphs(subgraphList, polyBuilder) {\n    const processedGraphs = new ArrayList()\n    for (let i = subgraphList.iterator(); i.hasNext(); ) {\n      const subgraph = i.next()\n      const p = subgraph.getRightmostCoordinate()\n      const locater = new SubgraphDepthLocater(processedGraphs)\n      const outsideDepth = locater.getDepth(p)\n      subgraph.computeDepth(outsideDepth)\n      subgraph.findResultEdges()\n      processedGraphs.add(subgraph)\n      polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes())\n    }\n  }\n  createSubgraphs(graph) {\n    const subgraphList = new ArrayList()\n    for (let i = graph.getNodes().iterator(); i.hasNext(); ) {\n      const node = i.next()\n      if (!node.isVisited()) {\n        const subgraph = new BufferSubgraph()\n        subgraph.create(node)\n        subgraphList.add(subgraph)\n      }\n    }\n    Collections.sort(subgraphList, Collections.reverseOrder())\n    return subgraphList\n  }\n}\n","import HashSet from '../../../../../java/util/HashSet.js'\nimport Position from '../../geomgraph/Position.js'\nimport Stack from '../../../../../java/util/Stack.js'\nimport RightmostEdgeFinder from './RightmostEdgeFinder.js'\nimport TopologyException from '../../geom/TopologyException.js'\nimport LinkedList from '../../../../../java/util/LinkedList.js'\nimport Comparable from '../../../../../java/lang/Comparable.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Envelope from '../../geom/Envelope.js'\nexport default class BufferSubgraph {\n  constructor() {\n    BufferSubgraph.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._finder = null\n    this._dirEdgeList = new ArrayList()\n    this._nodes = new ArrayList()\n    this._rightMostCoord = null\n    this._env = null\n    this._finder = new RightmostEdgeFinder()\n  }\n  clearVisitedEdges() {\n    for (let it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      de.setVisited(false)\n    }\n  }\n  compareTo(o) {\n    const graph = o\n    if (this._rightMostCoord.x < graph._rightMostCoord.x) \n      return -1\n    \n    if (this._rightMostCoord.x > graph._rightMostCoord.x) \n      return 1\n    \n    return 0\n  }\n  getEnvelope() {\n    if (this._env === null) {\n      const edgeEnv = new Envelope()\n      for (let it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n        const dirEdge = it.next()\n        const pts = dirEdge.getEdge().getCoordinates()\n        for (let i = 0; i < pts.length - 1; i++) \n          edgeEnv.expandToInclude(pts[i])\n        \n      }\n      this._env = edgeEnv\n    }\n    return this._env\n  }\n  addReachable(startNode) {\n    const nodeStack = new Stack()\n    nodeStack.add(startNode)\n    while (!nodeStack.empty()) {\n      const node = nodeStack.pop()\n      this.add(node, nodeStack)\n    }\n  }\n  copySymDepths(de) {\n    const sym = de.getSym()\n    sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT))\n    sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT))\n  }\n  add(node, nodeStack) {\n    node.setVisited(true)\n    this._nodes.add(node)\n    for (let i = node.getEdges().iterator(); i.hasNext(); ) {\n      const de = i.next()\n      this._dirEdgeList.add(de)\n      const sym = de.getSym()\n      const symNode = sym.getNode()\n      if (!symNode.isVisited()) nodeStack.push(symNode)\n    }\n  }\n  getRightmostCoordinate() {\n    return this._rightMostCoord\n  }\n  computeNodeDepth(n) {\n    let startEdge = null\n    for (let i = n.getEdges().iterator(); i.hasNext(); ) {\n      const de = i.next()\n      if (de.isVisited() || de.getSym().isVisited()) {\n        startEdge = de\n        break\n      }\n    }\n    if (startEdge === null) throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate())\n    n.getEdges().computeDepths(startEdge)\n    for (let i = n.getEdges().iterator(); i.hasNext(); ) {\n      const de = i.next()\n      de.setVisited(true)\n      this.copySymDepths(de)\n    }\n  }\n  computeDepth(outsideDepth) {\n    this.clearVisitedEdges()\n    const de = this._finder.getEdge()\n    const n = de.getNode()\n    const label = de.getLabel()\n    de.setEdgeDepths(Position.RIGHT, outsideDepth)\n    this.copySymDepths(de)\n    this.computeDepths(de)\n  }\n  create(node) {\n    this.addReachable(node)\n    this._finder.findEdge(this._dirEdgeList)\n    this._rightMostCoord = this._finder.getCoordinate()\n  }\n  findResultEdges() {\n    for (let it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) \n        de.setInResult(true)\n      \n    }\n  }\n  computeDepths(startEdge) {\n    const nodesVisited = new HashSet()\n    const nodeQueue = new LinkedList()\n    const startNode = startEdge.getNode()\n    nodeQueue.addLast(startNode)\n    nodesVisited.add(startNode)\n    startEdge.setVisited(true)\n    while (!nodeQueue.isEmpty()) {\n      const n = nodeQueue.removeFirst()\n      nodesVisited.add(n)\n      this.computeNodeDepth(n)\n      for (let i = n.getEdges().iterator(); i.hasNext(); ) {\n        const de = i.next()\n        const sym = de.getSym()\n        if (sym.isVisited()) continue\n        const adjNode = sym.getNode()\n        if (!nodesVisited.contains(adjNode)) {\n          nodeQueue.addLast(adjNode)\n          nodesVisited.add(adjNode)\n        }\n      }\n    }\n  }\n  getNodes() {\n    return this._nodes\n  }\n  getDirectedEdges() {\n    return this._dirEdgeList\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import EmptyStackException from './EmptyStackException.js'\nimport IndexOutOfBoundsException from '../lang/IndexOutOfBoundsException.js'\nimport List from './List.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n */\nexport default class Stack extends List {\n  constructor() {\n    super()\n    this.array = []\n  }\n\n  add(e) {\n    this.array.push(e)\n    return true\n  }\n\n  get(index) {\n    if (index < 0 || index >= this.size())\n      throw new IndexOutOfBoundsException()\n    return this.array[index]\n  }\n\n  /**\n   * Pushes an item onto the top of this stack.\n   * @param {Object} e\n   * @return {Object}\n   */\n  push(e) {\n    this.array.push(e)\n    return e\n  }\n\n  /**\n   * Removes the object at the top of this stack and returns that object as the value of this function.\n   * @return {Object}\n   */\n  pop() {\n    if (this.array.length === 0)\n      throw new EmptyStackException()\n    return this.array.pop()\n  }\n\n  /**\n   * Looks at the object at the top of this stack without removing it from the\n   * stack.\n   * @return {Object}\n   */\n  peek() {\n    if (this.array.length === 0)\n      throw new EmptyStackException()\n    return this.array[this.array.length - 1]\n  }\n\n  /**\n   * Tests if this stack is empty.\n   * @return {boolean} true if and only if this stack contains no items; false\n   *         otherwise.\n   */\n  empty() {\n    return this.array.length === 0\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isEmpty() {\n    return this.empty()\n  }\n\n  /**\n   * Returns the 1-based position where an object is on this stack. If the object\n   * o occurs as an item in this stack, this method returns the distance from the\n   * top of the stack of the occurrence nearest the top of the stack; the topmost\n   * item on the stack is considered to be at distance 1. The equals method is\n   * used to compare o to the items in this stack.\n   *\n   * NOTE: does not currently actually use equals. (=== is used)\n   *\n   * @param {Object} o\n   * @return {number} the 1-based position from the top of the stack where the\n   *         object is located; the return value -1 indicates that the object is\n   *         not on the stack.\n   */\n  search(o) {\n    return this.array.indexOf(o)\n  }\n\n  /**\n   * @return {number}\n   */\n  size() {\n    return this.array.length\n  }\n\n  /**\n   * @return {Array}\n   */\n  toArray() {\n    return this.array.slice()\n  }\n}\n","import Exception from '../lang/Exception.js'\n\nexport default class EmptyStackException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ EmptyStackException })[0]\n  }\n}\n","import Position from '../../geomgraph/Position.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport Assert from '../../util/Assert.js'\nexport default class RightmostEdgeFinder {\n  constructor() {\n    RightmostEdgeFinder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._minIndex = -1\n    this._minCoord = null\n    this._minDe = null\n    this._orientedDe = null\n  }\n  getCoordinate() {\n    return this._minCoord\n  }\n  getRightmostSide(de, index) {\n    let side = this.getRightmostSideOfSegment(de, index)\n    if (side < 0) side = this.getRightmostSideOfSegment(de, index - 1)\n    if (side < 0) {\n      this._minCoord = null\n      this.checkForRightmostCoordinate(de)\n    }\n    return side\n  }\n  findRightmostEdgeAtVertex() {\n    const pts = this._minDe.getEdge().getCoordinates()\n    Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge')\n    const pPrev = pts[this._minIndex - 1]\n    const pNext = pts[this._minIndex + 1]\n    const orientation = Orientation.index(this._minCoord, pNext, pPrev)\n    let usePrev = false\n    if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === Orientation.COUNTERCLOCKWISE) \n      usePrev = true\n    else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === Orientation.CLOCKWISE) \n      usePrev = true\n    \n    if (usePrev) \n      this._minIndex = this._minIndex - 1\n    \n  }\n  getRightmostSideOfSegment(de, i) {\n    const e = de.getEdge()\n    const coord = e.getCoordinates()\n    if (i < 0 || i + 1 >= coord.length) return -1\n    if (coord[i].y === coord[i + 1].y) return -1\n    let pos = Position.LEFT\n    if (coord[i].y < coord[i + 1].y) pos = Position.RIGHT\n    return pos\n  }\n  getEdge() {\n    return this._orientedDe\n  }\n  checkForRightmostCoordinate(de) {\n    const coord = de.getEdge().getCoordinates()\n    for (let i = 0; i < coord.length - 1; i++) \n      if (this._minCoord === null || coord[i].x > this._minCoord.x) {\n        this._minDe = de\n        this._minIndex = i\n        this._minCoord = coord[i]\n      }\n    \n  }\n  findRightmostEdgeAtNode() {\n    const node = this._minDe.getNode()\n    const star = node.getEdges()\n    this._minDe = star.getRightmostEdge()\n    if (!this._minDe.isForward()) {\n      this._minDe = this._minDe.getSym()\n      this._minIndex = this._minDe.getEdge().getCoordinates().length - 1\n    }\n  }\n  findEdge(dirEdgeList) {\n    for (let i = dirEdgeList.iterator(); i.hasNext(); ) {\n      const de = i.next()\n      if (!de.isForward()) continue\n      this.checkForRightmostCoordinate(de)\n    }\n    Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing')\n    if (this._minIndex === 0) \n      this.findRightmostEdgeAtNode()\n    else \n      this.findRightmostEdgeAtVertex()\n    \n    this._orientedDe = this._minDe\n    const rightmostSide = this.getRightmostSide(this._minDe, this._minIndex)\n    if (rightmostSide === Position.LEFT) \n      this._orientedDe = this._minDe.getSym()\n    \n  }\n}\n","export default class LinkedList {\n  constructor() {\n    this.array = []\n  }\n\n  addLast(e) {\n    this.array.push(e)\n  }\n\n  removeFirst() {\n    return this.array.shift()\n  }\n\n  isEmpty() {\n    return this.array.length === 0\n  }\n}\n","import BufferParameters from './BufferParameters.js'\nimport Position from '../../geomgraph/Position.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport BufferInputLineSimplifier from './BufferInputLineSimplifier.js'\nimport CoordinateArrays from '../../geom/CoordinateArrays.js'\nimport OffsetSegmentGenerator from './OffsetSegmentGenerator.js'\nexport default class OffsetCurveBuilder {\n  constructor() {\n    OffsetCurveBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._distance = 0.0\n    this._precisionModel = null\n    this._bufParams = null\n    const precisionModel = arguments[0], bufParams = arguments[1]\n    this._precisionModel = precisionModel\n    this._bufParams = bufParams\n  }\n  static copyCoordinates(pts) {\n    const copy = new Array(pts.length).fill(null)\n    for (let i = 0; i < copy.length; i++) \n      copy[i] = new Coordinate(pts[i])\n    \n    return copy\n  }\n  getOffsetCurve(inputPts, distance) {\n    this._distance = distance\n    if (distance === 0.0) return null\n    const isRightSide = distance < 0.0\n    const posDistance = Math.abs(distance)\n    const segGen = this.getSegGen(posDistance)\n    if (inputPts.length <= 1) \n      this.computePointCurve(inputPts[0], segGen)\n    else \n      this.computeOffsetCurve(inputPts, isRightSide, segGen)\n    \n    const curvePts = segGen.getCoordinates()\n    if (isRightSide) CoordinateArrays.reverse(curvePts)\n    return curvePts\n  }\n  computeSingleSidedBufferCurve(inputPts, isRightSide, segGen) {\n    const distTol = this.simplifyTolerance(this._distance)\n    if (isRightSide) {\n      segGen.addSegments(inputPts, true)\n      const simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol)\n      const n2 = simp2.length - 1\n      segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = n2 - 2; i >= 0; i--) \n        segGen.addNextSegment(simp2[i], true)\n      \n    } else {\n      segGen.addSegments(inputPts, false)\n      const simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol)\n      const n1 = simp1.length - 1\n      segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = 2; i <= n1; i++) \n        segGen.addNextSegment(simp1[i], true)\n      \n    }\n    segGen.addLastSegment()\n    segGen.closeRing()\n  }\n  computeRingBufferCurve(inputPts, side, segGen) {\n    let distTol = this.simplifyTolerance(this._distance)\n    if (side === Position.RIGHT) distTol = -distTol\n    const simp = BufferInputLineSimplifier.simplify(inputPts, distTol)\n    const n = simp.length - 1\n    segGen.initSideSegments(simp[n - 1], simp[0], side)\n    for (let i = 1; i <= n; i++) {\n      const addStartPoint = i !== 1\n      segGen.addNextSegment(simp[i], addStartPoint)\n    }\n    segGen.closeRing()\n  }\n  computeLineBufferCurve(inputPts, segGen) {\n    const distTol = this.simplifyTolerance(this._distance)\n    const simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol)\n    const n1 = simp1.length - 1\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT)\n    for (let i = 2; i <= n1; i++) \n      segGen.addNextSegment(simp1[i], true)\n    \n    segGen.addLastSegment()\n    segGen.addLineEndCap(simp1[n1 - 1], simp1[n1])\n    const simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol)\n    const n2 = simp2.length - 1\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT)\n    for (let i = n2 - 2; i >= 0; i--) \n      segGen.addNextSegment(simp2[i], true)\n    \n    segGen.addLastSegment()\n    segGen.addLineEndCap(simp2[1], simp2[0])\n    segGen.closeRing()\n  }\n  computePointCurve(pt, segGen) {\n    switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt)\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt)\n      break\n    }\n  }\n  getLineCurve(inputPts, distance) {\n    this._distance = distance\n    if (this.isLineOffsetEmpty(distance)) return null\n    const posDistance = Math.abs(distance)\n    const segGen = this.getSegGen(posDistance)\n    if (inputPts.length <= 1) {\n      this.computePointCurve(inputPts[0], segGen)\n    } else \n      if (this._bufParams.isSingleSided()) {\n        const isRightSide = distance < 0.0\n        this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen)\n      } else {\n        this.computeLineBufferCurve(inputPts, segGen)\n      }\n    \n    const lineCoord = segGen.getCoordinates()\n    return lineCoord\n  }\n  getBufferParameters() {\n    return this._bufParams\n  }\n  simplifyTolerance(bufDistance) {\n    return bufDistance * this._bufParams.getSimplifyFactor()\n  }\n  getRingCurve(inputPts, side, distance) {\n    this._distance = distance\n    if (inputPts.length <= 2) return this.getLineCurve(inputPts, distance)\n    if (distance === 0.0) \n      return OffsetCurveBuilder.copyCoordinates(inputPts)\n    \n    const segGen = this.getSegGen(distance)\n    this.computeRingBufferCurve(inputPts, side, segGen)\n    return segGen.getCoordinates()\n  }\n  computeOffsetCurve(inputPts, isRightSide, segGen) {\n    const distTol = this.simplifyTolerance(this._distance)\n    if (isRightSide) {\n      const simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol)\n      const n2 = simp2.length - 1\n      segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = n2 - 2; i >= 0; i--) \n        segGen.addNextSegment(simp2[i], true)\n      \n    } else {\n      const simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol)\n      const n1 = simp1.length - 1\n      segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = 2; i <= n1; i++) \n        segGen.addNextSegment(simp1[i], true)\n      \n    }\n    segGen.addLastSegment()\n  }\n  isLineOffsetEmpty(distance) {\n    if (distance === 0.0) return true\n    if (distance < 0.0 && !this._bufParams.isSingleSided()) return true\n    return false\n  }\n  getSegGen(distance) {\n    return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n  }\n}\n","import CoordinateList from '../../geom/CoordinateList.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport Distance from '../../algorithm/Distance.js'\nexport default class BufferInputLineSimplifier {\n  constructor() {\n    BufferInputLineSimplifier.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputLine = null\n    this._distanceTol = null\n    this._isDeleted = null\n    this._angleOrientation = Orientation.COUNTERCLOCKWISE\n    const inputLine = arguments[0]\n    this._inputLine = inputLine\n  }\n  static simplify(inputLine, distanceTol) {\n    const simp = new BufferInputLineSimplifier(inputLine)\n    return simp.simplify(distanceTol)\n  }\n  isDeletable(i0, i1, i2, distanceTol) {\n    const p0 = this._inputLine[i0]\n    const p1 = this._inputLine[i1]\n    const p2 = this._inputLine[i2]\n    if (!this.isConcave(p0, p1, p2)) return false\n    if (!this.isShallow(p0, p1, p2, distanceTol)) return false\n    return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n  }\n  deleteShallowConcavities() {\n    let index = 1\n    let midIndex = this.findNextNonDeletedIndex(index)\n    let lastIndex = this.findNextNonDeletedIndex(midIndex)\n    let isChanged = false\n    while (lastIndex < this._inputLine.length) {\n      let isMiddleVertexDeleted = false\n      if (this.isDeletable(index, midIndex, lastIndex, this._distanceTol)) {\n        this._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE\n        isMiddleVertexDeleted = true\n        isChanged = true\n      }\n      if (isMiddleVertexDeleted) index = lastIndex; else index = midIndex\n      midIndex = this.findNextNonDeletedIndex(index)\n      lastIndex = this.findNextNonDeletedIndex(midIndex)\n    }\n    return isChanged\n  }\n  isShallowConcavity(p0, p1, p2, distanceTol) {\n    const orientation = Orientation.index(p0, p1, p2)\n    const isAngleToSimplify = orientation === this._angleOrientation\n    if (!isAngleToSimplify) return false\n    const dist = Distance.pointToSegment(p1, p0, p2)\n    return dist < distanceTol\n  }\n  isShallowSampled(p0, p2, i0, i2, distanceTol) {\n    let inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK)\n    if (inc <= 0) inc = 1\n    for (let i = i0; i < i2; i += inc) \n      if (!this.isShallow(p0, p2, this._inputLine[i], distanceTol)) return false\n    \n    return true\n  }\n  isConcave(p0, p1, p2) {\n    const orientation = Orientation.index(p0, p1, p2)\n    const isConcave = orientation === this._angleOrientation\n    return isConcave\n  }\n  simplify(distanceTol) {\n    this._distanceTol = Math.abs(distanceTol)\n    if (distanceTol < 0) this._angleOrientation = Orientation.CLOCKWISE\n    this._isDeleted = new Array(this._inputLine.length).fill(null)\n    let isChanged = false\n    do \n      isChanged = this.deleteShallowConcavities()\n    while (isChanged)\n    return this.collapseLine()\n  }\n  findNextNonDeletedIndex(index) {\n    let next = index + 1\n    while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) next++\n    return next\n  }\n  isShallow(p0, p1, p2, distanceTol) {\n    const dist = Distance.pointToSegment(p1, p0, p2)\n    return dist < distanceTol\n  }\n  collapseLine() {\n    const coordList = new CoordinateList()\n    for (let i = 0; i < this._inputLine.length; i++) \n      if (this._isDeleted[i] !== BufferInputLineSimplifier.DELETE) coordList.add(this._inputLine[i])\n    \n    return coordList.toCoordinateArray()\n  }\n}\nBufferInputLineSimplifier.INIT = 0\nBufferInputLineSimplifier.DELETE = 1\nBufferInputLineSimplifier.KEEP = 1\nBufferInputLineSimplifier.NUM_PTS_TO_CHECK = 10\n","import BufferParameters from './BufferParameters.js'\nimport Position from '../../geomgraph/Position.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport LineSegment from '../../geom/LineSegment.js'\nimport OffsetSegmentString from './OffsetSegmentString.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport Intersection from '../../algorithm/Intersection.js'\nimport Angle from '../../algorithm/Angle.js'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector.js'\nexport default class OffsetSegmentGenerator {\n  constructor() {\n    OffsetSegmentGenerator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._maxCurveSegmentError = 0.0\n    this._filletAngleQuantum = null\n    this._closingSegLengthFactor = 1\n    this._segList = null\n    this._distance = 0.0\n    this._precisionModel = null\n    this._bufParams = null\n    this._li = null\n    this._s0 = null\n    this._s1 = null\n    this._s2 = null\n    this._seg0 = new LineSegment()\n    this._seg1 = new LineSegment()\n    this._offset0 = new LineSegment()\n    this._offset1 = new LineSegment()\n    this._side = 0\n    this._hasNarrowConcaveAngle = false\n    const precisionModel = arguments[0], bufParams = arguments[1], distance = arguments[2]\n    this._precisionModel = precisionModel\n    this._bufParams = bufParams\n    this._li = new RobustLineIntersector()\n    this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments()\n    if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR\n    this.init(distance)\n  }\n  getCoordinates() {\n    const pts = this._segList.getCoordinates()\n    return pts\n  }\n  addMitreJoin(p, offset0, offset1, distance) {\n    const intPt = Intersection.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1)\n    if (intPt !== null) {\n      const mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance)\n      if (mitreRatio <= this._bufParams.getMitreLimit()) {\n        this._segList.addPt(intPt)\n        return null\n      }\n    }\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit())\n  }\n  addLastSegment() {\n    this._segList.addPt(this._offset1.p1)\n  }\n  initSideSegments(s1, s2, side) {\n    this._s1 = s1\n    this._s2 = s2\n    this._side = side\n    this._seg1.setCoordinates(s1, s2)\n    this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1)\n  }\n  addLimitedMitreJoin(offset0, offset1, distance, mitreLimit) {\n    const basePt = this._seg0.p1\n    const ang0 = Angle.angle(basePt, this._seg0.p0)\n    const angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1)\n    const angDiffHalf = angDiff / 2\n    const midAng = Angle.normalize(ang0 + angDiffHalf)\n    const mitreMidAng = Angle.normalize(midAng + Math.PI)\n    const mitreDist = mitreLimit * distance\n    const bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf))\n    const bevelHalfLen = distance - bevelDelta\n    const bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng)\n    const bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng)\n    const bevelMidPt = new Coordinate(bevelMidX, bevelMidY)\n    const mitreMidLine = new LineSegment(basePt, bevelMidPt)\n    const bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen)\n    const bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen)\n    if (this._side === Position.LEFT) {\n      this._segList.addPt(bevelEndLeft)\n      this._segList.addPt(bevelEndRight)\n    } else {\n      this._segList.addPt(bevelEndRight)\n      this._segList.addPt(bevelEndLeft)\n    }\n  }\n  addDirectedFillet(p, startAngle, endAngle, direction, radius) {\n    const directionFactor = direction === Orientation.CLOCKWISE ? -1 : 1\n    const totalAngle = Math.abs(startAngle - endAngle)\n    const nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5)\n    if (nSegs < 1) return null\n    const angleInc = totalAngle / nSegs\n    const pt = new Coordinate()\n    for (let i = 0; i < nSegs; i++) {\n      const angle = startAngle + directionFactor * i * angleInc\n      pt.x = p.x + radius * Math.cos(angle)\n      pt.y = p.y + radius * Math.sin(angle)\n      this._segList.addPt(pt)\n    }\n  }\n  computeOffsetSegment(seg, side, distance, offset) {\n    const sideSign = side === Position.LEFT ? 1 : -1\n    const dx = seg.p1.x - seg.p0.x\n    const dy = seg.p1.y - seg.p0.y\n    const len = Math.sqrt(dx * dx + dy * dy)\n    const ux = sideSign * distance * dx / len\n    const uy = sideSign * distance * dy / len\n    offset.p0.x = seg.p0.x - uy\n    offset.p0.y = seg.p0.y + ux\n    offset.p1.x = seg.p1.x - uy\n    offset.p1.y = seg.p1.y + ux\n  }\n  addInsideTurn(orientation, addStartPoint) {\n    this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1)\n    if (this._li.hasIntersection()) {\n      this._segList.addPt(this._li.getIntersection(0))\n    } else {\n      this._hasNarrowConcaveAngle = true\n      if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n        this._segList.addPt(this._offset0.p1)\n      } else {\n        this._segList.addPt(this._offset0.p1)\n        if (this._closingSegLengthFactor > 0) {\n          const mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1))\n          this._segList.addPt(mid0)\n          const mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1))\n          this._segList.addPt(mid1)\n        } else {\n          this._segList.addPt(this._s1)\n        }\n        this._segList.addPt(this._offset1.p0)\n      }\n    }\n  }\n  createCircle(p) {\n    const pt = new Coordinate(p.x + this._distance, p.y)\n    this._segList.addPt(pt)\n    this.addDirectedFillet(p, 0.0, 2.0 * Math.PI, -1, this._distance)\n    this._segList.closeRing()\n  }\n  addBevelJoin(offset0, offset1) {\n    this._segList.addPt(offset0.p1)\n    this._segList.addPt(offset1.p0)\n  }\n  init(distance) {\n    this._distance = distance\n    this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0))\n    this._segList = new OffsetSegmentString()\n    this._segList.setPrecisionModel(this._precisionModel)\n    this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)\n  }\n  addCollinear(addStartPoint) {\n    this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2)\n    const numInt = this._li.getIntersectionNum()\n    if (numInt >= 2) \n      if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n        if (addStartPoint) this._segList.addPt(this._offset0.p1)\n        this._segList.addPt(this._offset1.p0)\n      } else {\n        this.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, Orientation.CLOCKWISE, this._distance)\n      }\n    \n  }\n  addNextSegment(p, addStartPoint) {\n    this._s0 = this._s1\n    this._s1 = this._s2\n    this._s2 = p\n    this._seg0.setCoordinates(this._s0, this._s1)\n    this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0)\n    this._seg1.setCoordinates(this._s1, this._s2)\n    this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1)\n    if (this._s1.equals(this._s2)) return null\n    const orientation = Orientation.index(this._s0, this._s1, this._s2)\n    const outsideTurn = orientation === Orientation.CLOCKWISE && this._side === Position.LEFT || orientation === Orientation.COUNTERCLOCKWISE && this._side === Position.RIGHT\n    if (orientation === 0) \n      this.addCollinear(addStartPoint)\n    else if (outsideTurn) \n      this.addOutsideTurn(orientation, addStartPoint)\n    else \n      this.addInsideTurn(orientation, addStartPoint)\n    \n  }\n  addLineEndCap(p0, p1) {\n    const seg = new LineSegment(p0, p1)\n    const offsetL = new LineSegment()\n    this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL)\n    const offsetR = new LineSegment()\n    this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR)\n    const dx = p1.x - p0.x\n    const dy = p1.y - p0.y\n    const angle = Math.atan2(dy, dx)\n    switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1)\n      this.addDirectedFillet(p1, angle + Math.PI / 2, angle - Math.PI / 2, Orientation.CLOCKWISE, this._distance)\n      this._segList.addPt(offsetR.p1)\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1)\n      this._segList.addPt(offsetR.p1)\n      break\n    case BufferParameters.CAP_SQUARE:\n      const squareCapSideOffset = new Coordinate()\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle)\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle)\n      const squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y)\n      const squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y)\n      this._segList.addPt(squareCapLOffset)\n      this._segList.addPt(squareCapROffset)\n      break\n    }\n  }\n  addOutsideTurn(orientation, addStartPoint) {\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n      this._segList.addPt(this._offset0.p1)\n      return null\n    }\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance)\n    } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n      this.addBevelJoin(this._offset0, this._offset1)\n    } else {\n      if (addStartPoint) this._segList.addPt(this._offset0.p1)\n      this.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance)\n      this._segList.addPt(this._offset1.p0)\n    }\n  }\n  createSquare(p) {\n    this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance))\n    this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance))\n    this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance))\n    this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance))\n    this._segList.closeRing()\n  }\n  addSegments(pt, isForward) {\n    this._segList.addPts(pt, isForward)\n  }\n  addFirstSegment() {\n    this._segList.addPt(this._offset1.p0)\n  }\n  addCornerFillet(p, p0, p1, direction, radius) {\n    const dx0 = p0.x - p.x\n    const dy0 = p0.y - p.y\n    let startAngle = Math.atan2(dy0, dx0)\n    const dx1 = p1.x - p.x\n    const dy1 = p1.y - p.y\n    const endAngle = Math.atan2(dy1, dx1)\n    if (direction === Orientation.CLOCKWISE) {\n      if (startAngle <= endAngle) startAngle += 2.0 * Math.PI\n    } else {\n      if (startAngle >= endAngle) startAngle -= 2.0 * Math.PI\n    }\n    this._segList.addPt(p0)\n    this.addDirectedFillet(p, startAngle, endAngle, direction, radius)\n    this._segList.addPt(p1)\n  }\n  closeRing() {\n    this._segList.closeRing()\n  }\n  hasNarrowConcaveAngle() {\n    return this._hasNarrowConcaveAngle\n  }\n}\nOffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR = 1.0E-3\nOffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-3\nOffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-6\nOffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR = 80\n","import GeometryFactory from '../../geom/GeometryFactory.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class OffsetSegmentString {\n  constructor() {\n    OffsetSegmentString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._ptList = null\n    this._precisionModel = null\n    this._minimimVertexDistance = 0.0\n    this._ptList = new ArrayList()\n  }\n  getCoordinates() {\n    const coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE)\n    return coord\n  }\n  setPrecisionModel(precisionModel) {\n    this._precisionModel = precisionModel\n  }\n  addPt(pt) {\n    const bufPt = new Coordinate(pt)\n    this._precisionModel.makePrecise(bufPt)\n    if (this.isRedundant(bufPt)) return null\n    this._ptList.add(bufPt)\n  }\n  reverse() {}\n  addPts(pt, isForward) {\n    if (isForward) \n      for (let i = 0; i < pt.length; i++) \n        this.addPt(pt[i])\n      \n    else \n      for (let i = pt.length - 1; i >= 0; i--) \n        this.addPt(pt[i])\n      \n    \n  }\n  isRedundant(pt) {\n    if (this._ptList.size() < 1) return false\n    const lastPt = this._ptList.get(this._ptList.size() - 1)\n    const ptDist = pt.distance(lastPt)\n    if (ptDist < this._minimimVertexDistance) return true\n    return false\n  }\n  toString() {\n    const fact = new GeometryFactory()\n    const line = fact.createLineString(this.getCoordinates())\n    return line.toString()\n  }\n  closeRing() {\n    if (this._ptList.size() < 1) return null\n    const startPt = new Coordinate(this._ptList.get(0))\n    const lastPt = this._ptList.get(this._ptList.size() - 1)\n    if (startPt.equals(lastPt)) return null\n    this._ptList.add(startPt)\n  }\n  setMinimumVertexDistance(minimimVertexDistance) {\n    this._minimimVertexDistance = minimimVertexDistance\n  }\n}\nOffsetSegmentString.COORDINATE_ARRAY_TYPE = new Array(0).fill(null)\n","import Orientation from './Orientation.js'\nexport default class Angle {\n  static toDegrees(radians) {\n    return radians * 180 / Math.PI\n  }\n  static isAcute(p0, p1, p2) {\n    const dx0 = p0.x - p1.x\n    const dy0 = p0.y - p1.y\n    const dx1 = p2.x - p1.x\n    const dy1 = p2.y - p1.y\n    const dotprod = dx0 * dx1 + dy0 * dy1\n    return dotprod > 0\n  }\n  static isObtuse(p0, p1, p2) {\n    const dx0 = p0.x - p1.x\n    const dy0 = p0.y - p1.y\n    const dx1 = p2.x - p1.x\n    const dy1 = p2.y - p1.y\n    const dotprod = dx0 * dx1 + dy0 * dy1\n    return dotprod < 0\n  }\n  static interiorAngle(p0, p1, p2) {\n    const anglePrev = Angle.angle(p1, p0)\n    const angleNext = Angle.angle(p1, p2)\n    return Math.abs(angleNext - anglePrev)\n  }\n  static normalizePositive(angle) {\n    if (angle < 0.0) {\n      while (angle < 0.0) angle += Angle.PI_TIMES_2\n      if (angle >= Angle.PI_TIMES_2) angle = 0.0\n    } else {\n      while (angle >= Angle.PI_TIMES_2) angle -= Angle.PI_TIMES_2\n      if (angle < 0.0) angle = 0.0\n    }\n    return angle\n  }\n  static angleBetween(tip1, tail, tip2) {\n    const a1 = Angle.angle(tail, tip1)\n    const a2 = Angle.angle(tail, tip2)\n    return Angle.diff(a1, a2)\n  }\n  static diff(ang1, ang2) {\n    let delAngle = null\n    if (ang1 < ang2) \n      delAngle = ang2 - ang1\n    else \n      delAngle = ang1 - ang2\n    \n    if (delAngle > Math.PI) \n      delAngle = 2 * Math.PI - delAngle\n    \n    return delAngle\n  }\n  static toRadians(angleDegrees) {\n    return angleDegrees * Math.PI / 180.0\n  }\n  static normalize(angle) {\n    while (angle > Math.PI) angle -= Angle.PI_TIMES_2\n    while (angle <= -Math.PI) angle += Angle.PI_TIMES_2\n    return angle\n  }\n  static angle() {\n    if (arguments.length === 1) {\n      const p = arguments[0]\n      return Math.atan2(p.y, p.x)\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0], p1 = arguments[1]\n      const dx = p1.x - p0.x\n      const dy = p1.y - p0.y\n      return Math.atan2(dy, dx)\n    }\n  }\n  static getTurn(ang1, ang2) {\n    const crossproduct = Math.sin(ang2 - ang1)\n    if (crossproduct > 0) \n      return Angle.COUNTERCLOCKWISE\n    \n    if (crossproduct < 0) \n      return Angle.CLOCKWISE\n    \n    return Angle.NONE\n  }\n  static angleBetweenOriented(tip1, tail, tip2) {\n    const a1 = Angle.angle(tail, tip1)\n    const a2 = Angle.angle(tail, tip2)\n    const angDel = a2 - a1\n    if (angDel <= -Math.PI) return angDel + Angle.PI_TIMES_2\n    if (angDel > Math.PI) return angDel - Angle.PI_TIMES_2\n    return angDel\n  }\n}\nAngle.PI_TIMES_2 = 2.0 * Math.PI\nAngle.PI_OVER_2 = Math.PI / 2.0\nAngle.PI_OVER_4 = Math.PI / 4.0\nAngle.COUNTERCLOCKWISE = Orientation.COUNTERCLOCKWISE\nAngle.CLOCKWISE = Orientation.CLOCKWISE\nAngle.NONE = Orientation.COLLINEAR\n","import PointLocation from '../../algorithm/PointLocation.js'\nimport TopologyException from '../../geom/TopologyException.js'\nimport MaximalEdgeRing from './MaximalEdgeRing.js'\nimport CoordinateArrays from '../../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Assert from '../../util/Assert.js'\nimport PlanarGraph from '../../geomgraph/PlanarGraph.js'\nexport default class PolygonBuilder {\n  constructor() {\n    PolygonBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geometryFactory = null\n    this._shellList = new ArrayList()\n    const geometryFactory = arguments[0]\n    this._geometryFactory = geometryFactory\n  }\n  static findEdgeRingContaining(testEr, shellList) {\n    const testRing = testEr.getLinearRing()\n    const testEnv = testRing.getEnvelopeInternal()\n    let testPt = testRing.getCoordinateN(0)\n    let minShell = null\n    let minShellEnv = null\n    for (let it = shellList.iterator(); it.hasNext(); ) {\n      const tryShell = it.next()\n      const tryShellRing = tryShell.getLinearRing()\n      const tryShellEnv = tryShellRing.getEnvelopeInternal()\n      if (tryShellEnv.equals(testEnv)) continue\n      if (!tryShellEnv.contains(testEnv)) continue\n      testPt = CoordinateArrays.ptNotInList(testRing.getCoordinates(), tryShellRing.getCoordinates())\n      let isContained = false\n      if (PointLocation.isInRing(testPt, tryShellRing.getCoordinates())) isContained = true\n      if (isContained) \n        if (minShell === null || minShellEnv.contains(tryShellEnv)) {\n          minShell = tryShell\n          minShellEnv = minShell.getLinearRing().getEnvelopeInternal()\n        }\n      \n    }\n    return minShell\n  }\n  sortShellsAndHoles(edgeRings, shellList, freeHoleList) {\n    for (let it = edgeRings.iterator(); it.hasNext(); ) {\n      const er = it.next()\n      if (er.isHole()) \n        freeHoleList.add(er)\n      else \n        shellList.add(er)\n      \n    }\n  }\n  computePolygons(shellList) {\n    const resultPolyList = new ArrayList()\n    for (let it = shellList.iterator(); it.hasNext(); ) {\n      const er = it.next()\n      const poly = er.toPolygon(this._geometryFactory)\n      resultPolyList.add(poly)\n    }\n    return resultPolyList\n  }\n  placeFreeHoles(shellList, freeHoleList) {\n    for (let it = freeHoleList.iterator(); it.hasNext(); ) {\n      const hole = it.next()\n      if (hole.getShell() === null) {\n        const shell = PolygonBuilder.findEdgeRingContaining(hole, shellList)\n        if (shell === null) throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0))\n        hole.setShell(shell)\n      }\n    }\n  }\n  buildMinimalEdgeRings(maxEdgeRings, shellList, freeHoleList) {\n    const edgeRings = new ArrayList()\n    for (let it = maxEdgeRings.iterator(); it.hasNext(); ) {\n      const er = it.next()\n      if (er.getMaxNodeDegree() > 2) {\n        er.linkDirectedEdgesForMinimalEdgeRings()\n        const minEdgeRings = er.buildMinimalRings()\n        const shell = this.findShell(minEdgeRings)\n        if (shell !== null) {\n          this.placePolygonHoles(shell, minEdgeRings)\n          shellList.add(shell)\n        } else {\n          freeHoleList.addAll(minEdgeRings)\n        }\n      } else {\n        edgeRings.add(er)\n      }\n    }\n    return edgeRings\n  }\n  buildMaximalEdgeRings(dirEdges) {\n    const maxEdgeRings = new ArrayList()\n    for (let it = dirEdges.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      if (de.isInResult() && de.getLabel().isArea()) \n        if (de.getEdgeRing() === null) {\n          const er = new MaximalEdgeRing(de, this._geometryFactory)\n          maxEdgeRings.add(er)\n          er.setInResult()\n        }\n      \n    }\n    return maxEdgeRings\n  }\n  placePolygonHoles(shell, minEdgeRings) {\n    for (let it = minEdgeRings.iterator(); it.hasNext(); ) {\n      const er = it.next()\n      if (er.isHole()) \n        er.setShell(shell)\n      \n    }\n  }\n  getPolygons() {\n    const resultPolyList = this.computePolygons(this._shellList)\n    return resultPolyList\n  }\n  findShell(minEdgeRings) {\n    let shellCount = 0\n    let shell = null\n    for (let it = minEdgeRings.iterator(); it.hasNext(); ) {\n      const er = it.next()\n      if (!er.isHole()) {\n        shell = er\n        shellCount++\n      }\n    }\n    Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list')\n    return shell\n  }\n  add() {\n    if (arguments.length === 1) {\n      const graph = arguments[0]\n      this.add(graph.getEdgeEnds(), graph.getNodes())\n    } else if (arguments.length === 2) {\n      const dirEdges = arguments[0], nodes = arguments[1]\n      PlanarGraph.linkResultDirectedEdges(nodes)\n      const maxEdgeRings = this.buildMaximalEdgeRings(dirEdges)\n      const freeHoleList = new ArrayList()\n      const edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList)\n      this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList)\n      this.placeFreeHoles(this._shellList, freeHoleList)\n    }\n  }\n}\n","import MinimalEdgeRing from './MinimalEdgeRing.js'\nimport EdgeRing from '../../geomgraph/EdgeRing.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class MaximalEdgeRing extends EdgeRing {\n  constructor() {\n    super()\n    MaximalEdgeRing.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const start = arguments[0], geometryFactory = arguments[1]\n    EdgeRing.constructor_.call(this, start, geometryFactory)\n  }\n  linkDirectedEdgesForMinimalEdgeRings() {\n    let de = this._startDe\n    do {\n      const node = de.getNode()\n      node.getEdges().linkMinimalDirectedEdges(this)\n      de = de.getNext()\n    } while (de !== this._startDe)\n  }\n  buildMinimalRings() {\n    const minEdgeRings = new ArrayList()\n    let de = this._startDe\n    do {\n      if (de.getMinEdgeRing() === null) {\n        const minEr = new MinimalEdgeRing(de, this._geometryFactory)\n        minEdgeRings.add(minEr)\n      }\n      de = de.getNext()\n    } while (de !== this._startDe)\n    return minEdgeRings\n  }\n  getNext(de) {\n    return de.getNext()\n  }\n  setEdgeRing(de, er) {\n    de.setEdgeRing(er)\n  }\n}\n","import EdgeRing from '../../geomgraph/EdgeRing.js'\nexport default class MinimalEdgeRing extends EdgeRing {\n  constructor() {\n    super()\n    MinimalEdgeRing.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const start = arguments[0], geometryFactory = arguments[1]\n    EdgeRing.constructor_.call(this, start, geometryFactory)\n  }\n  getNext(de) {\n    return de.getNextMin()\n  }\n  setEdgeRing(de, er) {\n    de.setMinEdgeRing(er)\n  }\n}\n","import Location from '../geom/Location.js'\nimport Position from './Position.js'\nimport PointLocation from '../algorithm/PointLocation.js'\nimport TopologyException from '../geom/TopologyException.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport Label from './Label.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Assert from '../util/Assert.js'\nexport default class EdgeRing {\n  constructor() {\n    EdgeRing.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._startDe = null\n    this._maxNodeDegree = -1\n    this._edges = new ArrayList()\n    this._pts = new ArrayList()\n    this._label = new Label(Location.NONE)\n    this._ring = null\n    this._isHole = null\n    this._shell = null\n    this._holes = new ArrayList()\n    this._geometryFactory = null\n    if (arguments.length === 0) {} else if (arguments.length === 2) {\n      const start = arguments[0], geometryFactory = arguments[1]\n      this._geometryFactory = geometryFactory\n      this.computePoints(start)\n      this.computeRing()\n    }\n  }\n  computeRing() {\n    if (this._ring !== null) return null\n    const coord = new Array(this._pts.size()).fill(null)\n    for (let i = 0; i < this._pts.size(); i++) \n      coord[i] = this._pts.get(i)\n    \n    this._ring = this._geometryFactory.createLinearRing(coord)\n    this._isHole = Orientation.isCCW(this._ring.getCoordinates())\n  }\n  isIsolated() {\n    return this._label.getGeometryCount() === 1\n  }\n  computePoints(start) {\n    this._startDe = start\n    let de = start\n    let isFirstEdge = true\n    do {\n      if (de === null) throw new TopologyException('Found null DirectedEdge')\n      if (de.getEdgeRing() === this) throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate())\n      this._edges.add(de)\n      const label = de.getLabel()\n      Assert.isTrue(label.isArea())\n      this.mergeLabel(label)\n      this.addPoints(de.getEdge(), de.isForward(), isFirstEdge)\n      isFirstEdge = false\n      this.setEdgeRing(de, this)\n      de = this.getNext(de)\n    } while (de !== this._startDe)\n  }\n  getLinearRing() {\n    return this._ring\n  }\n  getCoordinate(i) {\n    return this._pts.get(i)\n  }\n  computeMaxNodeDegree() {\n    this._maxNodeDegree = 0\n    let de = this._startDe\n    do {\n      const node = de.getNode()\n      const degree = node.getEdges().getOutgoingDegree(this)\n      if (degree > this._maxNodeDegree) this._maxNodeDegree = degree\n      de = this.getNext(de)\n    } while (de !== this._startDe)\n    this._maxNodeDegree *= 2\n  }\n  addPoints(edge, isForward, isFirstEdge) {\n    const edgePts = edge.getCoordinates()\n    if (isForward) {\n      let startIndex = 1\n      if (isFirstEdge) startIndex = 0\n      for (let i = startIndex; i < edgePts.length; i++) \n        this._pts.add(edgePts[i])\n      \n    } else {\n      let startIndex = edgePts.length - 2\n      if (isFirstEdge) startIndex = edgePts.length - 1\n      for (let i = startIndex; i >= 0; i--) \n        this._pts.add(edgePts[i])\n      \n    }\n  }\n  containsPoint(p) {\n    const shell = this.getLinearRing()\n    const env = shell.getEnvelopeInternal()\n    if (!env.contains(p)) return false\n    if (!PointLocation.isInRing(p, shell.getCoordinates())) return false\n    for (let i = this._holes.iterator(); i.hasNext(); ) {\n      const hole = i.next()\n      if (hole.containsPoint(p)) return false\n    }\n    return true\n  }\n  getMaxNodeDegree() {\n    if (this._maxNodeDegree < 0) this.computeMaxNodeDegree()\n    return this._maxNodeDegree\n  }\n  setShell(shell) {\n    this._shell = shell\n    if (shell !== null) shell.addHole(this)\n  }\n  toPolygon(geometryFactory) {\n    const holeLR = new Array(this._holes.size()).fill(null)\n    for (let i = 0; i < this._holes.size(); i++) \n      holeLR[i] = this._holes.get(i).getLinearRing()\n    \n    const poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR)\n    return poly\n  }\n  isHole() {\n    return this._isHole\n  }\n  setInResult() {\n    let de = this._startDe\n    do {\n      de.getEdge().setInResult(true)\n      de = de.getNext()\n    } while (de !== this._startDe)\n  }\n  addHole(ring) {\n    this._holes.add(ring)\n  }\n  isShell() {\n    return this._shell === null\n  }\n  getLabel() {\n    return this._label\n  }\n  getEdges() {\n    return this._edges\n  }\n  getShell() {\n    return this._shell\n  }\n  mergeLabel() {\n    if (arguments.length === 1) {\n      const deLabel = arguments[0]\n      this.mergeLabel(deLabel, 0)\n      this.mergeLabel(deLabel, 1)\n    } else if (arguments.length === 2) {\n      const deLabel = arguments[0], geomIndex = arguments[1]\n      const loc = deLabel.getLocation(geomIndex, Position.RIGHT)\n      if (loc === Location.NONE) return null\n      if (this._label.getLocation(geomIndex) === Location.NONE) {\n        this._label.setLocation(geomIndex, loc)\n        return null\n      }\n    }\n  }\n}\n","import hasInterface from '../../../../../hasInterface.js'\nimport Position from '../../geomgraph/Position.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport LineSegment from '../../geom/LineSegment.js'\nimport Comparable from '../../../../../java/lang/Comparable.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport List from '../../../../../java/util/List.js'\nimport DirectedEdge from '../../geomgraph/DirectedEdge.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport Collections from '../../../../../java/util/Collections.js'\nexport default class SubgraphDepthLocater {\n  constructor() {\n    SubgraphDepthLocater.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._subgraphs = null\n    this._seg = new LineSegment()\n    const subgraphs = arguments[0]\n    this._subgraphs = subgraphs\n  }\n  findStabbedSegments() {\n    if (arguments.length === 1) {\n      const stabbingRayLeftPt = arguments[0]\n      const stabbedSegments = new ArrayList()\n      for (let i = this._subgraphs.iterator(); i.hasNext(); ) {\n        const bsg = i.next()\n        const env = bsg.getEnvelope()\n        if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) continue\n        this.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments)\n      }\n      return stabbedSegments\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n        const stabbingRayLeftPt = arguments[0], dirEdge = arguments[1], stabbedSegments = arguments[2]\n        const pts = dirEdge.getEdge().getCoordinates()\n        for (let i = 0; i < pts.length - 1; i++) {\n          this._seg.p0 = pts[i]\n          this._seg.p1 = pts[i + 1]\n          if (this._seg.p0.y > this._seg.p1.y) this._seg.reverse()\n          const maxx = Math.max(this._seg.p0.x, this._seg.p1.x)\n          if (maxx < stabbingRayLeftPt.x) continue\n          if (this._seg.isHorizontal()) continue\n          if (stabbingRayLeftPt.y < this._seg.p0.y || stabbingRayLeftPt.y > this._seg.p1.y) continue\n          if (Orientation.index(this._seg.p0, this._seg.p1, stabbingRayLeftPt) === Orientation.RIGHT) continue\n          let depth = dirEdge.getDepth(Position.LEFT)\n          if (!this._seg.p0.equals(pts[i])) depth = dirEdge.getDepth(Position.RIGHT)\n          const ds = new DepthSegment(this._seg, depth)\n          stabbedSegments.add(ds)\n        }\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n        const stabbingRayLeftPt = arguments[0], dirEdges = arguments[1], stabbedSegments = arguments[2]\n        for (let i = dirEdges.iterator(); i.hasNext(); ) {\n          const de = i.next()\n          if (!de.isForward()) continue\n          this.findStabbedSegments(stabbingRayLeftPt, de, stabbedSegments)\n        }\n      }\n    }\n  }\n  getDepth(p) {\n    const stabbedSegments = this.findStabbedSegments(p)\n    if (stabbedSegments.size() === 0) return 0\n    const ds = Collections.min(stabbedSegments)\n    return ds._leftDepth\n  }\n}\nclass DepthSegment {\n  constructor() {\n    DepthSegment.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._upwardSeg = null\n    this._leftDepth = null\n    const seg = arguments[0], depth = arguments[1]\n    this._upwardSeg = new LineSegment(seg)\n    this._leftDepth = depth\n  }\n  compareX(seg0, seg1) {\n    const compare0 = seg0.p0.compareTo(seg1.p0)\n    if (compare0 !== 0) return compare0\n    return seg0.p1.compareTo(seg1.p1)\n  }\n  toString() {\n    return this._upwardSeg.toString()\n  }\n  compareTo(obj) {\n    const other = obj\n    if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) return 1\n    if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) return -1\n    let orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg)\n    if (orientIndex !== 0) return orientIndex\n    orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg)\n    if (orientIndex !== 0) return orientIndex\n    return this._upwardSeg.compareTo(other._upwardSeg)\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\nSubgraphDepthLocater.DepthSegment = DepthSegment\n","import Location from '../../geom/Location.js'\nimport LineString from '../../geom/LineString.js'\nimport Position from '../../geomgraph/Position.js'\nimport Point from '../../geom/Point.js'\nimport LinearRing from '../../geom/LinearRing.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport MultiPolygon from '../../geom/MultiPolygon.js'\nimport Label from '../../geomgraph/Label.js'\nimport CoordinateArrays from '../../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Distance from '../../algorithm/Distance.js'\nimport MultiLineString from '../../geom/MultiLineString.js'\nimport Triangle from '../../geom/Triangle.js'\nimport NodedSegmentString from '../../noding/NodedSegmentString.js'\nimport Polygon from '../../geom/Polygon.js'\nimport MultiPoint from '../../geom/MultiPoint.js'\nimport GeometryCollection from '../../geom/GeometryCollection.js'\nimport UnsupportedOperationException from '../../../../../java/lang/UnsupportedOperationException.js'\nexport default class OffsetCurveSetBuilder {\n  constructor() {\n    OffsetCurveSetBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputGeom = null\n    this._distance = null\n    this._curveBuilder = null\n    this._curveList = new ArrayList()\n    const inputGeom = arguments[0], distance = arguments[1], curveBuilder = arguments[2]\n    this._inputGeom = inputGeom\n    this._distance = distance\n    this._curveBuilder = curveBuilder\n  }\n  addRingSide(coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n    if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) return null\n    let leftLoc = cwLeftLoc\n    let rightLoc = cwRightLoc\n    if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && Orientation.isCCW(coord)) {\n      leftLoc = cwRightLoc\n      rightLoc = cwLeftLoc\n      side = Position.opposite(side)\n    }\n    const curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance)\n    this.addCurve(curve, leftLoc, rightLoc)\n  }\n  addRingBothSides(coord, distance) {\n    this.addRingSide(coord, distance, Position.LEFT, Location.EXTERIOR, Location.INTERIOR)\n    this.addRingSide(coord, distance, Position.RIGHT, Location.INTERIOR, Location.EXTERIOR)\n  }\n  addPoint(p) {\n    if (this._distance <= 0.0) return null\n    const coord = p.getCoordinates()\n    const curve = this._curveBuilder.getLineCurve(coord, this._distance)\n    this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR)\n  }\n  addPolygon(p) {\n    let offsetDistance = this._distance\n    let offsetSide = Position.LEFT\n    if (this._distance < 0.0) {\n      offsetDistance = -this._distance\n      offsetSide = Position.RIGHT\n    }\n    const shell = p.getExteriorRing()\n    const shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates())\n    if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) return null\n    if (this._distance <= 0.0 && shellCoord.length < 3) return null\n    this.addRingSide(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR)\n    for (let i = 0; i < p.getNumInteriorRing(); i++) {\n      const hole = p.getInteriorRingN(i)\n      const holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates())\n      if (this._distance > 0.0 && this.isErodedCompletely(hole, -this._distance)) continue\n      this.addRingSide(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR)\n    }\n  }\n  isTriangleErodedCompletely(triangleCoord, bufferDistance) {\n    const tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2])\n    const inCentre = tri.inCentre()\n    const distToCentre = Distance.pointToSegment(inCentre, tri.p0, tri.p1)\n    return distToCentre < Math.abs(bufferDistance)\n  }\n  addLineString(line) {\n    if (this._curveBuilder.isLineOffsetEmpty(this._distance)) return null\n    const coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates())\n    if (CoordinateArrays.isRing(coord) && !this._curveBuilder.getBufferParameters().isSingleSided()) {\n      this.addRingBothSides(coord, this._distance)\n    } else {\n      const curve = this._curveBuilder.getLineCurve(coord, this._distance)\n      this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR)\n    }\n  }\n  add(g) {\n    if (g.isEmpty()) return null\n    if (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getGeometryType())\n  }\n  addCurve(coord, leftLoc, rightLoc) {\n    if (coord === null || coord.length < 2) return null\n    const e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc))\n    this._curveList.add(e)\n  }\n  getCurves() {\n    this.add(this._inputGeom)\n    return this._curveList\n  }\n  isErodedCompletely(ring, bufferDistance) {\n    const ringCoord = ring.getCoordinates()\n    if (ringCoord.length < 4) return bufferDistance < 0\n    if (ringCoord.length === 4) return this.isTriangleErodedCompletely(ringCoord, bufferDistance)\n    const env = ring.getEnvelopeInternal()\n    const envMinDimension = Math.min(env.getHeight(), env.getWidth())\n    if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) return true\n    return false\n  }\n  addCollection(gc) {\n    for (let i = 0; i < gc.getNumGeometries(); i++) {\n      const g = gc.getGeometryN(i)\n      this.add(g)\n    }\n  }\n}\n","import DD from '../math/DD.js'\nimport Angle from '../algorithm/Angle.js'\nimport HCoordinate from '../algorithm/HCoordinate.js'\nimport Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class Triangle {\n  constructor() {\n    Triangle.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.p0 = null\n    this.p1 = null\n    this.p2 = null\n    const p0 = arguments[0], p1 = arguments[1], p2 = arguments[2]\n    this.p0 = p0\n    this.p1 = p1\n    this.p2 = p2\n  }\n  static isAcute(a, b, c) {\n    if (!Angle.isAcute(a, b, c)) return false\n    if (!Angle.isAcute(b, c, a)) return false\n    if (!Angle.isAcute(c, a, b)) return false\n    return true\n  }\n  static circumcentre(a, b, c) {\n    const cx = c.x\n    const cy = c.y\n    const ax = a.x - cx\n    const ay = a.y - cy\n    const bx = b.x - cx\n    const by = b.y - cy\n    const denom = 2 * Triangle.det(ax, ay, bx, by)\n    const numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by)\n    const numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by)\n    const ccx = cx - numx / denom\n    const ccy = cy + numy / denom\n    return new Coordinate(ccx, ccy)\n  }\n  static perpendicularBisector(a, b) {\n    const dx = b.x - a.x\n    const dy = b.y - a.y\n    const l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0)\n    const l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0)\n    return new HCoordinate(l1, l2)\n  }\n  static angleBisector(a, b, c) {\n    const len0 = b.distance(a)\n    const len2 = b.distance(c)\n    const frac = len0 / (len0 + len2)\n    const dx = c.x - a.x\n    const dy = c.y - a.y\n    const splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy)\n    return splitPt\n  }\n  static inCentre(a, b, c) {\n    const len0 = b.distance(c)\n    const len1 = a.distance(c)\n    const len2 = a.distance(b)\n    const circum = len0 + len1 + len2\n    const inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum\n    const inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum\n    return new Coordinate(inCentreX, inCentreY)\n  }\n  static area(a, b, c) {\n    return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n  }\n  static signedArea(a, b, c) {\n    return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n  }\n  static det(m00, m01, m10, m11) {\n    return m00 * m11 - m01 * m10\n  }\n  static interpolateZ(p, v0, v1, v2) {\n    const x0 = v0.x\n    const y0 = v0.y\n    const a = v1.x - x0\n    const b = v2.x - x0\n    const c = v1.y - y0\n    const d = v2.y - y0\n    const det = a * d - b * c\n    const dx = p.x - x0\n    const dy = p.y - y0\n    const t = (d * dx - b * dy) / det\n    const u = (-c * dx + a * dy) / det\n    const z = v0.getZ() + t * (v1.getZ() - v0.getZ()) + u * (v2.getZ() - v0.getZ())\n    return z\n  }\n  static longestSideLength(a, b, c) {\n    const lenAB = a.distance(b)\n    const lenBC = b.distance(c)\n    const lenCA = c.distance(a)\n    let maxLen = lenAB\n    if (lenBC > maxLen) maxLen = lenBC\n    if (lenCA > maxLen) maxLen = lenCA\n    return maxLen\n  }\n  static circumcentreDD(a, b, c) {\n    const ax = DD.valueOf(a.x).subtract(c.x)\n    const ay = DD.valueOf(a.y).subtract(c.y)\n    const bx = DD.valueOf(b.x).subtract(c.x)\n    const by = DD.valueOf(b.y).subtract(c.y)\n    const denom = DD.determinant(ax, ay, bx, by).multiply(2)\n    const asqr = ax.sqr().add(ay.sqr())\n    const bsqr = bx.sqr().add(by.sqr())\n    const numx = DD.determinant(ay, asqr, by, bsqr)\n    const numy = DD.determinant(ax, asqr, bx, bsqr)\n    const ccx = DD.valueOf(c.x).subtract(numx.divide(denom)).doubleValue()\n    const ccy = DD.valueOf(c.y).add(numy.divide(denom)).doubleValue()\n    return new Coordinate(ccx, ccy)\n  }\n  static area3D(a, b, c) {\n    const ux = b.x - a.x\n    const uy = b.y - a.y\n    const uz = b.getZ() - a.getZ()\n    const vx = c.x - a.x\n    const vy = c.y - a.y\n    const vz = c.getZ() - a.getZ()\n    const crossx = uy * vz - uz * vy\n    const crossy = uz * vx - ux * vz\n    const crossz = ux * vy - uy * vx\n    const absSq = crossx * crossx + crossy * crossy + crossz * crossz\n    const area3D = Math.sqrt(absSq) / 2\n    return area3D\n  }\n  static centroid(a, b, c) {\n    const x = (a.x + b.x + c.x) / 3\n    const y = (a.y + b.y + c.y) / 3\n    return new Coordinate(x, y)\n  }\n  interpolateZ(p) {\n    if (p === null) throw new IllegalArgumentException('Supplied point is null.')\n    return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n  }\n  longestSideLength() {\n    return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n  }\n  isAcute() {\n    return Triangle.isAcute(this.p0, this.p1, this.p2)\n  }\n  circumcentre() {\n    return Triangle.circumcentre(this.p0, this.p1, this.p2)\n  }\n  inCentre() {\n    return Triangle.inCentre(this.p0, this.p1, this.p2)\n  }\n  area() {\n    return Triangle.area(this.p0, this.p1, this.p2)\n  }\n  signedArea() {\n    return Triangle.signedArea(this.p0, this.p1, this.p2)\n  }\n  area3D() {\n    return Triangle.area3D(this.p0, this.p1, this.p2)\n  }\n  centroid() {\n    return Triangle.centroid(this.p0, this.p1, this.p2)\n  }\n}\n","import NotRepresentableException from './NotRepresentableException.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nexport default class HCoordinate {\n  constructor() {\n    HCoordinate.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.x = null\n    this.y = null\n    this.w = null\n    if (arguments.length === 0) {\n      this.x = 0.0\n      this.y = 0.0\n      this.w = 1.0\n    } else if (arguments.length === 1) {\n      const p = arguments[0]\n      this.x = p.x\n      this.y = p.y\n      this.w = 1.0\n    } else if (arguments.length === 2) {\n      if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n        const _x = arguments[0], _y = arguments[1]\n        this.x = _x\n        this.y = _y\n        this.w = 1.0\n      } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n        const p1 = arguments[0], p2 = arguments[1]\n        this.x = p1.y * p2.w - p2.y * p1.w\n        this.y = p2.x * p1.w - p1.x * p2.w\n        this.w = p1.x * p2.y - p2.x * p1.y\n      } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n        const p1 = arguments[0], p2 = arguments[1]\n        this.x = p1.y - p2.y\n        this.y = p2.x - p1.x\n        this.w = p1.x * p2.y - p2.x * p1.y\n      }\n    } else if (arguments.length === 3) {\n      const _x = arguments[0], _y = arguments[1], _w = arguments[2]\n      this.x = _x\n      this.y = _y\n      this.w = _w\n    } else if (arguments.length === 4) {\n      const p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3]\n      const px = p1.y - p2.y\n      const py = p2.x - p1.x\n      const pw = p1.x * p2.y - p2.x * p1.y\n      const qx = q1.y - q2.y\n      const qy = q2.x - q1.x\n      const qw = q1.x * q2.y - q2.x * q1.y\n      this.x = py * qw - qy * pw\n      this.y = qx * pw - px * qw\n      this.w = px * qy - qx * py\n    }\n  }\n  getCoordinate() {\n    const p = new Coordinate()\n    p.x = this.getX()\n    p.y = this.getY()\n    return p\n  }\n  getX() {\n    const a = this.x / this.w\n    if (Double.isNaN(a) || Double.isInfinite(a)) \n      throw new NotRepresentableException()\n    \n    return a\n  }\n  getY() {\n    const a = this.y / this.w\n    if (Double.isNaN(a) || Double.isInfinite(a)) \n      throw new NotRepresentableException()\n    \n    return a\n  }\n}\n","import Exception from '../../../../java/lang/Exception.js'\nexport default class NotRepresentableException extends Exception {\n  constructor() {\n    super()\n    NotRepresentableException.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    Exception.constructor_.call(this, 'Projective point not representable on the Cartesian plane.')\n  }\n}\n","import DirectedEdgeStar from '../../geomgraph/DirectedEdgeStar.js'\nimport Node from '../../geomgraph/Node.js'\nimport NodeFactory from '../../geomgraph/NodeFactory.js'\nexport default class OverlayNodeFactory extends NodeFactory {\n  constructor() {\n    super()\n  }\n  createNode(coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  }\n}\n","import Location from '../geom/Location.js'\nimport Position from './Position.js'\nimport TopologyException from '../geom/TopologyException.js'\nimport Label from './Label.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport EdgeEndStar from './EdgeEndStar.js'\nimport System from '../../../../java/lang/System.js'\nimport Quadrant from './Quadrant.js'\nimport Assert from '../util/Assert.js'\nexport default class DirectedEdgeStar extends EdgeEndStar {\n  constructor() {\n    super()\n    DirectedEdgeStar.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._resultAreaEdgeList = null\n    this._label = null\n    this._SCANNING_FOR_INCOMING = 1\n    this._LINKING_TO_OUTGOING = 2\n  }\n  linkResultDirectedEdges() {\n    this.getResultAreaEdges()\n    let firstOut = null\n    let incoming = null\n    let state = this._SCANNING_FOR_INCOMING\n    for (let i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      const nextOut = this._resultAreaEdgeList.get(i)\n      const nextIn = nextOut.getSym()\n      if (!nextOut.getLabel().isArea()) continue\n      if (firstOut === null && nextOut.isInResult()) firstOut = nextOut\n      switch (state) {\n      case this._SCANNING_FOR_INCOMING:\n        if (!nextIn.isInResult()) continue\n        incoming = nextIn\n        state = this._LINKING_TO_OUTGOING\n        break\n      case this._LINKING_TO_OUTGOING:\n        if (!nextOut.isInResult()) continue\n        incoming.setNext(nextOut)\n        state = this._SCANNING_FOR_INCOMING\n        break\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) throw new TopologyException('no outgoing dirEdge found', this.getCoordinate())\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge')\n      incoming.setNext(firstOut)\n    }\n  }\n  insert(ee) {\n    const de = ee\n    this.insertEdgeEnd(de, de)\n  }\n  getRightmostEdge() {\n    const edges = this.getEdges()\n    const size = edges.size()\n    if (size < 1) return null\n    const de0 = edges.get(0)\n    if (size === 1) return de0\n    const deLast = edges.get(size - 1)\n    const quad0 = de0.getQuadrant()\n    const quad1 = deLast.getQuadrant()\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) {\n      return de0\n    } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) {\n      return deLast\n    } else {\n      const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) return de0; else if (deLast.getDy() !== 0) return deLast\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node')\n    return null\n  }\n  updateLabelling(nodeLabel) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      const label = de.getLabel()\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0))\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1))\n    }\n  }\n  linkAllDirectedEdges() {\n    this.getEdges()\n    let prevOut = null\n    let firstIn = null\n    for (let i = this._edgeList.size() - 1; i >= 0; i--) {\n      const nextOut = this._edgeList.get(i)\n      const nextIn = nextOut.getSym()\n      if (firstIn === null) firstIn = nextIn\n      if (prevOut !== null) nextIn.setNext(prevOut)\n      prevOut = nextOut\n    }\n    firstIn.setNext(prevOut)\n  }\n  computeDepths() {\n    if (arguments.length === 1) {\n      const de = arguments[0]\n      const edgeIndex = this.findIndex(de)\n      const startDepth = de.getDepth(Position.LEFT)\n      const targetLastDepth = de.getDepth(Position.RIGHT)\n      const nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth)\n      const lastDepth = this.computeDepths(0, edgeIndex, nextDepth)\n      if (lastDepth !== targetLastDepth) throw new TopologyException('depth mismatch at ' + de.getCoordinate())\n    } else if (arguments.length === 3) {\n      const startIndex = arguments[0], endIndex = arguments[1], startDepth = arguments[2]\n      let currDepth = startDepth\n      for (let i = startIndex; i < endIndex; i++) {\n        const nextDe = this._edgeList.get(i)\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth)\n        currDepth = nextDe.getDepth(Position.LEFT)\n      }\n      return currDepth\n    }\n  }\n  mergeSymLabels() {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      const label = de.getLabel()\n      label.merge(de.getSym().getLabel())\n    }\n  }\n  linkMinimalDirectedEdges(er) {\n    let firstOut = null\n    let incoming = null\n    let state = this._SCANNING_FOR_INCOMING\n    for (let i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      const nextOut = this._resultAreaEdgeList.get(i)\n      const nextIn = nextOut.getSym()\n      if (firstOut === null && nextOut.getEdgeRing() === er) firstOut = nextOut\n      switch (state) {\n      case this._SCANNING_FOR_INCOMING:\n        if (nextIn.getEdgeRing() !== er) continue\n        incoming = nextIn\n        state = this._LINKING_TO_OUTGOING\n        break\n      case this._LINKING_TO_OUTGOING:\n        if (nextOut.getEdgeRing() !== er) continue\n        incoming.setNextMin(nextOut)\n        state = this._SCANNING_FOR_INCOMING\n        break\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge')\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge')\n      incoming.setNextMin(firstOut)\n    }\n  }\n  getOutgoingDegree() {\n    if (arguments.length === 0) {\n      let degree = 0\n      for (let it = this.iterator(); it.hasNext(); ) {\n        const de = it.next()\n        if (de.isInResult()) degree++\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      const er = arguments[0]\n      let degree = 0\n      for (let it = this.iterator(); it.hasNext(); ) {\n        const de = it.next()\n        if (de.getEdgeRing() === er) degree++\n      }\n      return degree\n    }\n  }\n  getLabel() {\n    return this._label\n  }\n  findCoveredLineEdges() {\n    let startLoc = Location.NONE\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const nextOut = it.next()\n      const nextIn = nextOut.getSym()\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) return null\n    let currLoc = startLoc\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const nextOut = it.next()\n      const nextIn = nextOut.getSym()\n      if (nextOut.isLineEdge()) {\n        nextOut.getEdge().setCovered(currLoc === Location.INTERIOR)\n      } else {\n        if (nextOut.isInResult()) currLoc = Location.EXTERIOR\n        if (nextIn.isInResult()) currLoc = Location.INTERIOR\n      }\n    }\n  }\n  computeLabelling(geom) {\n    super.computeLabelling.call(this, geom)\n    this._label = new Label(Location.NONE)\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ee = it.next()\n      const e = ee.getEdge()\n      const eLabel = e.getLabel()\n      for (let i = 0; i < 2; i++) {\n        const eLoc = eLabel.getLocation(i)\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) this._label.setLocation(i, Location.INTERIOR)\n      }\n    }\n  }\n  print(out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate())\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      out.print('out ')\n      de.print(out)\n      out.println()\n      out.print('in ')\n      de.getSym().print(out)\n      out.println()\n    }\n  }\n  getResultAreaEdges() {\n    if (this._resultAreaEdgeList !== null) return this._resultAreaEdgeList\n    this._resultAreaEdgeList = new ArrayList()\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      if (de.isInResult() || de.getSym().isInResult()) this._resultAreaEdgeList.add(de)\n    }\n    return this._resultAreaEdgeList\n  }\n}\n","import OrientedCoordinateArray from '../noding/OrientedCoordinateArray.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nexport default class EdgeList {\n  constructor() {\n    EdgeList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edges = new ArrayList()\n    this._ocaMap = new TreeMap()\n  }\n  print(out) {\n    out.print('MULTILINESTRING ( ')\n    for (let j = 0; j < this._edges.size(); j++) {\n      const e = this._edges.get(j)\n      if (j > 0) out.print(',')\n      out.print('(')\n      const pts = e.getCoordinates()\n      for (let i = 0; i < pts.length; i++) {\n        if (i > 0) out.print(',')\n        out.print(pts[i].x + ' ' + pts[i].y)\n      }\n      out.println(')')\n    }\n    out.print(')  ')\n  }\n  addAll(edgeColl) {\n    for (let i = edgeColl.iterator(); i.hasNext(); ) \n      this.add(i.next())\n    \n  }\n  findEdgeIndex(e) {\n    for (let i = 0; i < this._edges.size(); i++) \n      if (this._edges.get(i).equals(e)) return i\n    \n    return -1\n  }\n  iterator() {\n    return this._edges.iterator()\n  }\n  getEdges() {\n    return this._edges\n  }\n  get(i) {\n    return this._edges.get(i)\n  }\n  findEqualEdge(e) {\n    const oca = new OrientedCoordinateArray(e.getCoordinates())\n    const matchEdge = this._ocaMap.get(oca)\n    return matchEdge\n  }\n  add(e) {\n    this._edges.add(e)\n    const oca = new OrientedCoordinateArray(e.getCoordinates())\n    this._ocaMap.put(oca, e)\n  }\n}\n","import Comparable from '../../../../java/lang/Comparable.js'\nimport CoordinateArrays from '../geom/CoordinateArrays.js'\nexport default class OrientedCoordinateArray {\n  constructor() {\n    OrientedCoordinateArray.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pts = null\n    this._orientation = null\n    const pts = arguments[0]\n    this._pts = pts\n    this._orientation = OrientedCoordinateArray.orientation(pts)\n  }\n  static orientation(pts) {\n    return CoordinateArrays.increasingDirection(pts) === 1\n  }\n  static compareOriented(pts1, orientation1, pts2, orientation2) {\n    const dir1 = orientation1 ? 1 : -1\n    const dir2 = orientation2 ? 1 : -1\n    const limit1 = orientation1 ? pts1.length : -1\n    const limit2 = orientation2 ? pts2.length : -1\n    let i1 = orientation1 ? 0 : pts1.length - 1\n    let i2 = orientation2 ? 0 : pts2.length - 1\n    while (true) {\n      const compPt = pts1[i1].compareTo(pts2[i2])\n      if (compPt !== 0) return compPt\n      i1 += dir1\n      i2 += dir2\n      const done1 = i1 === limit1\n      const done2 = i2 === limit2\n      if (done1 && !done2) return -1\n      if (!done1 && done2) return 1\n      if (done1 && done2) return 0\n    }\n  }\n  compareTo(o1) {\n    const oca = o1\n    const comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation)\n    return comp\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import SegmentIntersector from './SegmentIntersector.js'\nexport default class IntersectionAdder {\n  constructor() {\n    IntersectionAdder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._hasIntersection = false\n    this._hasProper = false\n    this._hasProperInterior = false\n    this._hasInterior = false\n    this._properIntersectionPoint = null\n    this._li = null\n    this._isSelfIntersection = null\n    this.numIntersections = 0\n    this.numInteriorIntersections = 0\n    this.numProperIntersections = 0\n    this.numTests = 0\n    const li = arguments[0]\n    this._li = li\n  }\n  static isAdjacentSegments(i1, i2) {\n    return Math.abs(i1 - i2) === 1\n  }\n  isTrivialIntersection(e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1) \n      if (this._li.getIntersectionNum() === 1) {\n        if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) return true\n        if (e0.isClosed()) {\n          const maxSegIndex = e0.size() - 1\n          if (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) \n            return true\n          \n        }\n      }\n    \n    return false\n  }\n  getProperIntersectionPoint() {\n    return this._properIntersectionPoint\n  }\n  hasProperInteriorIntersection() {\n    return this._hasProperInterior\n  }\n  getLineIntersector() {\n    return this._li\n  }\n  hasProperIntersection() {\n    return this._hasProper\n  }\n  processIntersections(e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1 && segIndex0 === segIndex1) return null\n    this.numTests++\n    const p00 = e0.getCoordinates()[segIndex0]\n    const p01 = e0.getCoordinates()[segIndex0 + 1]\n    const p10 = e1.getCoordinates()[segIndex1]\n    const p11 = e1.getCoordinates()[segIndex1 + 1]\n    this._li.computeIntersection(p00, p01, p10, p11)\n    if (this._li.hasIntersection()) {\n      this.numIntersections++\n      if (this._li.isInteriorIntersection()) {\n        this.numInteriorIntersections++\n        this._hasInterior = true\n      }\n      if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n        this._hasIntersection = true\n        e0.addIntersections(this._li, segIndex0, 0)\n        e1.addIntersections(this._li, segIndex1, 1)\n        if (this._li.isProper()) {\n          this.numProperIntersections++\n          this._hasProper = true\n          this._hasProperInterior = true\n        }\n      }\n    }\n  }\n  hasIntersection() {\n    return this._hasIntersection\n  }\n  isDone() {\n    return false\n  }\n  hasInteriorIntersection() {\n    return this._hasInterior\n  }\n  get interfaces_() {\n    return [SegmentIntersector]\n  }\n}\n","import LineString from '../../../geom/LineString.js'\nimport CoordinateList from '../../../geom/CoordinateList.js'\nimport Coordinate from '../../../geom/Coordinate.js'\nimport Double from '../../../../../../java/lang/Double.js'\nimport LineSegment from '../../../geom/LineSegment.js'\nexport default class LineStringSnapper {\n  constructor() {\n    LineStringSnapper.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._snapTolerance = 0.0\n    this._srcPts = null\n    this._seg = new LineSegment()\n    this._allowSnappingToSourceVertices = false\n    this._isClosed = false\n    if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n      const srcLine = arguments[0], snapTolerance = arguments[1]\n      LineStringSnapper.constructor_.call(this, srcLine.getCoordinates(), snapTolerance)\n    } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n      const srcPts = arguments[0], snapTolerance = arguments[1]\n      this._srcPts = srcPts\n      this._isClosed = LineStringSnapper.isClosed(srcPts)\n      this._snapTolerance = snapTolerance\n    }\n  }\n  static isClosed(pts) {\n    if (pts.length <= 1) return false\n    return pts[0].equals2D(pts[pts.length - 1])\n  }\n  snapVertices(srcCoords, snapPts) {\n    const end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size()\n    for (let i = 0; i < end; i++) {\n      const srcPt = srcCoords.get(i)\n      const snapVert = this.findSnapForVertex(srcPt, snapPts)\n      if (snapVert !== null) {\n        srcCoords.set(i, new Coordinate(snapVert))\n        if (i === 0 && this._isClosed) srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert))\n      }\n    }\n  }\n  findSnapForVertex(pt, snapPts) {\n    for (let i = 0; i < snapPts.length; i++) {\n      if (pt.equals2D(snapPts[i])) return null\n      if (pt.distance(snapPts[i]) < this._snapTolerance) return snapPts[i]\n    }\n    return null\n  }\n  snapTo(snapPts) {\n    const coordList = new CoordinateList(this._srcPts)\n    this.snapVertices(coordList, snapPts)\n    this.snapSegments(coordList, snapPts)\n    const newPts = coordList.toCoordinateArray()\n    return newPts\n  }\n  snapSegments(srcCoords, snapPts) {\n    if (snapPts.length === 0) return null\n    let distinctPtCount = snapPts.length\n    if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) distinctPtCount = snapPts.length - 1\n    for (let i = 0; i < distinctPtCount; i++) {\n      const snapPt = snapPts[i]\n      const index = this.findSegmentIndexToSnap(snapPt, srcCoords)\n      if (index >= 0) \n        srcCoords.add(index + 1, new Coordinate(snapPt), false)\n      \n    }\n  }\n  findSegmentIndexToSnap(snapPt, srcCoords) {\n    let minDist = Double.MAX_VALUE\n    let snapIndex = -1\n    for (let i = 0; i < srcCoords.size() - 1; i++) {\n      this._seg.p0 = srcCoords.get(i)\n      this._seg.p1 = srcCoords.get(i + 1)\n      if (this._seg.p0.equals2D(snapPt) || this._seg.p1.equals2D(snapPt)) \n        if (this._allowSnappingToSourceVertices) continue; else return -1\n      \n      const dist = this._seg.distance(snapPt)\n      if (dist < this._snapTolerance && dist < minDist) {\n        minDist = dist\n        snapIndex = i\n      }\n    }\n    return snapIndex\n  }\n  setAllowSnappingToSourceVertices(allowSnappingToSourceVertices) {\n    this._allowSnappingToSourceVertices = allowSnappingToSourceVertices\n  }\n}\n","import LineString from '../LineString.js'\nimport GeometryFactory from '../GeometryFactory.js'\nimport LinearRing from '../LinearRing.js'\nimport MultiPolygon from '../MultiPolygon.js'\nimport GeometryCollection from '../GeometryCollection.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport MultiLineString from '../MultiLineString.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport Point from '../Point.js'\nimport Polygon from '../Polygon.js'\nimport MultiPoint from '../MultiPoint.js'\nexport default class GeometryTransformer {\n  constructor() {\n    GeometryTransformer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputGeom = null\n    this._factory = null\n    this._pruneEmptyGeometry = true\n    this._preserveGeometryCollectionType = true\n    this._preserveCollections = false\n    this._preserveType = false\n  }\n  transformPoint(geom, parent) {\n    return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n  }\n  transformPolygon(geom, parent) {\n    let isAllValidLinearRings = true\n    const shell = this.transformLinearRing(geom.getExteriorRing(), geom)\n    if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) isAllValidLinearRings = false\n    const holes = new ArrayList()\n    for (let i = 0; i < geom.getNumInteriorRing(); i++) {\n      const hole = this.transformLinearRing(geom.getInteriorRingN(i), geom)\n      if (hole === null || hole.isEmpty()) \n        continue\n      \n      if (!(hole instanceof LinearRing)) isAllValidLinearRings = false\n      holes.add(hole)\n    }\n    if (isAllValidLinearRings) {\n      return this._factory.createPolygon(shell, holes.toArray([]))\n    } else {\n      const components = new ArrayList()\n      if (shell !== null) components.add(shell)\n      components.addAll(holes)\n      return this._factory.buildGeometry(components)\n    }\n  }\n  createCoordinateSequence(coords) {\n    return this._factory.getCoordinateSequenceFactory().create(coords)\n  }\n  getInputGeometry() {\n    return this._inputGeom\n  }\n  transformMultiLineString(geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transformLineString(geom.getGeometryN(i), geom)\n      if (transformGeom === null) continue\n      if (transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    return this._factory.buildGeometry(transGeomList)\n  }\n  transformCoordinates(coords, parent) {\n    return this.copy(coords)\n  }\n  transformLineString(geom, parent) {\n    return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n  }\n  transformMultiPoint(geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transformPoint(geom.getGeometryN(i), geom)\n      if (transformGeom === null) continue\n      if (transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    return this._factory.buildGeometry(transGeomList)\n  }\n  transformMultiPolygon(geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transformPolygon(geom.getGeometryN(i), geom)\n      if (transformGeom === null) continue\n      if (transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    return this._factory.buildGeometry(transGeomList)\n  }\n  copy(seq) {\n    return seq.copy()\n  }\n  transformLinearRing(geom, parent) {\n    const seq = this.transformCoordinates(geom.getCoordinateSequence(), geom)\n    if (seq === null) return this._factory.createLinearRing(null)\n    const seqSize = seq.size()\n    if (seqSize > 0 && seqSize < 4 && !this._preserveType) return this._factory.createLineString(seq)\n    return this._factory.createLinearRing(seq)\n  }\n  transformGeometryCollection(geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transform(geom.getGeometryN(i))\n      if (transformGeom === null) continue\n      if (this._pruneEmptyGeometry && transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    if (this._preserveGeometryCollectionType) return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList))\n    return this._factory.buildGeometry(transGeomList)\n  }\n  transform(inputGeom) {\n    this._inputGeom = inputGeom\n    this._factory = inputGeom.getFactory()\n    if (inputGeom instanceof Point) return this.transformPoint(inputGeom, null)\n    if (inputGeom instanceof MultiPoint) return this.transformMultiPoint(inputGeom, null)\n    if (inputGeom instanceof LinearRing) return this.transformLinearRing(inputGeom, null)\n    if (inputGeom instanceof LineString) return this.transformLineString(inputGeom, null)\n    if (inputGeom instanceof MultiLineString) return this.transformMultiLineString(inputGeom, null)\n    if (inputGeom instanceof Polygon) return this.transformPolygon(inputGeom, null)\n    if (inputGeom instanceof MultiPolygon) return this.transformMultiPolygon(inputGeom, null)\n    if (inputGeom instanceof GeometryCollection) return this.transformGeometryCollection(inputGeom, null)\n    throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getGeometryType())\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport CoordinateSequenceFilter from '../geom/CoordinateSequenceFilter.js'\nimport CommonBits from './CommonBits.js'\nimport CoordinateFilter from '../geom/CoordinateFilter.js'\nexport default class CommonBitsRemover {\n  constructor() {\n    CommonBitsRemover.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._commonCoord = null\n    this._ccFilter = new CommonCoordinateFilter()\n  }\n  add(geom) {\n    geom.apply(this._ccFilter)\n    this._commonCoord = this._ccFilter.getCommonCoordinate()\n  }\n  removeCommonBits(geom) {\n    if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) return geom\n    const invCoord = new Coordinate(this._commonCoord)\n    invCoord.x = -invCoord.x\n    invCoord.y = -invCoord.y\n    const trans = new Translater(invCoord)\n    geom.apply(trans)\n    geom.geometryChanged()\n    return geom\n  }\n  addCommonBits(geom) {\n    const trans = new Translater(this._commonCoord)\n    geom.apply(trans)\n    geom.geometryChanged()\n  }\n  getCommonCoordinate() {\n    return this._commonCoord\n  }\n}\nclass CommonCoordinateFilter {\n  constructor() {\n    CommonCoordinateFilter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._commonBitsX = new CommonBits()\n    this._commonBitsY = new CommonBits()\n  }\n  filter(coord) {\n    this._commonBitsX.add(coord.x)\n    this._commonBitsY.add(coord.y)\n  }\n  getCommonCoordinate() {\n    return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n  }\n  get interfaces_() {\n    return [CoordinateFilter]\n  }\n}\nclass Translater {\n  constructor() {\n    Translater.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.trans = null\n    const trans = arguments[0]\n    this.trans = trans\n  }\n  filter(seq, i) {\n    const xp = seq.getOrdinate(i, 0) + this.trans.x\n    const yp = seq.getOrdinate(i, 1) + this.trans.y\n    seq.setOrdinate(i, 0, xp)\n    seq.setOrdinate(i, 1, yp)\n  }\n  isGeometryChanged() {\n    return true\n  }\n  isDone() {\n    return false\n  }\n  get interfaces_() {\n    return [CoordinateSequenceFilter]\n  }\n}\nCommonBitsRemover.CommonCoordinateFilter = CommonCoordinateFilter\nCommonBitsRemover.Translater = Translater\n","import Double from '../../../../java/lang/Double.js'\nimport Long from '../../../../java/lang/Long.js'\nexport default class CommonBits {\n  constructor() {\n    this._isFirst = true\n    this._commonMantissaBitsCount = 53\n    this._commonBits = new Long()\n    this._commonSignExp = null\n  }\n\n  getCommon() {\n    return Double.longBitsToDouble(this._commonBits)\n  }\n\n  add(num) {\n    const numBits = Double.doubleToLongBits(num)\n    if (this._isFirst) {\n      this._commonBits = numBits\n      this._commonSignExp = CommonBits.signExpBits(this._commonBits)\n      this._isFirst = false\n      return null\n    }\n    const numSignExp = CommonBits.signExpBits(numBits)\n    if (numSignExp !== this._commonSignExp) {\n      this._commonBits.high = 0 | 0\n      this._commonBits.low = 0 | 0\n      return null\n    }\n    this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits)\n    this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount))\n  }\n\n  toString() {\n    if (arguments.length === 1) {\n      const bits = arguments[0]\n      const x = Double.longBitsToDouble(bits)\n      const numStr = Long.toBinaryString(bits)\n      const padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr\n      const bitStr = padStr.substring(padStr.length - 64)\n      const str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]'\n      return str\n    }\n  }\n\n  getClass() {\n    return CommonBits\n  }\n\n  get interfaces_() {\n    return []\n  }\n\n  static getBit(bits, i) {\n    const mask = (1 << (i % 32))\n    if (i < 32) return (bits.low & mask) !== 0 ? 1 : 0\n\n    return (bits.high & mask) !== 0 ? 1 : 0\n  }\n\n  static signExpBits(num) {\n    return num.high >>> 20\n  }\n\n  static zeroLowerBits(bits, nBits) {\n    let prop = 'low'\n    if (nBits > 32) {\n      bits.low = 0 | 0\n      nBits %= 32\n      prop = 'high'\n    }\n    if (nBits > 0) {\n      const mask = (nBits < 32) ? (~((1 << nBits) - 1)) : 0\n      bits[prop] &= mask\n    }\n    return bits\n  }\n\n  static numCommonMostSigMantissaBits(num1, num2) {\n    let count = 0\n    for (let i = 52; i >= 0; i--) {\n      if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) return count\n      count++\n    }\n    return 52\n  }\n}\n","import PolygonBuilder from './PolygonBuilder.js'\nimport Position from '../../geomgraph/Position.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport LineBuilder from './LineBuilder.js'\nimport PointBuilder from './PointBuilder.js'\nimport SnapIfNeededOverlayOp from './snap/SnapIfNeededOverlayOp.js'\nimport Label from '../../geomgraph/Label.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Assert from '../../util/Assert.js'\nimport PlanarGraph from '../../geomgraph/PlanarGraph.js'\nimport PointLocator from '../../algorithm/PointLocator.js'\nimport Location from '../../geom/Location.js'\nimport EdgeNodingValidator from '../../geomgraph/EdgeNodingValidator.js'\nimport GeometryCollectionMapper from '../../geom/util/GeometryCollectionMapper.js'\nimport OverlayNodeFactory from './OverlayNodeFactory.js'\nimport GeometryGraphOperation from '../GeometryGraphOperation.js'\nimport EdgeList from '../../geomgraph/EdgeList.js'\nexport default class OverlayOp extends GeometryGraphOperation {\n  constructor() {\n    super()\n    OverlayOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._ptLocator = new PointLocator()\n    this._geomFact = null\n    this._resultGeom = null\n    this._graph = null\n    this._edgeList = new EdgeList()\n    this._resultPolyList = new ArrayList()\n    this._resultLineList = new ArrayList()\n    this._resultPointList = new ArrayList()\n    const g0 = arguments[0], g1 = arguments[1]\n    GeometryGraphOperation.constructor_.call(this, g0, g1)\n    this._graph = new PlanarGraph(new OverlayNodeFactory())\n    this._geomFact = g0.getFactory()\n  }\n  static overlayOp(geom0, geom1, opCode) {\n    const gov = new OverlayOp(geom0, geom1)\n    const geomOv = gov.getResultGeometry(opCode)\n    return geomOv\n  }\n  static union(geom, other) {\n    if (geom.isEmpty() || other.isEmpty()) {\n      if (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, geom, other, geom.getFactory())\n      if (geom.isEmpty()) return other.copy()\n      if (other.isEmpty()) return geom.copy()\n    }\n    if (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.UNION)\n  }\n  static intersection(geom, other) {\n    if (geom.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, geom, other, geom.getFactory())\n    if (geom.isGeometryCollection()) {\n      const g2 = other\n      return GeometryCollectionMapper.map(geom, new (class {\n        get interfaces_() {\n          return [MapOp]\n        }\n        map(g) {\n          return OverlayOp.intersection(g, g2)\n        }\n      })())\n    }\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.INTERSECTION)\n  }\n  static symDifference(geom, other) {\n    if (geom.isEmpty() || other.isEmpty()) {\n      if (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, geom, other, geom.getFactory())\n      if (geom.isEmpty()) return other.copy()\n      if (other.isEmpty()) return geom.copy()\n    }\n    if (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.SYMDIFFERENCE)\n  }\n  static resultDimension(opCode, g0, g1) {\n    const dim0 = g0.getDimension()\n    const dim1 = g1.getDimension()\n    let resultDimension = -1\n    switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1)\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1)\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1)\n      break\n    }\n    return resultDimension\n  }\n  static createEmptyResult(overlayOpCode, a, b, geomFact) {\n    let result = null\n    const resultDim = OverlayOp.resultDimension(overlayOpCode, a, b)\n    return result = geomFact.createEmpty(resultDim)\n  }\n  static difference(geom, other) {\n    if (geom.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, geom, other, geom.getFactory())\n    if (other.isEmpty()) return geom.copy()\n    if (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.DIFFERENCE)\n  }\n  static isResultOfOp() {\n    if (arguments.length === 2) {\n      const label = arguments[0], opCode = arguments[1]\n      const loc0 = label.getLocation(0)\n      const loc1 = label.getLocation(1)\n      return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n    } else if (arguments.length === 3) {\n      let loc0 = arguments[0], loc1 = arguments[1], overlayOpCode = arguments[2]\n      if (loc0 === Location.BOUNDARY) loc0 = Location.INTERIOR\n      if (loc1 === Location.BOUNDARY) loc1 = Location.INTERIOR\n      switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0 === Location.INTERIOR && loc1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0 === Location.INTERIOR || loc1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR || loc0 !== Location.INTERIOR && loc1 === Location.INTERIOR\n      }\n      return false\n    }\n  }\n  insertUniqueEdge(e) {\n    const existingEdge = this._edgeList.findEqualEdge(e)\n    if (existingEdge !== null) {\n      const existingLabel = existingEdge.getLabel()\n      let labelToMerge = e.getLabel()\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel())\n        labelToMerge.flip()\n      }\n      const depth = existingEdge.getDepth()\n      if (depth.isNull()) \n        depth.add(existingLabel)\n      \n      depth.add(labelToMerge)\n      existingLabel.merge(labelToMerge)\n    } else {\n      this._edgeList.add(e)\n    }\n  }\n  getGraph() {\n    return this._graph\n  }\n  cancelDuplicateResultEdges() {\n    for (let it = this._graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      const sym = de.getSym()\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false)\n        sym.setInResult(false)\n      }\n    }\n  }\n  mergeSymLabels() {\n    for (let nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().mergeSymLabels()\n    }\n  }\n  computeOverlay(opCode) {\n    this.copyPoints(0)\n    this.copyPoints(1)\n    this._arg[0].computeSelfNodes(this._li, false)\n    this._arg[1].computeSelfNodes(this._li, false)\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true)\n    const baseSplitEdges = new ArrayList()\n    this._arg[0].computeSplitEdges(baseSplitEdges)\n    this._arg[1].computeSplitEdges(baseSplitEdges)\n    const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges)\n    this.computeLabelsFromDepths()\n    this.replaceCollapsedEdges()\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges())\n    this._graph.addEdges(this._edgeList.getEdges())\n    this.computeLabelling()\n    this.labelIncompleteNodes()\n    this.findResultAreaEdges(opCode)\n    this.cancelDuplicateResultEdges()\n    const polyBuilder = new PolygonBuilder(this._geomFact)\n    polyBuilder.add(this._graph)\n    this._resultPolyList = polyBuilder.getPolygons()\n    const lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator)\n    this._resultLineList = lineBuilder.build(opCode)\n    const pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator)\n    this._resultPointList = pointBuilder.build(opCode)\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode)\n  }\n  findResultAreaEdges(opCode) {\n    for (let it = this._graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      const label = de.getLabel()\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) \n        de.setInResult(true)\n      \n    }\n  }\n  computeLabelsFromDepths() {\n    for (let it = this._edgeList.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const lbl = e.getLabel()\n      const depth = e.getDepth()\n      if (!depth.isNull()) {\n        depth.normalize()\n        for (let i = 0; i < 2; i++) \n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) \n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i)\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized')\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT))\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized')\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT))\n            }\n          \n        \n      }\n    }\n  }\n  isCoveredByA(coord) {\n    if (this.isCovered(coord, this._resultPolyList)) return true\n    return false\n  }\n  isCoveredByLA(coord) {\n    if (this.isCovered(coord, this._resultLineList)) return true\n    if (this.isCovered(coord, this._resultPolyList)) return true\n    return false\n  }\n  computeGeometry(resultPointList, resultLineList, resultPolyList, opcode) {\n    const geomList = new ArrayList()\n    geomList.addAll(resultPointList)\n    geomList.addAll(resultLineList)\n    geomList.addAll(resultPolyList)\n    if (geomList.isEmpty()) return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact)\n    return this._geomFact.buildGeometry(geomList)\n  }\n  isCovered(coord, geomList) {\n    for (let it = geomList.iterator(); it.hasNext(); ) {\n      const geom = it.next()\n      const loc = this._ptLocator.locate(coord, geom)\n      if (loc !== Location.EXTERIOR) return true\n    }\n    return false\n  }\n  replaceCollapsedEdges() {\n    const newEdges = new ArrayList()\n    for (let it = this._edgeList.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      if (e.isCollapsed()) {\n        it.remove()\n        newEdges.add(e.getCollapsedEdge())\n      }\n    }\n    this._edgeList.addAll(newEdges)\n  }\n  updateNodeLabelling() {\n    for (let nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      const lbl = node.getEdges().getLabel()\n      node.getLabel().merge(lbl)\n    }\n  }\n  getResultGeometry(overlayOpCode) {\n    this.computeOverlay(overlayOpCode)\n    return this._resultGeom\n  }\n  insertUniqueEdges(edges) {\n    for (let i = edges.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      this.insertUniqueEdge(e)\n    }\n  }\n  labelIncompleteNode(n, targetIndex) {\n    const loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry())\n    n.getLabel().setLocation(targetIndex, loc)\n  }\n  copyPoints(argIndex) {\n    for (let i = this._arg[argIndex].getNodeIterator(); i.hasNext(); ) {\n      const graphNode = i.next()\n      const newNode = this._graph.addNode(graphNode.getCoordinate())\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex))\n    }\n  }\n  computeLabelling() {\n    for (let nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().computeLabelling(this._arg)\n    }\n    this.mergeSymLabels()\n    this.updateNodeLabelling()\n  }\n  labelIncompleteNodes() {\n    for (let ni = this._graph.getNodes().iterator(); ni.hasNext(); ) {\n      const n = ni.next()\n      const label = n.getLabel()\n      if (n.isIsolated()) \n        if (label.isNull(0)) this.labelIncompleteNode(n, 0); else this.labelIncompleteNode(n, 1)\n      \n      n.getEdges().updateLabelling(label)\n    }\n  }\n}\nOverlayOp.INTERSECTION = 1\nOverlayOp.UNION = 2\nOverlayOp.DIFFERENCE = 3\nOverlayOp.SYMDIFFERENCE = 4\n","import ArrayList from '../../../../../java/util/ArrayList.js'\nimport Assert from '../../util/Assert.js'\nimport OverlayOp from './OverlayOp.js'\nexport default class LineBuilder {\n  constructor() {\n    LineBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._op = null\n    this._geometryFactory = null\n    this._ptLocator = null\n    this._lineEdgesList = new ArrayList()\n    this._resultLineList = new ArrayList()\n    const op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2]\n    this._op = op\n    this._geometryFactory = geometryFactory\n    this._ptLocator = ptLocator\n  }\n  collectLines(opCode) {\n    for (let it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      this.collectLineEdge(de, opCode, this._lineEdgesList)\n      this.collectBoundaryTouchEdge(de, opCode, this._lineEdgesList)\n    }\n  }\n  labelIsolatedLine(e, targetIndex) {\n    const loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex))\n    e.getLabel().setLocation(targetIndex, loc)\n  }\n  build(opCode) {\n    this.findCoveredLineEdges()\n    this.collectLines(opCode)\n    this.buildLines(opCode)\n    return this._resultLineList\n  }\n  collectLineEdge(de, opCode, edges) {\n    const label = de.getLabel()\n    const e = de.getEdge()\n    if (de.isLineEdge()) \n      if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n        edges.add(e)\n        de.setVisitedEdge(true)\n      }\n    \n  }\n  findCoveredLineEdges() {\n    for (let nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().findCoveredLineEdges()\n    }\n    for (let it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      const e = de.getEdge()\n      if (de.isLineEdge() && !e.isCoveredSet()) {\n        const isCovered = this._op.isCoveredByA(de.getCoordinate())\n        e.setCovered(isCovered)\n      }\n    }\n  }\n  labelIsolatedLines(edgesList) {\n    for (let it = edgesList.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      if (e.isIsolated()) \n        if (label.isNull(0)) this.labelIsolatedLine(e, 0); else this.labelIsolatedLine(e, 1)\n      \n    }\n  }\n  buildLines(opCode) {\n    for (let it = this._lineEdgesList.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const line = this._geometryFactory.createLineString(e.getCoordinates())\n      this._resultLineList.add(line)\n      e.setInResult(true)\n    }\n  }\n  collectBoundaryTouchEdge(de, opCode, edges) {\n    const label = de.getLabel()\n    if (de.isLineEdge()) return null\n    if (de.isVisited()) return null\n    if (de.isInteriorAreaEdge()) return null\n    if (de.getEdge().isInResult()) return null\n    Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult())\n    if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n      edges.add(de.getEdge())\n      de.setVisitedEdge(true)\n    }\n  }\n}\n","import ArrayList from '../../../../../java/util/ArrayList.js'\nimport OverlayOp from './OverlayOp.js'\nexport default class PointBuilder {\n  constructor() {\n    PointBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._op = null\n    this._geometryFactory = null\n    this._resultPointList = new ArrayList()\n    const op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2]\n    this._op = op\n    this._geometryFactory = geometryFactory\n  }\n  build(opCode) {\n    this.extractNonCoveredResultNodes(opCode)\n    return this._resultPointList\n  }\n  extractNonCoveredResultNodes(opCode) {\n    for (let nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\n      const n = nodeit.next()\n      if (n.isInResult()) continue\n      if (n.isIncidentEdgeInResult()) continue\n      if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n        const label = n.getLabel()\n        if (OverlayOp.isResultOfOp(label, opCode)) \n          this.filterCoveredNodeToPoint(n)\n        \n      }\n    }\n  }\n  filterCoveredNodeToPoint(n) {\n    const coord = n.getCoordinate()\n    if (!this._op.isCoveredByLA(coord)) {\n      const pt = this._geometryFactory.createPoint(coord)\n      this._resultPointList.add(pt)\n    }\n  }\n}\n","import BasicSegmentString from '../noding/BasicSegmentString.js'\nimport FastNodingValidator from '../noding/FastNodingValidator.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class EdgeNodingValidator {\n  constructor() {\n    EdgeNodingValidator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nv = null\n    const edges = arguments[0]\n    this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges))\n  }\n  static toSegmentStrings(edges) {\n    const segStrings = new ArrayList()\n    for (let i = edges.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      segStrings.add(new BasicSegmentString(e.getCoordinates(), e))\n    }\n    return segStrings\n  }\n  static checkValid(edges) {\n    const validator = new EdgeNodingValidator(edges)\n    validator.checkValid()\n  }\n  checkValid() {\n    this._nv.checkValid()\n  }\n}\n","import WKTWriter from '../io/WKTWriter.js'\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence.js'\nimport Octant from './Octant.js'\nimport SegmentString from './SegmentString.js'\nexport default class BasicSegmentString {\n  constructor() {\n    BasicSegmentString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pts = null\n    this._data = null\n    const pts = arguments[0], data = arguments[1]\n    this._pts = pts\n    this._data = data\n  }\n  getCoordinates() {\n    return this._pts\n  }\n  size() {\n    return this._pts.length\n  }\n  getCoordinate(i) {\n    return this._pts[i]\n  }\n  isClosed() {\n    return this._pts[0].equals(this._pts[this._pts.length - 1])\n  }\n  getSegmentOctant(index) {\n    if (index === this._pts.length - 1) return -1\n    return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n  }\n  setData(data) {\n    this._data = data\n  }\n  getData() {\n    return this._data\n  }\n  toString() {\n    return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n  }\n  get interfaces_() {\n    return [SegmentString]\n  }\n}\n","import WKTWriter from '../io/WKTWriter.js'\nimport MCIndexNoder from './MCIndexNoder.js'\nimport TopologyException from '../geom/TopologyException.js'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector.js'\nimport NodingIntersectionFinder from './NodingIntersectionFinder.js'\nexport default class FastNodingValidator {\n  constructor() {\n    FastNodingValidator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._segStrings = null\n    this._findAllIntersections = false\n    this._segInt = null\n    this._isValid = true\n    const segStrings = arguments[0]\n    this._segStrings = segStrings\n  }\n  static computeIntersections(segStrings) {\n    const nv = new FastNodingValidator(segStrings)\n    nv.setFindAllIntersections(true)\n    nv.isValid()\n    return nv.getIntersections()\n  }\n  isValid() {\n    this.execute()\n    return this._isValid\n  }\n  setFindAllIntersections(findAllIntersections) {\n    this._findAllIntersections = findAllIntersections\n  }\n  checkInteriorIntersections() {\n    this._isValid = true\n    this._segInt = new NodingIntersectionFinder(this._li)\n    this._segInt.setFindAllIntersections(this._findAllIntersections)\n    const noder = new MCIndexNoder()\n    noder.setSegmentIntersector(this._segInt)\n    noder.computeNodes(this._segStrings)\n    if (this._segInt.hasIntersection()) {\n      this._isValid = false\n      return null\n    }\n  }\n  checkValid() {\n    this.execute()\n    if (!this._isValid) throw new TopologyException(this.getErrorMessage(), this._segInt.getIntersection())\n  }\n  getErrorMessage() {\n    if (this._isValid) return 'no intersections found'\n    const intSegs = this._segInt.getIntersectionSegments()\n    return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n  }\n  execute() {\n    if (this._segInt !== null) return null\n    this.checkInteriorIntersections()\n  }\n  getIntersections() {\n    return this._segInt.getIntersections()\n  }\n}\n","import SegmentIntersector from './SegmentIntersector.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class NodingIntersectionFinder {\n  constructor() {\n    NodingIntersectionFinder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._findAllIntersections = false\n    this._isCheckEndSegmentsOnly = false\n    this._keepIntersections = true\n    this._isInteriorIntersectionsOnly = false\n    this._li = null\n    this._interiorIntersection = null\n    this._intSegments = null\n    this._intersections = new ArrayList()\n    this._intersectionCount = 0\n    const li = arguments[0]\n    this._li = li\n    this._interiorIntersection = null\n  }\n  static createAllIntersectionsFinder(li) {\n    const finder = new NodingIntersectionFinder(li)\n    finder.setFindAllIntersections(true)\n    return finder\n  }\n  static isInteriorVertexIntersection() {\n    if (arguments.length === 4) {\n      const p0 = arguments[0], p1 = arguments[1], isEnd0 = arguments[2], isEnd1 = arguments[3]\n      if (isEnd0 && isEnd1) return false\n      if (p0.equals2D(p1)) \n        return true\n      \n      return false\n    } else if (arguments.length === 8) {\n      const p00 = arguments[0], p01 = arguments[1], p10 = arguments[2], p11 = arguments[3], isEnd00 = arguments[4], isEnd01 = arguments[5], isEnd10 = arguments[6], isEnd11 = arguments[7]\n      if (NodingIntersectionFinder.isInteriorVertexIntersection(p00, p10, isEnd00, isEnd10)) return true\n      if (NodingIntersectionFinder.isInteriorVertexIntersection(p00, p11, isEnd00, isEnd11)) return true\n      if (NodingIntersectionFinder.isInteriorVertexIntersection(p01, p10, isEnd01, isEnd10)) return true\n      if (NodingIntersectionFinder.isInteriorVertexIntersection(p01, p11, isEnd01, isEnd11)) return true\n      return false\n    }\n  }\n  static createInteriorIntersectionCounter(li) {\n    const finder = new NodingIntersectionFinder(li)\n    finder.setInteriorIntersectionsOnly(true)\n    finder.setFindAllIntersections(true)\n    finder.setKeepIntersections(false)\n    return finder\n  }\n  static createIntersectionCounter(li) {\n    const finder = new NodingIntersectionFinder(li)\n    finder.setFindAllIntersections(true)\n    finder.setKeepIntersections(false)\n    return finder\n  }\n  static isEndSegment(segStr, index) {\n    if (index === 0) return true\n    if (index >= segStr.size() - 2) return true\n    return false\n  }\n  static createAnyIntersectionFinder(li) {\n    return new NodingIntersectionFinder(li)\n  }\n  static createInteriorIntersectionsFinder(li) {\n    const finder = new NodingIntersectionFinder(li)\n    finder.setFindAllIntersections(true)\n    finder.setInteriorIntersectionsOnly(true)\n    return finder\n  }\n  count() {\n    return this._intersectionCount\n  }\n  getIntersections() {\n    return this._intersections\n  }\n  setFindAllIntersections(findAllIntersections) {\n    this._findAllIntersections = findAllIntersections\n  }\n  setKeepIntersections(keepIntersections) {\n    this._keepIntersections = keepIntersections\n  }\n  getIntersection() {\n    return this._interiorIntersection\n  }\n  processIntersections(e0, segIndex0, e1, segIndex1) {\n    if (!this._findAllIntersections && this.hasIntersection()) return null\n    const isSameSegString = e0 === e1\n    const isSameSegment = isSameSegString && segIndex0 === segIndex1\n    if (isSameSegment) return null\n    if (this._isCheckEndSegmentsOnly) {\n      const isEndSegPresent = NodingIntersectionFinder.isEndSegment(e0, segIndex0) || NodingIntersectionFinder.isEndSegment(e1, segIndex1)\n      if (!isEndSegPresent) return null\n    }\n    const p00 = e0.getCoordinate(segIndex0)\n    const p01 = e0.getCoordinate(segIndex0 + 1)\n    const p10 = e1.getCoordinate(segIndex1)\n    const p11 = e1.getCoordinate(segIndex1 + 1)\n    const isEnd00 = segIndex0 === 0\n    const isEnd01 = segIndex0 + 2 === e0.size()\n    const isEnd10 = segIndex1 === 0\n    const isEnd11 = segIndex1 + 2 === e1.size()\n    this._li.computeIntersection(p00, p01, p10, p11)\n    const isInteriorInt = this._li.hasIntersection() && this._li.isInteriorIntersection()\n    let isInteriorVertexInt = false\n    if (!this._isInteriorIntersectionsOnly) {\n      const isAdjacentSegment = isSameSegString && Math.abs(segIndex1 - segIndex0) <= 1\n      isInteriorVertexInt = !isAdjacentSegment && NodingIntersectionFinder.isInteriorVertexIntersection(p00, p01, p10, p11, isEnd00, isEnd01, isEnd10, isEnd11)\n    }\n    if (isInteriorInt || isInteriorVertexInt) {\n      this._intSegments = new Array(4).fill(null)\n      this._intSegments[0] = p00\n      this._intSegments[1] = p01\n      this._intSegments[2] = p10\n      this._intSegments[3] = p11\n      this._interiorIntersection = this._li.getIntersection(0)\n      if (this._keepIntersections) this._intersections.add(this._interiorIntersection)\n      this._intersectionCount++\n    }\n  }\n  hasIntersection() {\n    return this._interiorIntersection !== null\n  }\n  isDone() {\n    if (this._findAllIntersections) return false\n    return this._interiorIntersection !== null\n  }\n  setInteriorIntersectionsOnly(isInteriorIntersectionsOnly) {\n    this._isInteriorIntersectionsOnly = isInteriorIntersectionsOnly\n  }\n  setCheckEndSegmentsOnly(isCheckEndSegmentsOnly) {\n    this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly\n  }\n  getIntersectionSegments() {\n    return this._intSegments\n  }\n  get interfaces_() {\n    return [SegmentIntersector]\n  }\n}\n","import GeometryFactory from '../GeometryFactory.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class GeometryCollectionMapper {\n  constructor() {\n    GeometryCollectionMapper.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._mapOp = null\n    const mapOp = arguments[0]\n    this._mapOp = mapOp\n  }\n  static map(gc, op) {\n    const mapper = new GeometryCollectionMapper(op)\n    return mapper.map(gc)\n  }\n  map(gc) {\n    const mapped = new ArrayList()\n    for (let i = 0; i < gc.getNumGeometries(); i++) {\n      const g = this._mapOp.map(gc.getGeometryN(i))\n      if (!g.isEmpty()) mapped.add(g)\n    }\n    return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n  }\n}\n","import LineString from '../../geom/LineString.js'\nimport Geometry from '../../geom/Geometry.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport Collection from '../../../../../java/util/Collection.js'\nimport Point from '../../geom/Point.js'\nimport Polygon from '../../geom/Polygon.js'\nimport GeometryCollection from '../../geom/GeometryCollection.js'\nimport Dimension from '../../geom/Dimension.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport GeometryFilter from '../../geom/GeometryFilter.js'\nimport Assert from '../../util/Assert.js'\nexport default class InputExtracter {\n  constructor() {\n    InputExtracter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geomFactory = null\n    this._polygons = new ArrayList()\n    this._lines = new ArrayList()\n    this._points = new ArrayList()\n    this._dimension = Dimension.FALSE\n  }\n  static extract() {\n    if (hasInterface(arguments[0], Collection)) {\n      const geoms = arguments[0]\n      const extracter = new InputExtracter()\n      extracter.add(geoms)\n      return extracter\n    } else if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      const extracter = new InputExtracter()\n      extracter.add(geom)\n      return extracter\n    }\n  }\n  getFactory() {\n    return this._geomFactory\n  }\n  filter(geom) {\n    this.recordDimension(geom.getDimension())\n    if (geom instanceof GeometryCollection) \n      return null\n    \n    if (geom.isEmpty()) return null\n    if (geom instanceof Polygon) {\n      this._polygons.add(geom)\n      return null\n    } else if (geom instanceof LineString) {\n      this._lines.add(geom)\n      return null\n    } else if (geom instanceof Point) {\n      this._points.add(geom)\n      return null\n    }\n    Assert.shouldNeverReachHere('Unhandled geometry type: ' + geom.getGeometryType())\n  }\n  getExtract(dim) {\n    switch (dim) {\n    case 0:\n      return this._points\n    case 1:\n      return this._lines\n    case 2:\n      return this._polygons\n    }\n    Assert.shouldNeverReachHere('Invalid dimension: ' + dim)\n    return null\n  }\n  recordDimension(dim) {\n    if (dim > this._dimension) this._dimension = dim\n  }\n  getDimension() {\n    return this._dimension\n  }\n  isEmpty() {\n    return this._polygons.isEmpty() && this._lines.isEmpty() && this._points.isEmpty()\n  }\n  add() {\n    if (hasInterface(arguments[0], Collection)) {\n      const geoms = arguments[0]\n      for (const geom of geoms) \n        this.add(geom)\n      \n    } else if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      if (this._geomFactory === null) this._geomFactory = geom.getFactory()\n      geom.apply(this)\n    }\n  }\n  get interfaces_() {\n    return [GeometryFilter]\n  }\n}\n","import TreeSet from '../../../../../java/util/TreeSet.js'\nimport GeometryCombiner from '../../geom/util/GeometryCombiner.js'\nimport CoordinateArrays from '../../geom/CoordinateArrays.js'\nimport PointLocator from '../../algorithm/PointLocator.js'\nimport Location from '../../geom/Location.js'\nexport default class PointGeometryUnion {\n  constructor() {\n    PointGeometryUnion.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pointGeom = null\n    this._otherGeom = null\n    this._geomFact = null\n    const pointGeom = arguments[0], otherGeom = arguments[1]\n    this._pointGeom = pointGeom\n    this._otherGeom = otherGeom\n    this._geomFact = otherGeom.getFactory()\n  }\n  static union(pointGeom, otherGeom) {\n    const unioner = new PointGeometryUnion(pointGeom, otherGeom)\n    return unioner.union()\n  }\n  union() {\n    const locater = new PointLocator()\n    const exteriorCoords = new TreeSet()\n    for (let i = 0; i < this._pointGeom.getNumGeometries(); i++) {\n      const point = this._pointGeom.getGeometryN(i)\n      const coord = point.getCoordinate()\n      const loc = locater.locate(coord, this._otherGeom)\n      if (loc === Location.EXTERIOR) exteriorCoords.add(coord)\n    }\n    if (exteriorCoords.size() === 0) return this._otherGeom\n    let ptComp = null\n    const coords = CoordinateArrays.toCoordinateArray(exteriorCoords)\n    if (coords.length === 1) \n      ptComp = this._geomFact.createPoint(coords[0])\n    else \n      ptComp = this._geomFact.createMultiPointFromCoords(coords)\n    \n    return GeometryCombiner.combine(ptComp, this._otherGeom)\n  }\n}\n","import ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class GeometryCombiner {\n  constructor() {\n    GeometryCombiner.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geomFactory = null\n    this._skipEmpty = false\n    this._inputGeoms = null\n    const geoms = arguments[0]\n    this._geomFactory = GeometryCombiner.extractFactory(geoms)\n    this._inputGeoms = geoms\n  }\n  static extractFactory(geoms) {\n    if (geoms.isEmpty()) return null\n    return geoms.iterator().next().getFactory()\n  }\n  static createList() {\n    if (arguments.length === 2) {\n      const obj0 = arguments[0], obj1 = arguments[1]\n      const list = new ArrayList()\n      list.add(obj0)\n      list.add(obj1)\n      return list\n    } else if (arguments.length === 3) {\n      const obj0 = arguments[0], obj1 = arguments[1], obj2 = arguments[2]\n      const list = new ArrayList()\n      list.add(obj0)\n      list.add(obj1)\n      list.add(obj2)\n      return list\n    }\n  }\n  static combine() {\n    if (arguments.length === 1) {\n      const geoms = arguments[0]\n      const combiner = new GeometryCombiner(geoms)\n      return combiner.combine()\n    } else if (arguments.length === 2) {\n      const g0 = arguments[0], g1 = arguments[1]\n      const combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1))\n      return combiner.combine()\n    } else if (arguments.length === 3) {\n      const g0 = arguments[0], g1 = arguments[1], g2 = arguments[2]\n      const combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1, g2))\n      return combiner.combine()\n    }\n  }\n  extractElements(geom, elems) {\n    if (geom === null) return null\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const elemGeom = geom.getGeometryN(i)\n      if (this._skipEmpty && elemGeom.isEmpty()) continue\n      elems.add(elemGeom)\n    }\n  }\n  combine() {\n    const elems = new ArrayList()\n    for (let i = this._inputGeoms.iterator(); i.hasNext(); ) {\n      const g = i.next()\n      this.extractElements(g, elems)\n    }\n    if (elems.size() === 0) {\n      if (this._geomFactory !== null) \n        return this._geomFactory.createGeometryCollection()\n      \n      return null\n    }\n    return this._geomFactory.buildGeometry(elems)\n  }\n}\n","import PolygonExtracter from '../../geom/util/PolygonExtracter.js'\nimport OverlapUnion from './OverlapUnion.js'\nimport STRtree from '../../index/strtree/STRtree.js'\nimport Geometry from '../../geom/Geometry.js'\nimport List from '../../../../../java/util/List.js'\nimport IllegalStateException from '../../../../../java/lang/IllegalStateException.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport GeometryFactory from '../../geom/GeometryFactory.js'\nimport Polygonal from '../../geom/Polygonal.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class CascadedPolygonUnion {\n  constructor() {\n    CascadedPolygonUnion.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputPolys = null\n    this._geomFactory = null\n    const polys = arguments[0]\n    this._inputPolys = polys\n    if (this._inputPolys === null) this._inputPolys = new ArrayList()\n  }\n  static getGeometry(list, index) {\n    if (index >= list.size()) return null\n    return list.get(index)\n  }\n  static union(polys) {\n    const op = new CascadedPolygonUnion(polys)\n    return op.union()\n  }\n  static restrictToPolygons(g) {\n    if (hasInterface(g, Polygonal)) \n      return g\n    \n    const polygons = PolygonExtracter.getPolygons(g)\n    if (polygons.size() === 1) return polygons.get(0)\n    return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n  }\n  reduceToGeometries(geomTree) {\n    const geoms = new ArrayList()\n    for (let i = geomTree.iterator(); i.hasNext(); ) {\n      const o = i.next()\n      let geom = null\n      if (hasInterface(o, List)) \n        geom = this.unionTree(o)\n      else if (o instanceof Geometry) \n        geom = o\n      \n      geoms.add(geom)\n    }\n    return geoms\n  }\n  union() {\n    if (this._inputPolys === null) throw new IllegalStateException('union() method cannot be called twice')\n    if (this._inputPolys.isEmpty()) return null\n    this._geomFactory = this._inputPolys.iterator().next().getFactory()\n    const index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY)\n    for (let i = this._inputPolys.iterator(); i.hasNext(); ) {\n      const item = i.next()\n      index.insert(item.getEnvelopeInternal(), item)\n    }\n    this._inputPolys = null\n    const itemTree = index.itemsTree()\n    const unionAll = this.unionTree(itemTree)\n    return unionAll\n  }\n  binaryUnion() {\n    if (arguments.length === 1) {\n      const geoms = arguments[0]\n      return this.binaryUnion(geoms, 0, geoms.size())\n    } else if (arguments.length === 3) {\n      const geoms = arguments[0], start = arguments[1], end = arguments[2]\n      if (end - start <= 1) {\n        const g0 = CascadedPolygonUnion.getGeometry(geoms, start)\n        return this.unionSafe(g0, null)\n      } else if (end - start === 2) {\n        return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms, start), CascadedPolygonUnion.getGeometry(geoms, start + 1))\n      } else {\n        const mid = Math.trunc((end + start) / 2)\n        const g0 = this.binaryUnion(geoms, start, mid)\n        const g1 = this.binaryUnion(geoms, mid, end)\n        return this.unionSafe(g0, g1)\n      }\n    }\n  }\n  unionSafe(g0, g1) {\n    if (g0 === null && g1 === null) return null\n    if (g0 === null) return g1.copy()\n    if (g1 === null) return g0.copy()\n    return this.unionActual(g0, g1)\n  }\n  unionActual(g0, g1) {\n    const union = OverlapUnion.union(g0, g1)\n    \n    return CascadedPolygonUnion.restrictToPolygons(union)\n  }\n  unionTree(geomTree) {\n    const geoms = this.reduceToGeometries(geomTree)\n    const union = this.binaryUnion(geoms)\n    return union\n  }\n}\nCascadedPolygonUnion.STRTREE_NODE_CAPACITY = 4\n","import Polygon from '../Polygon.js'\nimport GeometryCollection from '../GeometryCollection.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport GeometryFilter from '../GeometryFilter.js'\nexport default class PolygonExtracter {\n  constructor() {\n    PolygonExtracter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._comps = null\n    const comps = arguments[0]\n    this._comps = comps\n  }\n  static getPolygons() {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      return PolygonExtracter.getPolygons(geom, new ArrayList())\n    } else if (arguments.length === 2) {\n      const geom = arguments[0], list = arguments[1]\n      if (geom instanceof Polygon) \n        list.add(geom)\n      else if (geom instanceof GeometryCollection) \n        geom.apply(new PolygonExtracter(list))\n      \n      return list\n    }\n  }\n  filter(geom) {\n    if (geom instanceof Polygon) this._comps.add(geom)\n  }\n  get interfaces_() {\n    return [GeometryFilter]\n  }\n}\n","import HashSet from '../../../../../java/util/HashSet.js'\nimport UnionOp from './UnionOp.js'\nimport TopologyException from '../../geom/TopologyException.js'\nimport LineSegment from '../../geom/LineSegment.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport CoordinateSequenceFilter from '../../geom/CoordinateSequenceFilter.js'\nimport BufferOp from '../buffer/BufferOp.js'\nimport GeometryCombiner from '../../geom/util/GeometryCombiner.js'\nexport default class OverlapUnion {\n  constructor() {\n    OverlapUnion.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geomFactory = null\n    this._g0 = null\n    this._g1 = null\n    this._isUnionSafe = null\n    const g0 = arguments[0], g1 = arguments[1]\n    this._g0 = g0\n    this._g1 = g1\n    this._geomFactory = g0.getFactory()\n  }\n  static containsProperly() {\n    if (arguments.length === 2) {\n      const env = arguments[0], p = arguments[1]\n      if (env.isNull()) return false\n      return p.getX() > env.getMinX() && p.getX() < env.getMaxX() && p.getY() > env.getMinY() && p.getY() < env.getMaxY()\n    } else if (arguments.length === 3) {\n      const env = arguments[0], p0 = arguments[1], p1 = arguments[2]\n      return OverlapUnion.containsProperly(env, p0) && OverlapUnion.containsProperly(env, p1)\n    }\n  }\n  static union(g0, g1) {\n    const union = new OverlapUnion(g0, g1)\n    return union.union()\n  }\n  static intersects(env, p0, p1) {\n    return env.intersects(p0) || env.intersects(p1)\n  }\n  static overlapEnvelope(g0, g1) {\n    const g0Env = g0.getEnvelopeInternal()\n    const g1Env = g1.getEnvelopeInternal()\n    const overlapEnv = g0Env.intersection(g1Env)\n    return overlapEnv\n  }\n  static extractBorderSegments(geom, env, segs) {\n    geom.apply(new (class {\n      get interfaces_() {\n        return [CoordinateSequenceFilter]\n      }\n      filter(seq, i) {\n        if (i <= 0) return null\n        const p0 = seq.getCoordinate(i - 1)\n        const p1 = seq.getCoordinate(i)\n        const isBorder = OverlapUnion.intersects(env, p0, p1) && !OverlapUnion.containsProperly(env, p0, p1)\n        if (isBorder) {\n          const seg = new LineSegment(p0, p1)\n          segs.add(seg)\n        }\n      }\n      isDone() {\n        return false\n      }\n      isGeometryChanged() {\n        return false\n      }\n    })())\n  }\n  static unionBuffer(g0, g1) {\n    const factory = g0.getFactory()\n    const gColl = factory.createGeometryCollection([g0, g1])\n    const union = BufferOp.bufferOp(gColl, 0.0)\n    return union\n  }\n  isBorderSegmentsSame(result, env) {\n    const segsBefore = this.extractBorderSegments(this._g0, this._g1, env)\n    const segsAfter = new ArrayList()\n    OverlapUnion.extractBorderSegments(result, env, segsAfter)\n    return this.isEqual(segsBefore, segsAfter)\n  }\n  union() {\n    const overlapEnv = OverlapUnion.overlapEnvelope(this._g0, this._g1)\n    if (overlapEnv.isNull()) {\n      const g0Copy = this._g0.copy()\n      const g1Copy = this._g1.copy()\n      return GeometryCombiner.combine(g0Copy, g1Copy)\n    }\n    const disjointPolys = new ArrayList()\n    const g0Overlap = this.extractByEnvelope(overlapEnv, this._g0, disjointPolys)\n    const g1Overlap = this.extractByEnvelope(overlapEnv, this._g1, disjointPolys)\n    const unionGeom = this.unionFull(g0Overlap, g1Overlap)\n    let result = null\n    this._isUnionSafe = this.isBorderSegmentsSame(unionGeom, overlapEnv)\n    if (!this._isUnionSafe) \n      result = this.unionFull(this._g0, this._g1)\n    else \n      result = this.combine(unionGeom, disjointPolys)\n    \n    return result\n  }\n  extractBorderSegments(geom0, geom1, env) {\n    const segs = new ArrayList()\n    OverlapUnion.extractBorderSegments(geom0, env, segs)\n    if (geom1 !== null) OverlapUnion.extractBorderSegments(geom1, env, segs)\n    return segs\n  }\n  isUnionOptimized() {\n    return this._isUnionSafe\n  }\n  extractByEnvelope(env, geom, disjointGeoms) {\n    const intersectingGeoms = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const elem = geom.getGeometryN(i)\n      if (elem.getEnvelopeInternal().intersects(env)) {\n        intersectingGeoms.add(elem)\n      } else {\n        const copy = elem.copy()\n        disjointGeoms.add(copy)\n      }\n    }\n    return this._geomFactory.buildGeometry(intersectingGeoms)\n  }\n  isEqual(segs0, segs1) {\n    if (segs0.size() !== segs1.size()) return false\n    const segIndex = new HashSet(segs0)\n    for (const seg of segs1) \n      if (!segIndex.contains(seg)) \n        return false\n      \n    \n    return true\n  }\n  combine(unionGeom, disjointPolys) {\n    if (disjointPolys.size() <= 0) return unionGeom\n    disjointPolys.add(unionGeom)\n    const result = GeometryCombiner.combine(disjointPolys)\n    return result\n  }\n  unionFull(geom0, geom1) {\n    try {\n      return UnionOp.union(geom0, geom1)\n    } catch (ex) {\n      if (ex instanceof TopologyException) \n        return OverlapUnion.unionBuffer(geom0, geom1)\n      else throw ex\n    } finally {}\n  }\n}\n","import Geometry from '../../geom/Geometry.js'\nimport SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp.js'\nimport OverlayOp from '../overlay/OverlayOp.js'\nexport default class UnionOp {\n  static union(g, other) {\n    if (g.isEmpty() || other.isEmpty()) {\n      if (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory())\n      if (g.isEmpty()) return other.copy()\n      if (other.isEmpty()) return g.copy()\n    }\n    Geometry.checkNotGeometryCollection(g)\n    Geometry.checkNotGeometryCollection(other)\n    return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n  }\n}\n"],"names":[],"version":3,"file":"draw.aae26ee7.js.map","sourceRoot":"/__parcel_source_root/"}