{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-730f32797be23aa6.js","src/js/draw.js","node_modules/ol/interaction/Draw.js","node_modules/ol/geom/Circle.js","node_modules/ol/interaction/Property.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/easing.js","node_modules/ol/layer/Vector.js","node_modules/ol/layer/BaseVector.js","node_modules/ol/layer/Layer.js","node_modules/ol/layer/Base.js","node_modules/ol/layer/Property.js","node_modules/ol/render/EventType.js","node_modules/ol/View.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/tilegrid/common.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/rbush/rbush.min.js","node_modules/ol/style/Style.js","node_modules/ol/style/Circle.js","node_modules/ol/style/RegularShape.js","node_modules/ol/ImageState.js","node_modules/ol/style/Image.js","node_modules/ol/size.js","node_modules/ol/color.js","node_modules/color-space/lchuv.js","node_modules/color-space/luv.js","node_modules/color-space/xyz.js","node_modules/color-space/rgb.js","node_modules/color-rgba/index.js","node_modules/color-parse/index.js","node_modules/color-parse/node_modules/color-name/index.js","node_modules/color-space/hsl.js","node_modules/ol/colorlike.js","node_modules/ol/dom.js","node_modules/ol/render/canvas.js","node_modules/ol/css.js","node_modules/ol/style/Fill.js","node_modules/ol/style/Stroke.js","node_modules/ol/render/canvas/style.js","node_modules/ol/style/Icon.js","node_modules/ol/style/IconImage.js","node_modules/ol/Image.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/style/Text.js","node_modules/ol/expr/expression.js","node_modules/ol/expr/cpu.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/render/canvas/BuilderGroup.js","node_modules/ol/render/canvas/Builder.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/ImageBuilder.js","node_modules/ol/render/canvas/LineStringBuilder.js","node_modules/ol/render/canvas/PolygonBuilder.js","node_modules/ol/render/canvas/TextBuilder.js","node_modules/ol/geom/flat/linechunk.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/renderer/Layer.js","node_modules/ol/render/Event.js","node_modules/ol/render/canvas/ExecutorGroup.js","node_modules/ol/render/canvas/Executor.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/render/canvas/hitdetect.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/style.js","node_modules/ol/renderer/vector.js","node_modules/ol/source/Vector.js","node_modules/ol/Collection.js","node_modules/ol/CollectionEventType.js","node_modules/ol/structs/RBush.js","node_modules/ol/source/Source.js","node_modules/ol/source/VectorEventType.js","node_modules/ol/loadingstrategy.js","node_modules/ol/featureloader.js","node_modules/ol/events/condition.js","src/js/geoserver-crud.js","node_modules/ol/format/WFS.js","node_modules/ol/format/GML2.js","node_modules/ol/format/GMLBase.js","node_modules/ol/format/XMLFeature.js","node_modules/ol/xml.js","node_modules/ol/format/xsd.js","node_modules/ol/format/GML3.js","node_modules/ol/format/GML32.js","node_modules/ol/format/filter.js","node_modules/ol/format/filter/And.js","node_modules/ol/format/filter/LogicalNary.js","node_modules/ol/format/filter/Filter.js","node_modules/ol/format/filter/Bbox.js","node_modules/ol/format/filter/Contains.js","node_modules/ol/format/filter/Spatial.js","node_modules/ol/format/filter/DWithin.js","node_modules/ol/format/filter/Disjoint.js","node_modules/ol/format/filter/During.js","node_modules/ol/format/filter/Comparison.js","node_modules/ol/format/filter/EqualTo.js","node_modules/ol/format/filter/ComparisonBinary.js","node_modules/ol/format/filter/GreaterThan.js","node_modules/ol/format/filter/GreaterThanOrEqualTo.js","node_modules/ol/format/filter/Intersects.js","node_modules/ol/format/filter/IsBetween.js","node_modules/ol/format/filter/IsLike.js","node_modules/ol/format/filter/IsNull.js","node_modules/ol/format/filter/LessThan.js","node_modules/ol/format/filter/LessThanOrEqualTo.js","node_modules/ol/format/filter/Not.js","node_modules/ol/format/filter/NotEqualTo.js","node_modules/ol/format/filter/Or.js","node_modules/ol/format/filter/ResourceId.js","node_modules/ol/format/filter/Within.js","node_modules/ol/interaction/Modify.js","node_modules/ol/interaction/Snap.js","node_modules/ol/events/SnapEvent.js","node_modules/jsts/org/locationtech/jts/operation/relate.js","node_modules/jsts/org/locationtech/jts/operation/relate/RelateOp.js","node_modules/jsts/org/locationtech/jts/operation/relate/RelateComputer.js","node_modules/jsts/org/locationtech/jts/operation/relate/EdgeEndBuilder.js","node_modules/jsts/org/locationtech/jts/operation/relate/RelateNodeFactory.js","node_modules/jsts/org/locationtech/jts/operation/relate/EdgeEndBundleStar.js","node_modules/jsts/org/locationtech/jts/operation/relate/EdgeEndBundle.js","node_modules/jsts/org/locationtech/jts/operation/relate/RelateNode.js","node_modules/jsts/org/locationtech/jts/operation/predicate/RectangleContains.js","node_modules/jsts/org/locationtech/jts/operation/predicate/RectangleIntersects.js","node_modules/jsts/org/locationtech/jts/algorithm/RectangleLineIntersector.js","node_modules/jsts/org/locationtech/jts/geom/util/ShortCircuitedGeometryVisitor.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 1234;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"c11c19e3a9b6d309\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          // Ignore cloudflare workers error.\n          if (err.message && !err.message.includes('Disallowed operation called within global scope')) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","import Draw from \"ol/interaction/Draw\";\nimport { transactWFS } from \"./geoserver-crud.js\";\nimport { Feature } from \"ol\";\nimport VectorSource from \"ol/source/Vector\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport Style from \"ol/style/Style\";\nimport CircleStyle from \"ol/style/Circle\";\nimport Fill from \"ol/style/Fill\";\nimport Stroke from \"ol/style/Stroke\";\nimport Modify from \"ol/interaction/Modify.js\";\nimport Snap from \"ol/interaction/Snap.js\";\nimport { showPopupMessage } from \"./popup-message.js\";\nimport { intersects } from \"ol/extent.js\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport { getArea } from \"ol/sphere\";\n// Import OpenLayers geometry classes for JSTS parser\nimport Point from \"ol/geom/Point\";\nimport LineString from \"ol/geom/LineString\";\nimport LinearRing from \"ol/geom/LinearRing\";\nimport Polygon from \"ol/geom/Polygon\";\nimport MultiPoint from \"ol/geom/MultiPoint\";\nimport MultiLineString from \"ol/geom/MultiLineString\";\nimport MultiPolygon from \"ol/geom/MultiPolygon\";\nimport GeometryCollection from \"ol/geom/GeometryCollection\";\n// Import JSTS for precise intersection checking\nimport OL3Parser from \"jsts/org/locationtech/jts/io/OL3Parser\";\nimport { RelateOp } from \"jsts/org/locationtech/jts/operation/relate\";\nimport { UnaryUnionOp } from \"jsts/org/locationtech/jts/operation/union\";\n\n/**\n * Check if a feature intersects with any existing features in the layer\n * @param {Feature} feature - The feature to check\n * @param {VectorLayer} layer - The vector layer containing existing features\n * @param {boolean} showAlert - Whether to show an alert message\n * @returns {boolean} - True if intersection found, false otherwise\n */\nexport function checkIntersection(feature, layer, showAlert = true) {\n  if (!feature || !layer) return false;\n\n  const drawGeom = feature.getGeometry();\n  if (!drawGeom) return false;\n\n  // Validate geometry before proceeding\n  if (drawGeom.getType() === 'Polygon') {\n    const coords = drawGeom.getCoordinates();\n    if (!coords || !coords[0] || coords[0].length < 4) {\n      console.warn(\"Invalid polygon: not enough points for a LinearRing\", coords);\n      return false;\n    }\n  }\n\n  // Use JSTS for precise intersection checking\n  const parser = new OL3Parser();\n  parser.inject(\n    Point,\n    LineString,\n    LinearRing,\n    Polygon,\n    MultiPoint,\n    MultiLineString,\n    MultiPolygon,\n    GeometryCollection\n  );\n\n  try {\n    // Convert the drawn geometry to JSTS geometry\n    const jstsGeom = parser.read(drawGeom);\n\n    // Get the extent of the drawn geometry for quick filtering\n    const drawGeomExtent = drawGeom.getExtent();\n    let hasIntersection = false;\n    let intersectingFeature = null;\n\n    // Check against each existing feature\n    layer\n      .getSource()\n      .getFeatures()\n      .forEach((existingFeature) => {\n        // Skip checking against itself\n        if (existingFeature === feature) return;\n\n        const existingGeom = existingFeature.getGeometry();\n        if (!existingGeom) return;\n\n        // Validate existing geometry\n        if (existingGeom.getType() === 'Polygon') {\n          const coords = existingGeom.getCoordinates();\n          if (!coords || !coords[0] || coords[0].length < 4) {\n            console.warn(\"Invalid existing polygon: not enough points for a LinearRing\", coords);\n            return;\n          }\n        }\n\n        // Quick check with extents first (bounding boxes)\n        if (intersects(drawGeomExtent, existingGeom.getExtent())) {\n          try {\n            // Convert existing geometry to JSTS geometry\n            const jstsExistingGeom = parser.read(existingGeom);\n\n            // Perform precise intersection check\n            if (RelateOp.intersects(jstsGeom, jstsExistingGeom)) {\n              hasIntersection = true;\n              intersectingFeature = existingFeature;\n\n              // Show alert if requested\n              if (showAlert) {\n                const featureType = drawGeom.getType();\n                const existingType = existingGeom.getType();\n                showPopupMessage(\n                  `Intersection detected between ${featureType} and existing ${existingType}`,\n                  \"warning\"\n                );\n\n                // Highlight the intersecting feature\n                highlightIntersectingFeature(existingFeature, layer);\n              }\n\n              // We found an intersection, no need to check further\n              return;\n            }\n          } catch (error) {\n            console.error(\"Error checking intersection:\", error);\n          }\n        }\n      });\n\n    return hasIntersection;\n  } catch (error) {\n    console.error(\"Error in checkIntersection:\", error);\n    return false;\n  }\n}\n\n/**\n * Temporarily highlight an intersecting feature\n * @param {Feature} feature - The feature to highlight\n * @param {VectorLayer} layer - The vector layer containing the feature\n */\nfunction highlightIntersectingFeature(feature, layer) {\n  // Store the original style\n  const originalStyle = feature.getStyle() || layer.getStyle();\n\n  // Set a highlight style\n  feature.setStyle(\n    new Style({\n      stroke: new Stroke({\n        color: \"red\",\n        width: 3,\n      }),\n      fill: new Fill({\n        color: \"rgba(255, 0, 0, 0.3)\",\n      }),\n      image: new CircleStyle({\n        radius: 7,\n        fill: new Fill({\n          color: \"red\",\n        }),\n      }),\n    })\n  );\n\n  // Reset to original style after 2 seconds\n  setTimeout(() => {\n    feature.setStyle(originalStyle);\n  }, 2000);\n}\n\n/**\n * Calculate area of a polygon feature in square meters and hectares\n * @param {Feature} feature - The feature to calculate area for\n * @returns {Object} - Object containing area in square meters and hectares\n */\nexport function calculateArea(feature) {\n  if (!feature) return { m2: 0, ha: 0 };\n\n  const geometry = feature.getGeometry();\n  if (!geometry || geometry.getType() !== \"Polygon\") {\n    return { m2: 0, ha: 0 };\n  }\n\n  // Get area in square meters\n  const areaInM2 = getArea(geometry);\n  // Convert to hectares (1 hectare = 10,000 m²)\n  const areaInHa = areaInM2 / 10000;\n\n  return {\n    m2: Math.round(areaInM2 * 100) / 100, // Round to 2 decimal places\n    ha: Math.round(areaInHa * 10000) / 10000, // Round to 4 decimal places\n  };\n}\n\nexport function enableDraw(\n  map,\n  vectorLayer,\n  drawType = \"Polygon\",\n  geoserverURL\n) {\n  let drawnfeatures = [];\n  let modifiedFeatures = [];\n  let isDrawing = false;\n  let originalFeatureGeometries = new Map(); // Store original geometries for potential rollback\n\n  // Create draw interaction\n  const draw = new Draw({\n    source: vectorLayer.getSource(),\n    type: drawType,\n  });\n\n  map.addInteraction(draw);\n\n  // Track when drawing starts\n  draw.on(\"drawstart\", (event) => {\n    isDrawing = true;\n\n    const hasIntersection = checkIntersection(event.feature, vectorLayer);\n\n    console.log(\"Has Intersection: \", hasIntersection)\n\n    const preventIntersections =\n      document.getElementById(\"prevent-intersections\")?.checked || false;\n    if (hasIntersection && preventIntersections) {\n      // Remove the feature that was just drawn\n      vectorLayer.getSource().removeFeature(event.feature);\n      showPopupMessage(\n        \"Drawing removed due to intersection with existing feature\",\n        \"warning\"\n      );\n      return;\n    }\n\n    console.log(\"Drawing started\");\n  });\n\n  // Handle drawing end\n  draw.on(\"drawend\", async (event) => {\n    isDrawing = false;\n    console.log(\"Drawing ended\");\n    const feature = event.feature;\n\n    // Check for intersections with existing features\n    const hasIntersection = checkIntersection(feature, vectorLayer);\n    console.log(\"Intersection check result:\", hasIntersection);\n\n    // If intersection is found and we want to prevent it\n    const preventIntersections =\n      document.getElementById(\"prevent-intersections\")?.checked || false;\n    if (hasIntersection && preventIntersections) {\n      // Remove the feature that was just drawn\n      vectorLayer.getSource().removeFeature(feature);\n      showPopupMessage(\n        \"Drawing removed due to intersection with existing feature\",\n        \"warning\"\n      );\n      return;\n    }\n\n    // Calculate area for polygons\n    if (drawType === \"Polygon\") {\n      const area = calculateArea(feature);\n      feature.setProperties({\n        area_m2: area.m2,\n        area_ha: area.ha,\n      });\n\n      // Show area information\n      showPopupMessage(`Area: ${area.m2} m² (${area.ha} ha)`, \"info\");\n    }\n\n    const newFeat = new Feature();\n    newFeat.setGeometryName(\"geom\");\n    newFeat.setGeometry(feature.getGeometry());\n    newFeat.setProperties({\n      name: \"test\",\n      ...feature.getProperties(),\n    });\n\n    const autoSave = document.getElementById(\"auto-save\")?.checked || false;\n    if (autoSave) {\n      try {\n        const res = await transactWFS(\n          \"insert\",\n          [newFeat],\n          \"ne\",\n          \"draw_layer\",\n          \"EPSG:3857\",\n          \"admin\",\n          \"geoserver\",\n          geoserverURL\n        );\n        const featureId = parseInt(res.insertedFIDs[0].split(\".\")[1]);\n\n        event.feature.setProperties({ fid: featureId });\n        console.log(\"Feature drawn and saved to server\");\n      } catch (error) {\n        console.error(\"Error saving feature:\", error);\n        showPopupMessage(\"Error saving feature to server\", \"error\");\n      }\n    } else {\n      drawnfeatures.push(newFeat);\n      console.log(\"Feature drawn and saved to memory\");\n    }\n  });\n\n  const modify = new Modify({ source: vectorLayer.getSource() });\n  map.addInteraction(modify);\n\n  // Store original geometry before modification\n  modify.on(\"modifystart\", (event) => {\n    const features = event.features.getArray();\n    features.forEach((feature) => {\n      // Store a clone of the original geometry\n      originalFeatureGeometries.set(feature, feature.getGeometry().clone());\n    });\n  });\n\n  // Handle feature modification\n  modify.on(\"modifyend\", (event) => {\n    console.log(\"Modification ended\");\n    const features = event.features.getArray();\n\n    features.forEach(async (feature) => {\n      // Check for intersections with existing features\n      const hasIntersection = checkIntersection(feature, vectorLayer);\n      console.log(\"Modification intersection check result:\", hasIntersection);\n\n      // If intersection is found and we want to prevent it\n      const preventIntersections =\n        document.getElementById(\"prevent-intersections\")?.checked || false;\n      if (hasIntersection && preventIntersections) {\n        // Revert the modification using the stored original geometry\n        const originalGeometry = originalFeatureGeometries.get(feature);\n        if (originalGeometry) {\n          feature.setGeometry(originalGeometry);\n          showPopupMessage(\n            \"Modification reverted due to intersection with existing feature\",\n            \"warning\"\n          );\n          return; // Skip the rest of the processing for this feature\n        } else {\n          showPopupMessage(\n            \"Modification creates intersection with existing feature\",\n            \"warning\"\n          );\n        }\n      }\n\n      // Recalculate area for polygons\n      if (feature.getGeometry().getType() === \"Polygon\") {\n        const area = calculateArea(feature);\n        feature.setProperties({\n          area_m2: area.m2,\n          area_ha: area.ha,\n        });\n\n        // Show updated area information\n        showPopupMessage(`Updated area: ${area.m2} m² (${area.ha} ha)`, \"info\");\n      }\n\n      const newFeat = new Feature();\n      newFeat.setGeometryName(\"geom\");\n      newFeat.setGeometry(feature.getGeometry());\n      newFeat.setId(feature.getProperties().fid);\n\n      const autoSave = document.getElementById(\"auto-save\")?.checked || false;\n      if (autoSave) {\n        try {\n          await transactWFS(\n            \"update\",\n            [newFeat],\n            \"ne\",\n            \"draw_layer\",\n            \"EPSG:3857\",\n            \"admin\",\n            \"geoserver\",\n            geoserverURL\n          );\n          console.log(\"Feature modified and saved to server\");\n        } catch (error) {\n          console.error(\"Error updating feature:\", error);\n          showPopupMessage(\"Error updating feature on server\", \"error\");\n        }\n      } else {\n        modifiedFeatures.push(newFeat);\n        console.log(\"Feature modified and saved to memory\");\n      }\n    });\n\n    // Clear the stored geometries\n    originalFeatureGeometries.clear();\n  });\n\n  const snap = new Snap({ source: vectorLayer.getSource() });\n  map.addInteraction(snap);\n\n  return {\n    draw,\n    modify,\n    snap,\n    disable: () => {\n      map.removeInteraction(draw);\n      map.removeInteraction(modify);\n      map.removeInteraction(snap);\n    },\n    save: async () => {\n      let res;\n      let savedCount = 0;\n      if (drawnfeatures.length > 0) {\n        try {\n          res = await transactWFS(\n            \"insert\",\n            drawnfeatures,\n            \"ne\",\n            \"draw_layer\",\n            \"EPSG:3857\",\n            \"admin\",\n            \"geoserver\",\n            geoserverURL\n          );\n          savedCount += drawnfeatures.length;\n          drawnfeatures = [];\n        } catch (error) {\n          console.error(\"Error saving drawn features:\", error);\n          showPopupMessage(\"Error saving drawn features\", \"error\");\n        }\n      }\n\n      if (modifiedFeatures.length > 0) {\n        try {\n          res = await transactWFS(\n            \"update\",\n            modifiedFeatures,\n            \"ne\",\n            \"draw_layer\",\n            \"EPSG:3857\",\n            \"admin\",\n            \"geoserver\",\n            geoserverURL\n          );\n          savedCount += modifiedFeatures.length;\n          modifiedFeatures = [];\n        } catch (error) {\n          console.error(\"Error saving modified features:\", error);\n          showPopupMessage(\"Error saving modified features\", \"error\");\n        }\n      }\n\n      if (savedCount > 0) {\n        showPopupMessage(\n          `Successfully saved ${savedCount} feature(s)!`,\n          \"success\"\n        );\n      } else if (drawnfeatures.length === 0 && modifiedFeatures.length === 0) {\n        showPopupMessage(\"No features to save\", \"info\");\n      }\n\n      return res;\n    },\n    delete: async () => {\n      const source = vectorLayer.getSource();\n      const features = source.getFeatures();\n      if (features.length > 0) {\n        const autoSave = document.getElementById(\"auto-save\")?.checked || false;\n        if (autoSave) {\n          // Get all features with FIDs\n          const featuresToDelete = features.filter(\n            (f) => f.getProperties().fid\n          );\n          if (featuresToDelete.length > 0) {\n            try {\n              await transactWFS(\n                \"delete\",\n                featuresToDelete,\n                \"ne\",\n                \"draw_layer\",\n                \"EPSG:3857\",\n                \"admin\",\n                \"geoserver\",\n                geoserverURL\n              );\n            } catch (error) {\n              console.error(\"Error deleting features:\", error);\n              showPopupMessage(\"Error deleting features from server\", \"error\");\n            }\n          }\n        }\n        // Clear all features from the source\n        source.clear();\n        drawnfeatures = [];\n        modifiedFeatures = [];\n        showPopupMessage(\"All features deleted\", \"success\");\n      } else {\n        showPopupMessage(\"No features to delete\", \"info\");\n      }\n    },\n    exportGeoJSON: () => {\n      const source = vectorLayer.getSource();\n      const features = source.getFeatures();\n\n      if (features.length === 0) {\n        showPopupMessage(\"No features to export\", \"info\");\n        return null;\n      }\n\n      const format = new GeoJSON();\n      const geojson = format.writeFeaturesObject(features);\n\n      // Add area properties for polygons\n      geojson.features.forEach((feature) => {\n        if (feature.geometry.type === \"Polygon\") {\n          const olFeature = source.getFeatureById(feature.id);\n          const area = calculateArea(olFeature);\n          feature.properties.area_m2 = area.m2;\n          feature.properties.area_ha = area.ha;\n        }\n      });\n\n      return geojson;\n    },\n  };\n}\n\nexport function createDrawLayer() {\n  const drawSource = new VectorSource();\n  const drawStyle = (feature) => {\n    const type = feature.getGeometry().getType();\n\n    if (type === \"Point\" || type === \"MultiPoint\") {\n      return new Style({\n        image: new CircleStyle({\n          radius: 5,\n          fill: new Fill({ color: \"blue\" }),\n          stroke: new Stroke({ color: \"white\", width: 1 }),\n        }),\n      });\n    }\n\n    if (type.includes(\"Line\")) {\n      return new Style({\n        stroke: new Stroke({ color: \"green\", width: 2 }),\n      });\n    }\n\n    if (type.includes(\"Polygon\")) {\n      return new Style({\n        stroke: new Stroke({ color: \"orange\", width: 1 }),\n        fill: new Fill({ color: \"rgba(255,165,0,0.3)\" }),\n      });\n    }\n\n    return new Style({\n      stroke: new Stroke({ color: \"gray\", width: 1 }),\n      fill: new Fill({ color: \"rgba(200, 200, 200, 0.3)\" }),\n    });\n  };\n\n  const drawLayer = new VectorLayer({\n    source: drawSource,\n    style: drawStyle,\n    title: \"draw-layer\",\n  });\n\n  return drawLayer;\n}\n\nexport function checkInteraction(lineDraw, polyDraw, pointDraw) {\n  if (lineDraw) {\n    lineDraw.disable();\n  }\n  if (polyDraw) {\n    polyDraw.disable();\n  }\n  if (pointDraw) {\n    pointDraw.disable();\n  }\n}\n\n/**\n * Initialize drawing tools on an existing map\n * @param {import('ol/Map.js').default} map - The OpenLayers map instance\n * @returns {Object} - Object containing drawing tools and methods\n */\nexport function initDrawTools(map) {\n  // Create a vector source and layer for the drawings\n  const drawLayer = createDrawLayer();\n  map.addLayer(drawLayer);\n\n  // Get the source from the layer\n  const source = drawLayer.getSource();\n\n  // Create draw, modify, and snap interactions\n  const typeSelect = document.getElementById(\"type\");\n  let draw, modify, snap;\n\n  function addInteractions() {\n    // Get the GeoServer URL from the global variable or use a default\n    const geoserverURL =\n      window.geoserverURL || \"http://localhost:8080/geoserver\";\n\n    // Create drawing tools with the selected geometry type\n    const drawingTools = enableDraw(\n      map,\n      drawLayer,\n      typeSelect.value,\n      geoserverURL\n    );\n\n    // Store references to the interactions\n    draw = drawingTools.draw;\n    modify = drawingTools.modify;\n    snap = drawingTools.snap;\n\n    return drawingTools;\n  }\n\n  // Initialize interactions with the default geometry type\n  let drawingTools = addInteractions();\n\n  // Handle change in geometry type\n  if (typeSelect) {\n    typeSelect.onchange = function () {\n      // Remove existing interactions\n      if (drawingTools && drawingTools.disable) {\n        drawingTools.disable();\n      }\n\n      // Add new interactions with the selected geometry type\n      drawingTools = addInteractions();\n    };\n  }\n\n  // Return an object with methods to control the drawing tools\n  return {\n    source: source,\n    layer: drawLayer,\n\n    // Method to enable/disable drawing tools\n    setActive: function (active) {\n      if (active) {\n        // Re-add interactions if they were removed\n        if (!map.getInteractions().getArray().includes(draw)) {\n          drawingTools = addInteractions();\n        }\n      } else {\n        // Remove interactions if they exist\n        if (drawingTools && drawingTools.disable) {\n          drawingTools.disable();\n        }\n      }\n    },\n\n    // Method to save drawings\n    save: function () {\n      if (drawingTools && drawingTools.save) {\n        return drawingTools.save();\n      }\n      return Promise.resolve({\n        status: \"error\",\n        message: \"Drawing tools not initialized\",\n      });\n    },\n\n    // Method to delete drawings\n    delete: function () {\n      if (drawingTools && drawingTools.delete) {\n        return drawingTools.delete();\n      }\n      return Promise.resolve({\n        status: \"error\",\n        message: \"Drawing tools not initialized\",\n      });\n    },\n\n    // Method to export drawings as GeoJSON\n    exportGeoJSON: function () {\n      if (drawingTools && drawingTools.exportGeoJSON) {\n        return drawingTools.exportGeoJSON();\n      }\n      return null;\n    },\n\n    // Reference to the source for direct access\n    source: source,\n  };\n}\n\n/**\n * Union selected features using JSTS\n * @param {Array<Feature>} features - Array of features to union\n * @param {VectorSource} source - Vector source to add the result to and remove original features from\n * @returns {Feature|null} - The union result as a feature, or null if operation fails\n */\nexport function unionSelectedFeatures(features, source) {\n  if (!features || features.length < 2) {\n    showPopupMessage(\"Select at least two features to union\", \"warning\");\n    return null;\n  }\n\n  try {\n    // Create a JSTS parser\n    const parser = new OL3Parser();\n    parser.inject(\n      Point,\n      LineString,\n      LinearRing,\n      Polygon,\n      MultiPoint,\n      MultiLineString,\n      MultiPolygon,\n      GeometryCollection\n    );\n\n    // Convert all features to JSTS geometries\n    const jstsGeometries = features.map(feature => {\n      const geometry = feature.getGeometry();\n      if (!geometry) {\n        console.warn(\"Feature has no geometry:\", feature);\n        return null;\n      }\n      return parser.read(geometry);\n    }).filter(geom => geom !== null);\n\n    if (jstsGeometries.length < 2) {\n      showPopupMessage(\"Not enough valid geometries to union\", \"warning\");\n      return null;\n    }\n\n    console.log(\"JSTS geometries for union:\", jstsGeometries);\n\n    // Perform the union operation\n    const unionGeometry = UnaryUnionOp.union(jstsGeometries);\n    console.log(\"Union result:\", unionGeometry);\n\n    if (!unionGeometry) {\n      showPopupMessage(\"Union operation failed\", \"error\");\n      return null;\n    }\n\n    // Convert back to OpenLayers geometry\n    const olGeometry = parser.write(unionGeometry);\n\n    // Create a new feature with the union geometry\n    const unionFeature = new Feature({\n      geometry: olGeometry\n    });\n\n    // Remove original features and add the union result\n    if (source) {\n      features.forEach(feature => {\n        source.removeFeature(feature);\n      });\n      source.addFeature(unionFeature);\n    }\n\n    showPopupMessage(\"Union operation completed successfully\", \"success\");\n    return unionFeature;\n  } catch (error) {\n    console.error(\"Error in unionSelectedFeatures:\", error);\n    showPopupMessage(\"Union operation failed: \" + error.message, \"error\");\n    return null;\n  }\n}\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features. The draw interaction can have up to three sketch features, depending on the mode.\n * It will always contain a feature with a `Point` geometry that corresponds to the current cursor position.\n * If the mode is `LineString` or `Polygon`, and there is at least one drawn point, it will also contain a feature with\n * a `LineString` geometry that corresponds to the line between the already drawn points and the current cursor position.\n * If the mode is `Polygon`, and there is at least one drawn point, it will also contain a feature with a `Polygon`\n * geometry that corresponds to the polygon between the already drawn points and the current cursor position\n * (note that this polygon has only two points if only one point is drawn).\n * If the mode is `Circle`, and there is one point drawn, it will also contain a feature with a `Circle` geometry whose\n * center is the drawn point and the radius is determined by the distance between the drawn point and the cursor.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState\n        )\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry)\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n// cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0, 0, 0],\n\tmax: [100, 100, 360],\n\n\tluv: function (luv) {\n\t\tvar l = luv[0],\n\t\t\tc = luv[1],\n\t\t\th = luv[2],\n\t\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function (arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default (lchuv);\n\nluv.lchuv = function (luv) {\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u * u + v * v);\n\tvar hr = Math.atan2(v, u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l, c, h]\n};\n\nxyz.lchuv = function (arg) {\n\treturn luv.lchuv(xyz.luv(arg));\n};\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\nimport xyz from './xyz.js';\n\nvar luv = {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0, -134, -140],\n\tmax: [100, 224, 122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function (arg, i, o) {\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0, 0, 0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow((l + 16) / 116, 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\nexport default (luv);\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function (arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y / yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1 / 3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nconst xyz = {\n\tname: 'xyz',\n\tmin: [0, 0, 0],\n\tchannel: ['X', 'Y', 'Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931'],\n\n\t// Whitepoint reference values with observer/illuminant\n\t// http://en.wikipedia.org/wiki/Standard_illuminant\n\twhitepoint: {\n\t\t//1931 2°\n\t\t2: {\n\t\t\t//incadescent\n\t\t\tA: [109.85, 100, 35.585],\n\t\t\t// B:[],\n\t\t\tC: [98.074, 100, 118.232],\n\t\t\tD50: [96.422, 100, 82.521],\n\t\t\tD55: [95.682, 100, 92.149],\n\t\t\t//daylight\n\t\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\t\tD75: [94.972, 100, 122.638],\n\t\t\t//flourescent\n\t\t\t// F1: [],\n\t\t\tF2: [99.187, 100, 67.395],\n\t\t\t// F3: [],\n\t\t\t// F4: [],\n\t\t\t// F5: [],\n\t\t\t// F6:[],\n\t\t\tF7: [95.044, 100, 108.755],\n\t\t\t// F8: [],\n\t\t\t// F9: [],\n\t\t\t// F10: [],\n\t\t\tF11: [100.966, 100, 64.370],\n\t\t\t// F12: [],\n\t\t\tE: [100, 100, 100]\n\t\t},\n\n\t\t//1964  10°\n\t\t10: {\n\t\t\t//incadescent\n\t\t\tA: [111.144, 100, 35.200],\n\t\t\tC: [97.285, 100, 116.145],\n\t\t\tD50: [96.720, 100, 81.427],\n\t\t\tD55: [95.799, 100, 90.926],\n\t\t\t//daylight\n\t\t\tD65: [94.811, 100, 107.304],\n\t\t\tD75: [94.416, 100, 120.641],\n\t\t\t//flourescent\n\t\t\tF2: [103.280, 100, 69.026],\n\t\t\tF7: [95.792, 100, 107.687],\n\t\t\tF11: [103.866, 100, 65.627],\n\t\t\tE: [100, 100, 100]\n\t\t}\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array<number>} _xyz Array of xyz values\n * @param {Array<number>} white Whitepoint reference\n * @return {Array<number>} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t// FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array<number>} rgb RGB channels\n *\n * @return {Array<number>} XYZ channels\n */\nrgb.xyz = function (rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\tg = rgb[1] / 255,\n\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\nconst rgb = {\n\tname: 'rgb',\n\tmin: [0, 0, 0],\n\tmax: [255, 255, 255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n\nexport default rgb;\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nvar hsl = {\n\tname: 'hsl',\n\tmin: [0, 0, 0],\n\tmax: [360, 100, 100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function (hsl) {\n\t\tvar h = hsl[0] / 360, s = hsl[1] / 100, l = hsl[2] / 100, t1, t2, t3, rgb, val, i = 0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (; i < 3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t\t\t3 * t3 < 2 ? t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\t\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\nexport default (hsl);\n\n\n//extend rgb\nrgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255,\n\t\tg = rgb[1] / 255,\n\t\tb = rgb[2] / 255,\n\t\tmin = Math.min(r, g, b),\n\t\tmax = Math.max(r, g, b),\n\t\tdelta = max - min,\n\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\t//FIXME h is possibly undefined\n\t//@ts-ignore\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle)\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e)\n          )\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          )\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(3, 4),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type\n      )} but the following type was expected: ${typeName(typeHint)}`\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType\n      )} for the interpolate operation` + `, got ${typeName(inputType)} instead`\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type\n      )} instead`\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type\n        )} instead`\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded\n          )}`\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded\n        )}`\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (expression) => expression.featureId;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.GeometryType\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Between\n    // Ops.Case\n    // Ops.In\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style\n */\n\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureClass>|Collection<FeatureClass>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureClass>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureClass>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, FeatureClass|Array<RenderFeature>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureClass>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureClass>} */\n    let collection;\n    /** @type {Array<FeatureClass>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureClass} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureClass>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureClass>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureClass>} */\n    const newFeatures = [];\n    /** @type Array<FeatureClass> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureClass>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureClass>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureClass} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClass|Array<RenderFeature>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureClass|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureClass} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureClass} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {FeatureClass} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @return {FeatureClass|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","import WFS from 'ol/format/WFS';\n\nfunction parseWFSResponse(xmlString) {\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(xmlString, 'text/xml');\n\n  // Check for Exception\n  const exception = xmlDoc.querySelector('ows\\\\:Exception, Exception');\n  if (exception) {\n    return {\n      status: 'error',\n      message: exception.textContent.trim()\n    };\n  }\n\n  // Parse TransactionSummary\n  const summary = xmlDoc.querySelector('wfs\\\\:TransactionSummary, TransactionSummary');\n  if (summary) {\n    const inserted = summary.querySelector('wfs\\\\:totalInserted, totalInserted')?.textContent || '0';\n    const updated = summary.querySelector('wfs\\\\:totalUpdated, totalUpdated')?.textContent || '0';\n    const deleted = summary.querySelector('wfs\\\\:totalDeleted, totalDeleted')?.textContent || '0';\n\n    const insertResults = xmlDoc.querySelectorAll('wfs\\\\:InsertResults wfs\\\\:Feature wfs\\\\:FeatureId, InsertResults Feature FeatureId');\n    const fids = Array.from(insertResults).map(el => el.getAttribute('fid'));\n\n    return {\n      status: 'success',\n      totalInserted: parseInt(inserted),\n      totalUpdated: parseInt(updated),\n      totalDeleted: parseInt(deleted),\n      insertedFIDs: fids\n    };\n  }\n\n  // Fallback if structure is unexpected\n  return {\n    status: 'unknown',\n    raw: xmlString\n  };\n}\n\nexport async function transactWFS(type, features, workspace, layerName, srs = 'EPSG:3857', user, password, geoserverURL) {\n  const formatWFS = new WFS();\n\n  const node = formatWFS.writeTransaction(\n    type === 'insert' ? features : [],\n    type === 'update' ? features : [],\n    type === 'delete' ? features : [],\n    {\n      featureType: layerName,\n      featureNS: 'https://www.naturalearthdata.com',\n      srsName: srs,\n      featurePrefix: workspace,\n    }\n  );\n\n  const serializer = new XMLSerializer();\n  const payload = serializer.serializeToString(node);\n\n  try {\n    const url = geoserverURL + '/wfs'\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/xml',\n        'Authorization': 'Basic ' + btoa(`${user}:${password}`)\n      },\n      body: payload\n    });\n\n    const responseText = await res.text();\n\n    if (!res.ok) {\n      throw new Error(`WFS-T ${type} failed with status ${res.status}: ${responseText}`);\n    }\n\n    const jsonResponse = parseWFSResponse(responseText);\n    return jsonResponse;\n\n  } catch (error) {\n    console.error('WFS-T error:', error);\n    throw error;\n  }\n}\n","/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds'\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readTransactionResponseFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n)\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures')\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      []\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(\n      Array.isArray(options.featureTypes),\n      '`options.featureTypes` must be an Array'\n    );\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(\n          options.geometryName,\n          '`options.geometryName` must also be provided when `options.bbox` is set'\n        );\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context]\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version]\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const tagName = version === '2.0.0' ? 'ValueReference' : 'Name';\n  const name = createElementNS(ns, tagName);\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n","/**\n * @module ol/format/GML2\n */\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4]\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ',' + point[1]\n        : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport Geometry from '../geom/Geometry.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0 && !(value instanceof Geometry)) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    const fid =\n      node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (ring) {\n      return ring;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName')\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GML3\n */\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1]\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      let i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    const point = value.getCoordinates();\n    let coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = point[0] + ' ' + point[1];\n    } else {\n      coords = point[1] + ' ' + point[0];\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ' ' + point[1]\n        : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML32\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    objectStack[objectStack.length - 1] = Object.assign(\n      {multiCurve: true, multiSurface: true},\n      context\n    );\n    super.writeGeometryElement(node, geometry, objectStack);\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport DWithin from './filter/DWithin.js';\nimport Disjoint from './filter/Disjoint.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport ResourceId from './filter/ResourceId.js';\nimport Within from './filter/Within.js';\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params))();\n}\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params))();\n}\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @return {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, srsName) {\n  return new Bbox(geometryName, extent, srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, srsName) {\n  return new Contains(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, srsName) {\n  return new Intersects(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Disjoint} `<Disjoint>` operator.\n * @api\n */\nexport function disjoint(geometryName, geometry, srsName) {\n  return new Disjoint(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, srsName) {\n  return new Within(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {!number} distance Distance.\n * @param {!string} unit Unit.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!DWithin} `<DWithin>` operator.\n * @api\n */\nexport function dwithin(geometryName, geometry, distance, unit, srsName) {\n  return new DWithin(geometryName, geometry, distance, unit, srsName);\n}\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, matchCase) {\n  return new EqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, matchCase) {\n  return new NotEqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @return {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @return {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string} [wildCard] Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string} [singleChar] pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string} [escapeChar] Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(\n  propertyName,\n  pattern,\n  wildCard,\n  singleChar,\n  escapeChar,\n  matchCase\n) {\n  return new IsLike(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase\n  );\n}\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @return {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\nexport function resourceId(rid) {\n  return new ResourceId(rid);\n}\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport {assert} from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 'At least 2 conditions are required');\n  }\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/Filter\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @return {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])'\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nclass Contains extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, srsName) {\n    super('Contains', geometryName, geometry, srsName);\n  }\n}\n\nexport default Contains;\n","/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nclass Spatial extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(tagName, geometryName, geometry, srsName) {\n    super(tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName || 'the_geom';\n\n    /**\n     * @type {import(\"../../geom/Geometry.js\").default}\n     */\n    this.geometry = geometry;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Spatial;\n","/**\n * @module ol/format/filter/DWithin\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n * @api\n */\nclass DWithin extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {!number} distance Distance.\n   * @param {!string} unit Unit.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, distance, unit, srsName) {\n    super('DWithin', geometryName, geometry, srsName);\n\n    /**\n     * @public\n     * @type {!number}\n     */\n    this.distance = distance;\n\n    /**\n     * @public\n     * @type {!string}\n     */\n    this.unit = unit;\n  }\n}\n\nexport default DWithin;\n","/**\n * @module ol/format/filter/Disjoint\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n * @api\n */\nclass Disjoint extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, srsName) {\n    super('Disjoint', geometryName, geometry, srsName);\n  }\n}\n\nexport default Disjoint;\n","/**\n * @module ol/format/filter/During\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n * @api\n */\nclass During extends Comparison {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!string} begin The begin date in ISO-8601 format.\n   * @param {!string} end The end date in ISO-8601 format.\n   */\n  constructor(propertyName, begin, end) {\n    super('During', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.begin = begin;\n\n    /**\n     * @type {!string}\n     */\n    this.end = end;\n  }\n}\n\nexport default During;\n","/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nclass Comparison extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} propertyName Name of the context property to compare.\n   */\n  constructor(tagName, propertyName) {\n    super(tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.propertyName = propertyName;\n  }\n}\n\nexport default Comparison;\n","/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nclass EqualTo extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  constructor(propertyName, expression, matchCase) {\n    super('PropertyIsEqualTo', propertyName, expression, matchCase);\n  }\n}\n\nexport default EqualTo;\n","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nclass ComparisonBinary extends Comparison {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  constructor(tagName, propertyName, expression, matchCase) {\n    super(tagName, propertyName);\n\n    /**\n     * @type {!(string|number)}\n     */\n    this.expression = expression;\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = matchCase;\n  }\n}\n\nexport default ComparisonBinary;\n","/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nclass GreaterThan extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsGreaterThan', propertyName, expression);\n  }\n}\n\nexport default GreaterThan;\n","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nclass GreaterThanOrEqualTo extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n  }\n}\n\nexport default GreaterThanOrEqualTo;\n","/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nclass Intersects extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, srsName) {\n    super('Intersects', geometryName, geometry, srsName);\n  }\n}\n\nexport default Intersects;\n","/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nclass IsBetween extends Comparison {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} lowerBoundary The lower bound of the range.\n   * @param {!number} upperBoundary The upper bound of the range.\n   */\n  constructor(propertyName, lowerBoundary, upperBoundary) {\n    super('PropertyIsBetween', propertyName);\n\n    /**\n     * @type {!number}\n     */\n    this.lowerBoundary = lowerBoundary;\n\n    /**\n     * @type {!number}\n     */\n    this.upperBoundary = upperBoundary;\n  }\n}\n\nexport default IsBetween;\n","/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nclass IsLike extends Comparison {\n  /**\n   * [constructor description]\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!string} pattern Text pattern.\n   * @param {string} [wildCard] Pattern character which matches any sequence of\n   *    zero or more string characters. Default is '*'.\n   * @param {string} [singleChar] pattern character which matches any single\n   *    string character. Default is '.'.\n   * @param {string} [escapeChar] Escape character which can be used to escape\n   *    the pattern characters. Default is '!'.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  constructor(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase\n  ) {\n    super('PropertyIsLike', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.pattern = pattern;\n\n    /**\n     * @type {!string}\n     */\n    this.wildCard = wildCard !== undefined ? wildCard : '*';\n\n    /**\n     * @type {!string}\n     */\n    this.singleChar = singleChar !== undefined ? singleChar : '.';\n\n    /**\n     * @type {!string}\n     */\n    this.escapeChar = escapeChar !== undefined ? escapeChar : '!';\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = matchCase;\n  }\n}\n\nexport default IsLike;\n","/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n * @api\n */\nclass IsNull extends Comparison {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   */\n  constructor(propertyName) {\n    super('PropertyIsNull', propertyName);\n  }\n}\n\nexport default IsNull;\n","/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n * @api\n */\nclass LessThan extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsLessThan', propertyName, expression);\n  }\n}\n\nexport default LessThan;\n","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nclass LessThanOrEqualTo extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsLessThanOrEqualTo', propertyName, expression);\n  }\n}\n\nexport default LessThanOrEqualTo;\n","/**\n * @module ol/format/filter/Not\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nclass Not extends Filter {\n  /**\n   * @param {!import(\"./Filter.js\").default} condition Filter condition.\n   */\n  constructor(condition) {\n    super('Not');\n\n    /**\n     * @type {!import(\"./Filter.js\").default}\n     */\n    this.condition = condition;\n  }\n}\n\nexport default Not;\n","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nclass NotEqualTo extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  constructor(propertyName, expression, matchCase) {\n    super('PropertyIsNotEqualTo', propertyName, expression, matchCase);\n  }\n}\n\nexport default NotEqualTo;\n","/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two or more filter conditions.\n * @api\n */\nclass Or extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('Or', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default Or;\n","/**\n * @module ol/format/filter/ResourceId\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n *\n * @abstract\n */\nclass ResourceId extends Filter {\n  /**\n   * @param {!string} rid Resource ID.\n   */\n  constructor(rid) {\n    super('ResourceId');\n\n    /**\n     * @type {!string}\n     */\n    this.rid = rid;\n  }\n}\n\nexport default ResourceId;\n","/**\n * @module ol/format/filter/Within\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n * @api\n */\nclass Within extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, srsName) {\n    super('Within', geometryName, geometry, srsName);\n  }\n}\n\nexport default Within;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry && geometry.getType() === 'Point') {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection)\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n          if (\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n * @property {import(\"../Feature.js\").default|null} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>|null} segment Segment, or `null` if snapped to a vertex.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'snap', SnapEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'snap', Return>} SnapOnSignature\n */\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @fires SnapEvent\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SnapOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n      this.dispatchEvent(\n        new SnapEvent(SnapEventType.SNAP, {\n          vertex: evt.coordinate,\n          vertexPixel: evt.pixel,\n          feature: result.feature,\n          segment: result.segment,\n        })\n      );\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach((feature) => this.addFeature(feature));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_\n      ),\n      projection\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n    let closestFeature;\n    let closestSegment = null;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n            feature: closestFeature,\n            segment: closestSegment,\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n              closestFeature = segmentData.feature;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            closestSegment =\n              segmentData.feature.getGeometry().getType() === 'Circle'\n                ? null\n                : segmentData.segment;\n            minSquaredDistance = delta;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|null} options.segment Segment, or `null` if snapped to a vertex.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n    /**\n     * The segment closest to the snapped point, if snapped to a segment.\n     * @type {Array<import(\"../coordinate.js\").Coordinate>|null}\n     * @api\n     */\n    this.segment = options.segment;\n  }\n}\n","import RelateOp from './relate/RelateOp.js'\n\nexport {\n  RelateOp\n}\n","import RelateComputer from './RelateComputer.js'\nimport GeometryGraphOperation from '../GeometryGraphOperation.js'\nimport RectangleContains from '../predicate/RectangleContains.js'\nimport RectangleIntersects from '../predicate/RectangleIntersects.js'\nexport default class RelateOp extends GeometryGraphOperation {\n  constructor() {\n    super()\n    RelateOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._relate = null\n    if (arguments.length === 2) {\n      const g0 = arguments[0], g1 = arguments[1]\n      GeometryGraphOperation.constructor_.call(this, g0, g1)\n      this._relate = new RelateComputer(this._arg)\n    } else if (arguments.length === 3) {\n      const g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2]\n      GeometryGraphOperation.constructor_.call(this, g0, g1, boundaryNodeRule)\n      this._relate = new RelateComputer(this._arg)\n    }\n  }\n  static equalsTopo(g1, g2) {\n    if (!g1.getEnvelopeInternal().equals(g2.getEnvelopeInternal())) return false\n    return RelateOp.relate(g1, g2).isEquals(g1.getDimension(), g2.getDimension())\n  }\n  static relate() {\n    if (arguments.length === 2) {\n      const a = arguments[0], b = arguments[1]\n      const relOp = new RelateOp(a, b)\n      const im = relOp.getIntersectionMatrix()\n      return im\n    } else if (arguments.length === 3) {\n      const a = arguments[0], b = arguments[1], boundaryNodeRule = arguments[2]\n      const relOp = new RelateOp(a, b, boundaryNodeRule)\n      const im = relOp.getIntersectionMatrix()\n      return im\n    }\n  }\n  static overlaps(g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    return new RelateOp(g1, g2).getIntersectionMatrix().isOverlaps(g1.getDimension(), g2.getDimension())\n  }\n  static disjoint(g1, g2) {\n    return !RelateOp.intersects(g1, g2)\n  }\n  static covers(g1, g2) {\n    if (g2.getDimension() === 2 && g1.getDimension() < 2) \n      return false\n    \n    if (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) \n      return false\n    \n    if (!g1.getEnvelopeInternal().covers(g2.getEnvelopeInternal())) return false\n    if (g1.isRectangle()) \n      return true\n    \n    return new RelateOp(g1, g2).getIntersectionMatrix().isCovers()\n  }\n  static intersects(g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    if (g1.isRectangle()) \n      return RectangleIntersects.intersects(g1, g2)\n    \n    if (g2.isRectangle()) \n      return RectangleIntersects.intersects(g2, g1)\n    \n    if (g1.isGeometryCollection() || g2.isGeometryCollection()) {\n      const r = false\n      for (let i = 0; i < g1.getNumGeometries(); i++) \n        for (let j = 0; j < g2.getNumGeometries(); j++) \n          if (RelateOp.intersects(g1.getGeometryN(i), g2.getGeometryN(j))) \n            return true\n          \n        \n      \n      return false\n    }\n    return new RelateOp(g1, g2).getIntersectionMatrix().isIntersects()\n  }\n  static touches(g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    return new RelateOp(g1, g2).getIntersectionMatrix().isTouches(g1.getDimension(), g2.getDimension())\n  }\n  static crosses(g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    return new RelateOp(g1, g2).getIntersectionMatrix().isCrosses(g1.getDimension(), g2.getDimension())\n  }\n  static contains(g1, g2) {\n    if (g2.getDimension() === 2 && g1.getDimension() < 2) \n      return false\n    \n    if (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) \n      return false\n    \n    if (!g1.getEnvelopeInternal().contains(g2.getEnvelopeInternal())) return false\n    if (g1.isRectangle()) \n      return RectangleContains.contains(g1, g2)\n    \n    return new RelateOp(g1, g2).getIntersectionMatrix().isContains()\n  }\n  getIntersectionMatrix() {\n    return this._relate.computeIM()\n  }\n}\n","import IntersectionMatrix from '../../geom/IntersectionMatrix.js'\nimport EdgeEndBuilder from './EdgeEndBuilder.js'\nimport NodeMap from '../../geomgraph/NodeMap.js'\nimport RelateNodeFactory from './RelateNodeFactory.js'\nimport Assert from '../../util/Assert.js'\nimport PointLocator from '../../algorithm/PointLocator.js'\nimport Location from '../../geom/Location.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector.js'\nexport default class RelateComputer {\n  constructor() {\n    RelateComputer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._ptLocator = new PointLocator()\n    this._arg = null\n    this._nodes = new NodeMap(new RelateNodeFactory())\n    this._im = null\n    this._isolatedEdges = new ArrayList()\n    this._invalidPoint = null\n    const arg = arguments[0]\n    this._arg = arg\n  }\n  insertEdgeEnds(ee) {\n    for (let i = ee.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      this._nodes.add(e)\n    }\n  }\n  computeProperIntersectionIM(intersector, im) {\n    const dimA = this._arg[0].getGeometry().getDimension()\n    const dimB = this._arg[1].getGeometry().getDimension()\n    const hasProper = intersector.hasProperIntersection()\n    const hasProperInterior = intersector.hasProperInteriorIntersection()\n    if (dimA === 2 && dimB === 2) {\n      if (hasProper) im.setAtLeast('212101212')\n    } else if (dimA === 2 && dimB === 1) {\n      if (hasProper) im.setAtLeast('FFF0FFFF2')\n      if (hasProperInterior) im.setAtLeast('1FFFFF1FF')\n    } else if (dimA === 1 && dimB === 2) {\n      if (hasProper) im.setAtLeast('F0FFFFFF2')\n      if (hasProperInterior) im.setAtLeast('1F1FFFFFF')\n    } else if (dimA === 1 && dimB === 1) {\n      if (hasProperInterior) im.setAtLeast('0FFFFFFFF')\n    }\n  }\n  labelIsolatedEdges(thisIndex, targetIndex) {\n    for (let ei = this._arg[thisIndex].getEdgeIterator(); ei.hasNext(); ) {\n      const e = ei.next()\n      if (e.isIsolated()) {\n        this.labelIsolatedEdge(e, targetIndex, this._arg[targetIndex].getGeometry())\n        this._isolatedEdges.add(e)\n      }\n    }\n  }\n  labelIsolatedEdge(e, targetIndex, target) {\n    if (target.getDimension() > 0) {\n      const loc = this._ptLocator.locate(e.getCoordinate(), target)\n      e.getLabel().setAllLocations(targetIndex, loc)\n    } else {\n      e.getLabel().setAllLocations(targetIndex, Location.EXTERIOR)\n    }\n  }\n  computeIM() {\n    const im = new IntersectionMatrix()\n    im.set(Location.EXTERIOR, Location.EXTERIOR, 2)\n    if (!this._arg[0].getGeometry().getEnvelopeInternal().intersects(this._arg[1].getGeometry().getEnvelopeInternal())) {\n      this.computeDisjointIM(im)\n      return im\n    }\n    this._arg[0].computeSelfNodes(this._li, false)\n    this._arg[1].computeSelfNodes(this._li, false)\n    const intersector = this._arg[0].computeEdgeIntersections(this._arg[1], this._li, false)\n    this.computeIntersectionNodes(0)\n    this.computeIntersectionNodes(1)\n    this.copyNodesAndLabels(0)\n    this.copyNodesAndLabels(1)\n    this.labelIsolatedNodes()\n    this.computeProperIntersectionIM(intersector, im)\n    const eeBuilder = new EdgeEndBuilder()\n    const ee0 = eeBuilder.computeEdgeEnds(this._arg[0].getEdgeIterator())\n    this.insertEdgeEnds(ee0)\n    const ee1 = eeBuilder.computeEdgeEnds(this._arg[1].getEdgeIterator())\n    this.insertEdgeEnds(ee1)\n    this.labelNodeEdges()\n    this.labelIsolatedEdges(0, 1)\n    this.labelIsolatedEdges(1, 0)\n    this.updateIM(im)\n    return im\n  }\n  labelNodeEdges() {\n    for (let ni = this._nodes.iterator(); ni.hasNext(); ) {\n      const node = ni.next()\n      node.getEdges().computeLabelling(this._arg)\n    }\n  }\n  copyNodesAndLabels(argIndex) {\n    for (let i = this._arg[argIndex].getNodeIterator(); i.hasNext(); ) {\n      const graphNode = i.next()\n      const newNode = this._nodes.addNode(graphNode.getCoordinate())\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex))\n    }\n  }\n  labelIntersectionNodes(argIndex) {\n    for (let i = this._arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\n      const e = i.next()\n      const eLoc = e.getLabel().getLocation(argIndex)\n      for (let eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n        const ei = eiIt.next()\n        const n = this._nodes.find(ei.coord)\n        if (n.getLabel().isNull(argIndex)) \n          if (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else n.setLabel(argIndex, Location.INTERIOR)\n        \n      }\n    }\n  }\n  labelIsolatedNode(n, targetIndex) {\n    const loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry())\n    n.getLabel().setAllLocations(targetIndex, loc)\n  }\n  computeIntersectionNodes(argIndex) {\n    for (let i = this._arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\n      const e = i.next()\n      const eLoc = e.getLabel().getLocation(argIndex)\n      for (let eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n        const ei = eiIt.next()\n        const n = this._nodes.addNode(ei.coord)\n        if (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else \n          if (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR)\n        \n      }\n    }\n  }\n  labelIsolatedNodes() {\n    for (let ni = this._nodes.iterator(); ni.hasNext(); ) {\n      const n = ni.next()\n      const label = n.getLabel()\n      Assert.isTrue(label.getGeometryCount() > 0, 'node with empty label found')\n      if (n.isIsolated()) \n        if (label.isNull(0)) this.labelIsolatedNode(n, 0); else this.labelIsolatedNode(n, 1)\n      \n    }\n  }\n  updateIM(im) {\n    for (let ei = this._isolatedEdges.iterator(); ei.hasNext(); ) {\n      const e = ei.next()\n      e.updateIM(im)\n    }\n    for (let ni = this._nodes.iterator(); ni.hasNext(); ) {\n      const node = ni.next()\n      node.updateIM(im)\n      node.updateIMFromEdges(im)\n    }\n  }\n  computeDisjointIM(im) {\n    const ga = this._arg[0].getGeometry()\n    if (!ga.isEmpty()) {\n      im.set(Location.INTERIOR, Location.EXTERIOR, ga.getDimension())\n      im.set(Location.BOUNDARY, Location.EXTERIOR, ga.getBoundaryDimension())\n    }\n    const gb = this._arg[1].getGeometry()\n    if (!gb.isEmpty()) {\n      im.set(Location.EXTERIOR, Location.INTERIOR, gb.getDimension())\n      im.set(Location.EXTERIOR, Location.BOUNDARY, gb.getBoundaryDimension())\n    }\n  }\n}\n","import EdgeEnd from '../../geomgraph/EdgeEnd.js'\nimport Label from '../../geomgraph/Label.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class EdgeEndBuilder {\n  computeEdgeEnds() {\n    if (arguments.length === 1) {\n      const edges = arguments[0]\n      const l = new ArrayList()\n      for (let i = edges; i.hasNext(); ) {\n        const e = i.next()\n        this.computeEdgeEnds(e, l)\n      }\n      return l\n    } else if (arguments.length === 2) {\n      const edge = arguments[0], l = arguments[1]\n      const eiList = edge.getEdgeIntersectionList()\n      eiList.addEndpoints()\n      const it = eiList.iterator()\n      let eiPrev = null\n      let eiCurr = null\n      if (!it.hasNext()) return null\n      let eiNext = it.next()\n      do {\n        eiPrev = eiCurr\n        eiCurr = eiNext\n        eiNext = null\n        if (it.hasNext()) eiNext = it.next()\n        if (eiCurr !== null) {\n          this.createEdgeEndForPrev(edge, l, eiCurr, eiPrev)\n          this.createEdgeEndForNext(edge, l, eiCurr, eiNext)\n        }\n      } while (eiCurr !== null)\n    }\n  }\n  createEdgeEndForNext(edge, l, eiCurr, eiNext) {\n    const iNext = eiCurr.segmentIndex + 1\n    if (iNext >= edge.getNumPoints() && eiNext === null) return null\n    let pNext = edge.getCoordinate(iNext)\n    if (eiNext !== null && eiNext.segmentIndex === eiCurr.segmentIndex) pNext = eiNext.coord\n    const e = new EdgeEnd(edge, eiCurr.coord, pNext, new Label(edge.getLabel()))\n    l.add(e)\n  }\n  createEdgeEndForPrev(edge, l, eiCurr, eiPrev) {\n    let iPrev = eiCurr.segmentIndex\n    if (eiCurr.dist === 0.0) {\n      if (iPrev === 0) return null\n      iPrev--\n    }\n    let pPrev = edge.getCoordinate(iPrev)\n    if (eiPrev !== null && eiPrev.segmentIndex >= iPrev) pPrev = eiPrev.coord\n    const label = new Label(edge.getLabel())\n    label.flip()\n    const e = new EdgeEnd(edge, eiCurr.coord, pPrev, label)\n    l.add(e)\n  }\n}\n","import EdgeEndBundleStar from './EdgeEndBundleStar.js'\nimport RelateNode from './RelateNode.js'\nimport NodeFactory from '../../geomgraph/NodeFactory.js'\nexport default class RelateNodeFactory extends NodeFactory {\n  constructor() {\n    super()\n  }\n  createNode(coord) {\n    return new RelateNode(coord, new EdgeEndBundleStar())\n  }\n}\n","import EdgeEndStar from '../../geomgraph/EdgeEndStar.js'\nimport EdgeEndBundle from './EdgeEndBundle.js'\nexport default class EdgeEndBundleStar extends EdgeEndStar {\n  constructor() {\n    super()\n  }\n  updateIM(im) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const esb = it.next()\n      esb.updateIM(im)\n    }\n  }\n  insert(e) {\n    let eb = this._edgeMap.get(e)\n    if (eb === null) {\n      eb = new EdgeEndBundle(e)\n      this.insertEdgeEnd(e, eb)\n    } else {\n      eb.insert(e)\n    }\n  }\n}\n","import Location from '../../geom/Location.js'\nimport EdgeEnd from '../../geomgraph/EdgeEnd.js'\nimport Position from '../../geomgraph/Position.js'\nimport GeometryGraph from '../../geomgraph/GeometryGraph.js'\nimport Label from '../../geomgraph/Label.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Edge from '../../geomgraph/Edge.js'\nexport default class EdgeEndBundle extends EdgeEnd {\n  constructor() {\n    super()\n    EdgeEndBundle.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edgeEnds = new ArrayList()\n    if (arguments.length === 1) {\n      const e = arguments[0]\n      EdgeEndBundle.constructor_.call(this, null, e)\n    } else if (arguments.length === 2) {\n      const boundaryNodeRule = arguments[0], e = arguments[1]\n      EdgeEnd.constructor_.call(this, e.getEdge(), e.getCoordinate(), e.getDirectedCoordinate(), new Label(e.getLabel()))\n      this.insert(e)\n    }\n  }\n  insert(e) {\n    this._edgeEnds.add(e)\n  }\n  print(out) {\n    out.println('EdgeEndBundle--> Label: ' + this._label)\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ee = it.next()\n      ee.print(out)\n      out.println()\n    }\n  }\n  iterator() {\n    return this._edgeEnds.iterator()\n  }\n  getEdgeEnds() {\n    return this._edgeEnds\n  }\n  computeLabelOn(geomIndex, boundaryNodeRule) {\n    let boundaryCount = 0\n    let foundInterior = false\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const loc = e.getLabel().getLocation(geomIndex)\n      if (loc === Location.BOUNDARY) boundaryCount++\n      if (loc === Location.INTERIOR) foundInterior = true\n    }\n    let loc = Location.NONE\n    if (foundInterior) loc = Location.INTERIOR\n    if (boundaryCount > 0) \n      loc = GeometryGraph.determineBoundary(boundaryNodeRule, boundaryCount)\n    \n    this._label.setLocation(geomIndex, loc)\n  }\n  computeLabelSide(geomIndex, side) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      if (e.getLabel().isArea()) {\n        const loc = e.getLabel().getLocation(geomIndex, side)\n        if (loc === Location.INTERIOR) {\n          this._label.setLocation(geomIndex, side, Location.INTERIOR)\n          return null\n        } else if (loc === Location.EXTERIOR) {\n          this._label.setLocation(geomIndex, side, Location.EXTERIOR)\n        }\n      }\n    }\n  }\n  getLabel() {\n    return this._label\n  }\n  computeLabelSides(geomIndex) {\n    this.computeLabelSide(geomIndex, Position.LEFT)\n    this.computeLabelSide(geomIndex, Position.RIGHT)\n  }\n  updateIM(im) {\n    Edge.updateIM(this._label, im)\n  }\n  computeLabel(boundaryNodeRule) {\n    let isArea = false\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      if (e.getLabel().isArea()) isArea = true\n    }\n    if (isArea) this._label = new Label(Location.NONE, Location.NONE, Location.NONE); else this._label = new Label(Location.NONE)\n    for (let i = 0; i < 2; i++) {\n      this.computeLabelOn(i, boundaryNodeRule)\n      if (isArea) this.computeLabelSides(i)\n    }\n  }\n}\n","import Node from '../../geomgraph/Node.js'\nexport default class RelateNode extends Node {\n  constructor() {\n    super()\n    RelateNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const coord = arguments[0], edges = arguments[1]\n    Node.constructor_.call(this, coord, edges)\n  }\n  computeIM(im) {\n    im.setAtLeastIfValid(this._label.getLocation(0), this._label.getLocation(1), 0)\n  }\n  updateIMFromEdges(im) {\n    this._edges.updateIM(im)\n  }\n}\n","import LineString from '../../geom/LineString.js'\nimport Polygon from '../../geom/Polygon.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport Point from '../../geom/Point.js'\nexport default class RectangleContains {\n  constructor() {\n    RectangleContains.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rectEnv = null\n    const rectangle = arguments[0]\n    this._rectEnv = rectangle.getEnvelopeInternal()\n  }\n  static contains(rectangle, b) {\n    const rc = new RectangleContains(rectangle)\n    return rc.contains(b)\n  }\n  isContainedInBoundary(geom) {\n    if (geom instanceof Polygon) return false\n    if (geom instanceof Point) return this.isPointContainedInBoundary(geom)\n    if (geom instanceof LineString) return this.isLineStringContainedInBoundary(geom)\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const comp = geom.getGeometryN(i)\n      if (!this.isContainedInBoundary(comp)) return false\n    }\n    return true\n  }\n  isLineSegmentContainedInBoundary(p0, p1) {\n    if (p0.equals(p1)) return this.isPointContainedInBoundary(p0)\n    if (p0.x === p1.x) {\n      if (p0.x === this._rectEnv.getMinX() || p0.x === this._rectEnv.getMaxX()) return true\n    } else if (p0.y === p1.y) {\n      if (p0.y === this._rectEnv.getMinY() || p0.y === this._rectEnv.getMaxY()) return true\n    }\n    return false\n  }\n  isLineStringContainedInBoundary(line) {\n    const seq = line.getCoordinateSequence()\n    const p0 = new Coordinate()\n    const p1 = new Coordinate()\n    for (let i = 0; i < seq.size() - 1; i++) {\n      seq.getCoordinate(i, p0)\n      seq.getCoordinate(i + 1, p1)\n      if (!this.isLineSegmentContainedInBoundary(p0, p1)) return false\n    }\n    return true\n  }\n  isPointContainedInBoundary() {\n    if (arguments[0] instanceof Point) {\n      const point = arguments[0]\n      return this.isPointContainedInBoundary(point.getCoordinate())\n    } else if (arguments[0] instanceof Coordinate) {\n      const pt = arguments[0]\n      return pt.x === this._rectEnv.getMinX() || pt.x === this._rectEnv.getMaxX() || pt.y === this._rectEnv.getMinY() || pt.y === this._rectEnv.getMaxY()\n    }\n  }\n  contains(geom) {\n    if (!this._rectEnv.contains(geom.getEnvelopeInternal())) return false\n    if (this.isContainedInBoundary(geom)) return false\n    return true\n  }\n}\n","import Coordinate from '../../geom/Coordinate.js'\nimport Polygon from '../../geom/Polygon.js'\nimport RectangleLineIntersector from '../../algorithm/RectangleLineIntersector.js'\nimport ShortCircuitedGeometryVisitor from '../../geom/util/ShortCircuitedGeometryVisitor.js'\nimport SimplePointInAreaLocator from '../../algorithm/locate/SimplePointInAreaLocator.js'\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter.js'\nexport default class RectangleIntersects {\n  constructor() {\n    RectangleIntersects.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rectangle = null\n    this._rectEnv = null\n    const rectangle = arguments[0]\n    this._rectangle = rectangle\n    this._rectEnv = rectangle.getEnvelopeInternal()\n  }\n  static intersects(rectangle, b) {\n    const rp = new RectangleIntersects(rectangle)\n    return rp.intersects(b)\n  }\n  intersects(geom) {\n    if (!this._rectEnv.intersects(geom.getEnvelopeInternal())) return false\n    const visitor = new EnvelopeIntersectsVisitor(this._rectEnv)\n    visitor.applyTo(geom)\n    if (visitor.intersects()) return true\n    const ecpVisitor = new GeometryContainsPointVisitor(this._rectangle)\n    ecpVisitor.applyTo(geom)\n    if (ecpVisitor.containsPoint()) return true\n    const riVisitor = new RectangleIntersectsSegmentVisitor(this._rectangle)\n    riVisitor.applyTo(geom)\n    if (riVisitor.intersects()) return true\n    return false\n  }\n}\nclass EnvelopeIntersectsVisitor extends ShortCircuitedGeometryVisitor {\n  constructor() {\n    super()\n    EnvelopeIntersectsVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rectEnv = null\n    this._intersects = false\n    const rectEnv = arguments[0]\n    this._rectEnv = rectEnv\n  }\n  intersects() {\n    return this._intersects\n  }\n  visit(element) {\n    const elementEnv = element.getEnvelopeInternal()\n    if (!this._rectEnv.intersects(elementEnv)) \n      return null\n    \n    if (this._rectEnv.contains(elementEnv)) {\n      this._intersects = true\n      return null\n    }\n    if (elementEnv.getMinX() >= this._rectEnv.getMinX() && elementEnv.getMaxX() <= this._rectEnv.getMaxX()) {\n      this._intersects = true\n      return null\n    }\n    if (elementEnv.getMinY() >= this._rectEnv.getMinY() && elementEnv.getMaxY() <= this._rectEnv.getMaxY()) {\n      this._intersects = true\n      return null\n    }\n  }\n  isDone() {\n    return this._intersects === true\n  }\n}\nclass GeometryContainsPointVisitor extends ShortCircuitedGeometryVisitor {\n  constructor() {\n    super()\n    GeometryContainsPointVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rectSeq = null\n    this._rectEnv = null\n    this._containsPoint = false\n    const rectangle = arguments[0]\n    this._rectSeq = rectangle.getExteriorRing().getCoordinateSequence()\n    this._rectEnv = rectangle.getEnvelopeInternal()\n  }\n  visit(geom) {\n    if (!(geom instanceof Polygon)) return null\n    const elementEnv = geom.getEnvelopeInternal()\n    if (!this._rectEnv.intersects(elementEnv)) return null\n    const rectPt = new Coordinate()\n    for (let i = 0; i < 4; i++) {\n      this._rectSeq.getCoordinate(i, rectPt)\n      if (!elementEnv.contains(rectPt)) continue\n      if (SimplePointInAreaLocator.containsPointInPolygon(rectPt, geom)) {\n        this._containsPoint = true\n        return null\n      }\n    }\n  }\n  containsPoint() {\n    return this._containsPoint\n  }\n  isDone() {\n    return this._containsPoint === true\n  }\n}\nclass RectangleIntersectsSegmentVisitor extends ShortCircuitedGeometryVisitor {\n  constructor() {\n    super()\n    RectangleIntersectsSegmentVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rectEnv = null\n    this._rectIntersector = null\n    this._hasIntersection = false\n    this._p0 = new Coordinate()\n    this._p1 = new Coordinate()\n    const rectangle = arguments[0]\n    this._rectEnv = rectangle.getEnvelopeInternal()\n    this._rectIntersector = new RectangleLineIntersector(this._rectEnv)\n  }\n  intersects() {\n    return this._hasIntersection\n  }\n  isDone() {\n    return this._hasIntersection === true\n  }\n  visit(geom) {\n    const elementEnv = geom.getEnvelopeInternal()\n    if (!this._rectEnv.intersects(elementEnv)) return null\n    const lines = LinearComponentExtracter.getLines(geom)\n    this.checkIntersectionWithLineStrings(lines)\n  }\n  checkIntersectionWithLineStrings(lines) {\n    for (let i = lines.iterator(); i.hasNext(); ) {\n      const testLine = i.next()\n      this.checkIntersectionWithSegments(testLine)\n      if (this._hasIntersection) return null\n    }\n  }\n  checkIntersectionWithSegments(testLine) {\n    const seq1 = testLine.getCoordinateSequence()\n    for (let j = 1; j < seq1.size(); j++) {\n      seq1.getCoordinate(j - 1, this._p0)\n      seq1.getCoordinate(j, this._p1)\n      if (this._rectIntersector.intersects(this._p0, this._p1)) {\n        this._hasIntersection = true\n        return null\n      }\n    }\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport RobustLineIntersector from './RobustLineIntersector.js'\nimport Envelope from '../geom/Envelope.js'\nexport default class RectangleLineIntersector {\n  constructor() {\n    RectangleLineIntersector.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._rectEnv = null\n    this._diagUp0 = null\n    this._diagUp1 = null\n    this._diagDown0 = null\n    this._diagDown1 = null\n    const rectEnv = arguments[0]\n    this._rectEnv = rectEnv\n    this._diagUp0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMinY())\n    this._diagUp1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMaxY())\n    this._diagDown0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMaxY())\n    this._diagDown1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMinY())\n  }\n  intersects(p0, p1) {\n    const segEnv = new Envelope(p0, p1)\n    if (!this._rectEnv.intersects(segEnv)) return false\n    if (this._rectEnv.intersects(p0)) return true\n    if (this._rectEnv.intersects(p1)) return true\n    if (p0.compareTo(p1) > 0) {\n      const tmp = p0\n      p0 = p1\n      p1 = tmp\n    }\n    let isSegUpwards = false\n    if (p1.y > p0.y) isSegUpwards = true\n    if (isSegUpwards) \n      this._li.computeIntersection(p0, p1, this._diagDown0, this._diagDown1)\n    else \n      this._li.computeIntersection(p0, p1, this._diagUp0, this._diagUp1)\n    \n    if (this._li.hasIntersection()) return true\n    return false\n  }\n}\n","import GeometryCollection from '../GeometryCollection.js'\nexport default class ShortCircuitedGeometryVisitor {\n  constructor() {\n    ShortCircuitedGeometryVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._isDone = false\n  }\n  applyTo(geom) {\n    for (let i = 0; i < geom.getNumGeometries() && !this._isDone; i++) {\n      const element = geom.getGeometryN(i)\n      if (!(element instanceof GeometryCollection)) {\n        this.visit(element)\n        if (this.isDone()) {\n          this._isDone = true\n          return null\n        }\n      } else {\n        this.applyTo(element)\n      }\n    }\n  }\n}\n"],"names":[],"version":3,"file":"draw.a9b6d309.js.map","sourceRoot":"/__parcel_source_root/"}